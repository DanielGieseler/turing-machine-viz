{"version":3,"sources":["webpack:///main.bundle.js","webpack:///./src/main.js","webpack:///external \"jQuery\"","webpack:///./src/sharing/format.js","webpack:///./src/storage.js","webpack:///./src/util.js","webpack:///external \"Promise\"","webpack:///./src/TMDocument.js","webpack:///./src/examples.js","webpack:///./src/parser.js","webpack:///./src/sharing/gist.js","webpack:///./src/sharing/import.js","webpack:///external \"ace\"","webpack:///external \"jsyaml\"","webpack:///./src/examples/_template.yaml","webpack:///./src/examples/binaryAdd.yaml","webpack:///./src/examples/binaryIncrement.yaml","webpack:///./src/examples/binaryMult.yaml","webpack:///./src/examples/busyBeaver3.yaml","webpack:///./src/examples/busyBeaver4.yaml","webpack:///./src/examples/copy1s.yaml","webpack:///./src/examples/divisibleBy3.yaml","webpack:///./src/examples/divisibleBy3Base10.yaml","webpack:///./src/examples/lengthMult.yaml","webpack:///./src/examples/matchBinaryStrings.yaml","webpack:///./src/examples/matchThreeLengths.yaml","webpack:///./src/examples/palindrome.yaml","webpack:///./src/examples/powersOfTwo.yaml","webpack:///./src/examples/repeat01.yaml","webpack:///./src/examples/unaryMult.yaml","webpack:///./src/DocumentMenu.js","webpack:///./src/TMDocumentController.js","webpack:///./src/TMSimulator.js","webpack:///^\\.\\/.*\\.yaml$","webpack:///./src/kbdshortcuts.js","webpack:///./src/sharing/CheckboxTable.js","webpack:///./src/sharing/FileReaderPromise.js","webpack:///./src/sharing/export-panel.js","webpack:///./src/sharing/import-panel.js","webpack:///external \"Clipboard\""],"names":["main","webpackJsonp_name_","module","exports","__webpack_require__","getId","id","document","getElementById","importDocument","obj","menu","duplicate","select","type","TMDocumentController","DocumentMenu","examples","toDocFragment","ace","$","config","loadModule","addWarning","html","insertAdjacentHTML","canUseLocalStorage","isIEUnder11","Function","isIOS","test","navigator","userAgent","window","MSStream","prop","importArgs","dialogNode","runImport","$importPanel","one","init","$dialog","gistIDForm","exportPanel","getCurrentDocument","controller","save","currentDocument","getIsSynced","bind","gistContainer","downloadContainer","copyContentsButton","textarea","querySelector","docGroup","createElement","label","appendChild","exampleGroup","list","map","prototype","optionFromDocument","group","storagePrefix","firsttimeDocID","duplicateDocument","newBlankDocument","newDocument","editor","insertSnippet","blankTemplate","loadEditorSource","onChange","doc","opts","setBackingDocument","forceLoadDocument","openDocument","refreshEditMenu","renameExample","wasExample","renameLink","deleteLink","isExample","textContent","addEventListener","removeAttribute","setAttribute","removeEventListener","$renameDialog","callback","forEach","item","e","preventDefault","modal","keyboard","focus","deleteDocument","discardReset","saveReset","renameBox","on","value","currentOption","text","newName","rename","getButton","container","sim","ed","parentNode","simulator","editorAlerts","run","step","reset","load","revert","setTheme","commands","addCommand","name","bindKey","mac","win","exec","session","setUseWrapMode","saveCurrentDocID","isReloading","addOutsideChangeListener","docID","getDocument","setTimeout","jQuery","mapKeys","mapping","input","output","Object","keys","fromKey","toKey","checkData","sourceCode","InvalidDocumentError","_","isString","message","this","stack","Error","jsyaml","docToYaml","positionTable","editorSourceCode","yamlToDoc","invert","stringifyDocument","flow","omitBy","x","update","mapValues","pos","fixed","y","partialRight","safeDump","flowLevel","lineWidth","noRefs","noCompatMode","parseDocument","safeLoad","defaults","px","py","create","constructor","YAMLException","mod","localStorage","setItem","removeItem","RAMStorage","freeze","length","key","n","getItem","hasOwnProperty","call","val","String","clear","KeyValueStorage","s","read","write","remove","addStorageListener","listener","storageArea","removeStorageListener","nonNull","coalesce","a","b","applyMaybe","f","getFirst","xs","i","array","result","createDocumentFragment","Promise","TMDocument","preset","get","defineProperties","prefix","useFallbackGet","set","enumerable","proto","getPrototypeOf","desc","getOwnPropertyDescriptor","util","truncateCoords","decimalPlaces","truncate","Math","round","multiplier","pow","pick","path","join","stringProp","store","propDescriptors","parsePositionTable","stringifyPositionTable","dataKeys","copyFrom","other","IDFromNameStorageKey","string","re","matches","JSON","parse","stringify","requireExample","isExampleID","fromPairs","examplePairs","pair","hasID","TMSpecError","reason","details","parseSpec","str","info","detailsForBlank","suggestion","blank","startState","checkTableType","table","synonyms","parseSynonyms","parseTable","problemValue","actionVal","parseInstruction","synonym","stateObj","state","symbol","makeInstruction","move","checkTarget","instruct","parseInstructionString","parseInstructionObject","moveLeft","moveRight","badKey","every","TM","MoveHead","left","L","right","R","writeStr","defineProperty","code","showLoc","header","location","sentences","filter","identity","splice","promisifyAjax","xhr","resolve","reject","onCancel","then","jqXHR","textStatus","errorThrown","status","error","abort","getGist","gistID","ajax","url","dataType","accepts","createGist","payload","data","cancellation","decodeFormURLComponent","decodeURIComponent","replace","queryParams","queryString","decode","split","ImportDialog","node","titleNode","bodyNode","footerNode","cancelButtonNode","d3","append","attr","class","data-dismiss","__onClose","appendPanel","div","titleHTML","panel","appendListPanel","emptySelection","title","selectAll","enter","appendTablePanel","headers","each","d","td","listNondocuments","dialogBody","nondocs","disclosureTitle","isEmptyNonDocs","collapseId","href","role","data-toggle","otherError","filename","errorString","classed","badDoc","badYAML","tooLarge","wrongType","parseFiles","sizelimit","files","docfiles","file","search","push","truncated","size","content","FileReaderPromise","readAsText","format","tuple","documentFiles","nonDocumentFiles","showSizeKB","ceil","toFixed","pickMultiple","args","citeNode","dialog","importDocuments","p","createTextNode","ctable","CheckboxTable","importButton","property","names","getCheckedValues","has","disabled","isCheckedEmpty","pickNone","citeLink","body","joinNodes","nodes","wrapTag","tagName","tag","gistDescriptionLink","link","externalLink","description","target","importCommon","MAX_FILESIZE","filesPromise","setBodyChildNodes","values","toArray","show","promise","undefined","parsed","close","docs","concat","reverse","messageForError","waitForDialog","onClose","cancel","createElementHTML","innerHTML","element","statusText","pre","resetURL","console","history","replaceState","params","substring","importGist","assign","empty","backdrop","isEmpty","importLocalFiles","TypeError","makeOption","__storagePrefix","doclist","DocumentList","render","selectDocID","getSavedCurrentDocID","self","option","newOption","storageKey","readList","findOptionByDocID","replaceChild","selected","datum","selectedOptions","opt","currentDocID","entry","exit","insert","__prepend","insertBefore","firstChild","index","selectedIndex","didDeleteEntry","deleteIndex","newID","Date","now","add","__list","unshift","writeList","deleted","containers","buttons","TMSimulator","edit","setOptions","mode","tabSize","useSoftTabs","minLines","maxLines","$blockScrolling","Infinity","editorButtons","revertEditorSource","__document","writable","aceAnnotationFromYAMLException","row","mark","line","column","parser","UndoManager","require","keepUndoHistory","diagramSource","editorSource","setEditorValue","setUndoManager","isSynced","showCorruptDiagramAlert","hasValidDiagram","getValue","setValue","setAlertErrors","errors","alerts","annot","lineNum","gotoLine","event","setAnnotations","setLoadButtonSuccess","didSucceed","btn-success","btn-primary","Boolean","__isSynced","removeListener","enquote","revertName","trim","isNewDiagram","machine","isRunning","all","rebindStepRun","stepButton","runButton","runHTML","pauseHTML","onHaltedChange","isHalted","onRunningChange","watchInit","oldval","TMViz","__sourceCode","spec","posTable","__machine","rebindButtons","htmlForRunButton","htmlForPauseButton","enable","webpackContext","req","webpackContextResolve","./_template.yaml","./binaryAdd.yaml","./binaryIncrement.yaml","./binaryMult.yaml","./busyBeaver3.yaml","./busyBeaver4.yaml","./copy1s.yaml","./divisibleBy3.yaml","./divisibleBy3Base10.yaml","./lengthMult.yaml","./matchBinaryStrings.yaml","./matchThreeLengths.yaml","./palindrome.yaml","./powersOfTwo.yaml","./repeat01.yaml","./unaryMult.yaml","renderTable","tbody","tr","abbreviateKey","keylistToHTML","createGetKeylist","platform","altToOption","getKeylist","entries","head","headerRow","headerCheckbox","getCheckboxes","checked","box","refresh","setHeaders","setData","th","order","headerBox","indeterminate","boxes","total","arguments","reader","FileReader","apply","addSelectOnFocus","showTransientTooltip","$element","options","tooltip","showCopiedTooltip","placement","generateGist","button","contents","oldButtonText","response","showGeneratedGist","responseJSON","alert","urlInput","createGenerateGistButton","createDownloadLink","encodeURIComponent","download","canUseDownloadAttribute","className","setupDialog","gistPromise","$alert","prependTo","find","setSelectionRange","clipboard","Clipboard","trigger","clearSelection","destroy","addClass","canUseCopyCommand","cleanup","externalHost","queryCommandSupported","hideDialog","nextDialog","classList","contains","docimport","panelBody","fileInput","importFilesButton","importContentsButton","style","position","importDocumentContents","createCloseIcon","aria-label","showImportContentOutcome","showErrorDetails","detailsContainer","statusContainer","width","top","transform","statusSummary","transition","delay","duration"],"mappings":"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","file":"main.bundle.js","sourcesContent":["var main =\nwebpackJsonp_name_([1],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// main entry point for index.html.\n\t// important: make sure to coordinate variables and elements between the HTML and JS\n\t'use strict';\n\t\n\t/* eslint-env browser */\n\tvar TMDocumentController = __webpack_require__(38),\n\t    DocumentMenu = __webpack_require__(37),\n\t    examples = __webpack_require__(12),\n\t    toDocFragment = __webpack_require__(7).toDocFragment;\n\tvar ace = __webpack_require__(17);\n\tvar $ = __webpack_require__(3); // for Bootstrap modal dialog events\n\t\n\t// load up front so going offline doesn't break anything\n\t// (for snippet placeholders, used by \"New blank document\")\n\tace.config.loadModule('ace/ext/language_tools');\n\t\n\tfunction getId(id) { return document.getElementById(id); }\n\t\n\t\n\t//////////////////////////\n\t// Compatibility Checks //\n\t//////////////////////////\n\t\n\t(function () {\n\t  function addWarning(html) {\n\t    getId('diagram-column').insertAdjacentHTML('afterbegin', html);\n\t  }\n\t\n\t  // Warn when falling back to RAM-only storage\n\t  // NB. This mainly covers local storage errors and Safari's Private Browsing.\n\t  if (!__webpack_require__(6).canUseLocalStorage) {\n\t    addWarning('<div class=\"alert alert-info alert-dismissible\" role=\"alert\">' +\n\t      '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>' +\n\t      '<p>Local storage is unavailable. ' +\n\t      'Your browser could be in Private Browsing mode, or it might not support <a href=\"http://caniuse.com/#feat=namevalue-storage\" target=\"_blank\">local storage</a>.</p>' +\n\t      '<strong>Any changes will be lost after leaving the webpage.</strong>' +\n\t      '</div>');\n\t  }\n\t\n\t  /*\n\t  Warn for IE 10 and under, which misbehave and lack certain features.\n\t  Examples:\n\t    • IE 9 and under don't support .classList.\n\t    • IE 10's \"storage event is fired even on the originating document where it occurred.\"\n\t      http://caniuse.com/#feat=namevalue-storage\n\t  */\n\t\n\t  // Detect IE 10 and under (http://stackoverflow.com/a/16135889)\n\t  var isIEUnder11 = new Function('/*@cc_on return @_jscript_version; @*/')() < 11;\n\t  if (isIEUnder11) {\n\t    addWarning('<div class=\"alert alert-warning alert-dismissible\" role=\"alert\">' +\n\t      '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>' +\n\t      '<p><strong>Your <a href=\"http://whatbrowser.org\" target=\"_blank\">web browser</a> is out of date</strong> and does not support some features used by this program.<br>' +\n\t      '<em>The page may not work correctly, and data may be lost.</em></p>' +\n\t      'Please update your browser, or use another browser such as <a href=\"http://www.google.com/chrome/browser/\" target=\"_blank\">Chrome</a> or <a href=\"http://getfirefox.com\" target=\"_blank\">Firefox</a>.' +\n\t      '</div>');\n\t  }\n\t\n\t  // Warn about iOS local storage volatility\n\t  $(function () {\n\t    // Detect iOS (http://stackoverflow.com/a/9039885)\n\t    var isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\t    if (isIOS) {\n\t      getId('misc-tips-list').insertAdjacentHTML('afterbegin',\n\t        '<li><strong class=\"text-warning\">Important note for iOS</strong>: ' +\n\t        'iOS saves browser local storage in the cache folder, which is <strong>not backed up</strong>, and is ' +\n\t        '<q cite=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Browser_compatibility\"><strong>subject to occasional clean up</strong>, ' +\n\t        'at the behest of the OS, typically if space is short.</q></li>');\n\t    }\n\t  });\n\t}());\n\t\n\t\n\t/////////////////////\n\t// Import & Export //\n\t/////////////////////\n\t\n\tfunction importDocument(obj) {\n\t  // duplicate data into the menu, then open it.\n\t  menu.duplicate(obj, {select: true, type: 'open'});\n\t}\n\t\n\t$(function () {\n\t  // Enable buttons now that handlers are ready\n\t  $('.tm-needsready').prop('disabled', false);\n\t\n\t  // Run import from URL query (if any)\n\t  var importArgs = {\n\t    dialogNode: getId('importDialog'),\n\t    importDocument: importDocument\n\t  };\n\t  __webpack_require__(15).runImport(importArgs);\n\t  // Init import dialog\n\t  var $importPanel = $('#importPanel');\n\t  $importPanel.one('show.bs.modal', function () {\n\t    __webpack_require__(45).init({\n\t      $dialog: $importPanel,\n\t      gistIDForm: getId('gistIDForm'),\n\t      importArgs: importArgs\n\t    });\n\t  });\n\t  // Init export dialog\n\t  var exportPanel = getId('exportPanel');\n\t  __webpack_require__(44).init({\n\t    $dialog: $(exportPanel),\n\t    getCurrentDocument: function () {\n\t      controller.save(); // IMPORTANT: save changes, otherwise data model is out of date\n\t      return menu.currentDocument;\n\t    },\n\t    getIsSynced: controller.getIsSynced.bind(controller),\n\t    gistContainer: getId('shareGistContainer'),\n\t    downloadContainer: getId('exportDownloadContainer'),\n\t    copyContentsButton: getId('copyContentsButton'),\n\t    textarea: exportPanel.querySelector('textarea')\n\t  });\n\t});\n\t\n\t\n\t///////////////////\n\t// Document List //\n\t///////////////////\n\t\n\tvar menu = (function () {\n\t  var select = document.getElementById('tm-doc-menu');\n\t  // Group: Documents\n\t  var docGroup = document.createElement('optgroup');\n\t  docGroup.label = 'Documents';\n\t  select.appendChild(docGroup);\n\t  // Group: Examples\n\t  var exampleGroup = document.createElement('optgroup');\n\t  exampleGroup.label = 'Examples';\n\t  exampleGroup.appendChild(toDocFragment(examples.list.map(\n\t    DocumentMenu.prototype.optionFromDocument)));\n\t  select.appendChild(exampleGroup);\n\t\n\t  return new DocumentMenu({\n\t    menu: select,\n\t    group: docGroup,\n\t    storagePrefix: 'tm.docs',\n\t    firsttimeDocID: examples.firsttimeDocID\n\t  });\n\t})();\n\t\n\t\n\t/////////////////\n\t// \"Edit\" Menu //\n\t/////////////////\n\t\n\t(function () {\n\t  menu.onChange = function (doc, opts) {\n\t    switch (opts && opts.type) {\n\t      case 'duplicate':\n\t        controller.setBackingDocument(doc);\n\t        break;\n\t      case 'delete':\n\t        controller.forceLoadDocument(doc);\n\t        break;\n\t      default:\n\t        controller.openDocument(doc);\n\t    }\n\t    refreshEditMenu();\n\t  };\n\t\n\t  // Refresh the \"Edit\" menu items depending on document vs. example.\n\t  var refreshEditMenu = (function () {\n\t    var renameLink = document.querySelector('[data-target=\"#renameDialog\"]');\n\t    var deleteLink = document.querySelector('[data-target=\"#deleteDialog\"]');\n\t    var wasExample;\n\t    function renameExample() {\n\t      // duplicate, then rename the duplicate.\n\t      // how it works: switch to duplicate document ->\n\t      //   refreshEditMenu() enables rename dialog -> event bubbles up -> dialog opens.\n\t      // this might be the simplest way; Event.stopPropagation leaves the dropdown hanging.\n\t      duplicateDocument();\n\t    }\n\t\n\t    return function () {\n\t      var isExample = menu.currentDocument.isExample;\n\t      if (wasExample !== isExample) {\n\t        if (!isExample) {\n\t          renameLink.textContent = 'Rename…';\n\t          renameLink.removeEventListener('click', renameExample);\n\t          renameLink.setAttribute('data-toggle', 'modal');\n\t          deleteLink.textContent = 'Delete…';\n\t          deleteLink.setAttribute('data-target', '#deleteDialog');\n\t        } else {\n\t          renameLink.textContent = 'Rename a copy…';\n\t          renameLink.addEventListener('click', renameExample);\n\t          renameLink.removeAttribute('data-toggle');\n\t          deleteLink.textContent = 'Reset this example…';\n\t          deleteLink.setAttribute('data-target', '#resetExampleDialog');\n\t        }\n\t        wasExample = isExample;\n\t      }\n\t    };\n\t  }());\n\t  refreshEditMenu();\n\t\n\t  // only swap out the storage backing; don't affect views or undo history\n\t  function duplicateDocument() {\n\t    controller.save();\n\t    menu.duplicate(menu.currentDocument, {select: true});\n\t  }\n\t\n\t  function newBlankDocument() {\n\t    menu.newDocument({select: true});\n\t    // load up starter template\n\t    if (controller.editor.insertSnippet) { // async loaded\n\t      controller.editor.insertSnippet(examples.blankTemplate);\n\t      controller.loadEditorSource();\n\t    }\n\t  }\n\t\n\t  var $renameDialog = $(getId('renameDialog'));\n\t  [{id: 'tm-doc-action-duplicate', callback: duplicateDocument},\n\t  {id: 'tm-doc-action-newblank', callback: newBlankDocument}\n\t  ].forEach(function (item) {\n\t    document.getElementById(item.id).addEventListener('click', function (e) {\n\t      e.preventDefault();\n\t      item.callback(e);\n\t\n\t      $renameDialog.modal({keyboard: false})\n\t        .one('hidden.bs.modal', function () {\n\t          controller.editor.focus();\n\t        });\n\t    });\n\t  });\n\t}());\n\t\n\t\n\t/////////////\n\t// Dialogs //\n\t/////////////\n\t\n\t(function () {\n\t  // Rename\n\t  var $renameDialog = $(getId('renameDialog'));\n\t  var renameBox = getId('renameDialogInput');\n\t  $renameDialog\n\t    .on('show.bs.modal', function () {\n\t      renameBox.value = menu.currentOption.text;\n\t    })\n\t    .on('shown.bs.modal', function () {\n\t      renameBox.select();\n\t    })\n\t    // NB. remember data-keyboard=\"false\" on the triggering element,\n\t    // to prevent closing with Esc and causing a save.\n\t    // remark: an exception thrown on 'hide' prevents the dialog from closing,\n\t    // so save during 'hidden' instead.\n\t    .on('hidden.bs.modal', function () {\n\t      var newName = renameBox.value;\n\t      if (menu.currentOption.text !== newName) {\n\t        // TODO: report errors\n\t        menu.rename(newName);\n\t      }\n\t      renameBox.value = '';\n\t    });\n\t  document.getElementById('renameDialogForm').addEventListener('submit', function (e) {\n\t    e.preventDefault();\n\t    $renameDialog.modal('hide');\n\t  });\n\t\n\t  // Delete\n\t  function deleteDocument() {\n\t    menu.delete();\n\t  }\n\t  document.getElementById('tm-doc-action-delete').addEventListener('click', deleteDocument);\n\t\n\t  // Reset Example\n\t  function discardReset() {\n\t    menu.delete();\n\t    // load manually since example stays and selection doesn't change\n\t    controller.forceLoadDocument(menu.currentDocument);\n\t  }\n\t  function saveReset() {\n\t    menu.duplicate(menu.currentDocument, {select: false});\n\t    discardReset();\n\t  }\n\t  document.getElementById('tm-doc-action-resetdiscard').addEventListener('click', discardReset);\n\t  document.getElementById('tm-doc-action-resetsave').addEventListener('click', saveReset);\n\t}());\n\t\n\t////////////////\n\t// Controller //\n\t////////////////\n\t\n\tvar controller = (function () {\n\t  function getButton(container, type) {\n\t    return container.querySelector('button.tm-' + type);\n\t  }\n\t  var editor = document.getElementById('editor-container');\n\t  // button containers\n\t  var sim = document.getElementById('controls-container');\n\t  var ed = editor.parentNode;\n\t\n\t  return new TMDocumentController({\n\t    simulator: document.getElementById('machine-container'),\n\t    editorAlerts: document.getElementById('editor-alerts-container'),\n\t    editor: editor\n\t  }, {\n\t    simulator: {\n\t      run: getButton(sim, 'run'),\n\t      step: getButton(sim, 'step'),\n\t      reset: getButton(sim, 'reset')\n\t    },\n\t    editor: {\n\t      load: getButton(ed, 'editor-load'),\n\t      revert: getButton(ed, 'editor-revert')\n\t    }\n\t  }, menu.currentDocument);\n\t}());\n\t\n\tcontroller.editor.setTheme('ace/theme/chrome');\n\tcontroller.editor.commands.addCommand({\n\t  name: 'save',\n\t  bindKey: { mac: 'Cmd-S', win: 'Ctrl-S' },\n\t  exec: function () {\n\t    controller.loadEditorSource();\n\t  }\n\t});\n\tcontroller.editor.session.setUseWrapMode(true);\n\t$(function () {\n\t  try {\n\t    __webpack_require__(41).main(controller.editor.commands,\n\t      getId('kbdShortcutTable')\n\t    );\n\t  } catch (e) {\n\t    /* */\n\t  }\n\t});\n\t\n\t// XXX: confirm if save fails\n\twindow.addEventListener('beforeunload', function () {\n\t  controller.save();\n\t  menu.saveCurrentDocID();\n\t});\n\t\n\t// Keep the current document in sync across tabs/windows\n\twindow.addEventListener('blur', function () {\n\t  // One tab saves the data...\n\t  controller.save();\n\t});\n\t(function () {\n\t  // ...and the other tab loads it.\n\t  var isReloading = false;\n\t  __webpack_require__(9).addOutsideChangeListener(function (docID, prop) {\n\t    if (docID === controller.getDocument().id && prop !== 'name' && !isReloading) {\n\t      // Batch together property changes into one reload\n\t      isReloading = true;\n\t      setTimeout(function () {\n\t        isReloading = false;\n\t        // Preserve undo history\n\t        controller.forceLoadDocument(controller.getDocument(), true);\n\t\n\t      }, 100);\n\t    }\n\t  });\n\t}());\n\t\n\t// For interaction/debugging\n\texports.controller = controller;\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar jsyaml = __webpack_require__(18),\n\t    _ = __webpack_require__(1);\n\t\n\t// Document Serialization\n\t\n\tvar docToYaml = {\n\t  name: 'name',\n\t  sourceCode: 'source code',\n\t  positionTable: 'positions',\n\t  editorSourceCode: 'editor contents'\n\t};\n\tvar yamlToDoc = _.invert(docToYaml);\n\t\n\t// like _.mapKeys, but only using the keys specified in a mapping object.\n\t// {[key: string] -> string} -> ?Object -> Object\n\tfunction mapKeys(mapping) {\n\t  return function (input) {\n\t    var output = {};\n\t    if (input != null) {\n\t      Object.keys(mapping).forEach(function (fromKey) {\n\t        var toKey = mapping[fromKey];\n\t        output[toKey] = input[fromKey];\n\t      });\n\t    }\n\t    return output;\n\t  };\n\t}\n\t\n\t// we want parseDocument . stringifyDocument = identity, up to null == undefined.\n\t\n\t/**\n\t * Serialize a document.\n\t * For each state node position, only .x, .y, and .fixed are saved.\n\t * .fixed is omitted if true (its default value).\n\t * @param  {TMDocument} doc document to serialize\n\t * @return {string}\n\t */\n\tvar stringifyDocument = _.flow(\n\t  mapKeys(docToYaml),\n\t  _.omitBy(function (x) { return x == null; }),\n\t  _.update('positions', _.mapValues(function (pos) {\n\t    return pos.fixed\n\t      ? {x: pos.x, y: pos.y}\n\t      : {x: pos.x, y: pos.y, fixed: false};\n\t  })),\n\t  // NB. lodash/fp/partialRight takes an array of arguments.\n\t  _.partialRight(jsyaml.safeDump, [{\n\t    flowLevel: 2,       // positions: one state per line\n\t    lineWidth: -1,      // don't wrap lines\n\t    noRefs: true,       // no aliases/references are used\n\t    noCompatMode: true  // use y: instead of 'y':\n\t  }])\n\t);\n\t\n\t/**\n\t * Deserialize a document.\n\t * State positions' .px and .py are optional and default to .x and .y.\n\t * .fixed defaults to true.\n\t * @param  {string} str    serialized document\n\t * @return {Object}        data usable in TMDocument.copyFrom()\n\t * @throws {YAMLException} on YAML syntax error\n\t * @throws {TypeError}     when missing \"source code\" string property\n\t */\n\tvar parseDocument = _.flow(\n\t  jsyaml.safeLoad,\n\t  _.update('positions', _.mapValues(function (pos) {\n\t    // NB. lodash/fp/defaults is swapped: 2nd takes precedence\n\t    return _.defaults({px: pos.x, py: pos.y, fixed: true}, pos);\n\t  })),\n\t  mapKeys(yamlToDoc),\n\t  checkData\n\t);\n\t\n\t// throw if \"source code\" attribute is missing or not a string\n\tfunction checkData(obj) {\n\t  if (obj == null || obj.sourceCode == null) {\n\t    throw new InvalidDocumentError('The “source code:” value is missing');\n\t  } else if (!_.isString(obj.sourceCode)) {\n\t    throw new InvalidDocumentError('The “source code:” value needs to be of type string');\n\t  }\n\t  return obj;\n\t}\n\t\n\t// for valid YAML that is not valid as a document\n\tfunction InvalidDocumentError(message) {\n\t  this.name = 'InvalidDocumentError';\n\t  this.message = message || 'Invalid document';\n\t  this.stack = (new Error()).stack;\n\t}\n\tInvalidDocumentError.prototype = Object.create(Error.prototype);\n\tInvalidDocumentError.prototype.constructor = InvalidDocumentError;\n\t\n\texports.stringifyDocument = stringifyDocument;\n\texports.parseDocument = parseDocument;\n\texports.InvalidDocumentError = InvalidDocumentError;\n\t\n\t// Re-exports\n\texports.YAMLException = jsyaml.YAMLException;\n\n\n/***/ },\n/* 5 */,\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/* global localStorage:false, window:false */\n\t\n\t///////////////////////\n\t// Key-Value Storage //\n\t///////////////////////\n\t\n\tvar canUseLocalStorage = (function () {\n\t  // from modernizr v3.3.1 (modernizr.com)\n\t  var mod = 'modernizr';\n\t  try {\n\t    localStorage.setItem(mod, mod);\n\t    localStorage.removeItem(mod);\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// RAM-only fallback\n\tvar RAMStorage = (function () {\n\t  var obj = {};\n\t  return Object.freeze({\n\t    get length() { return Object.keys(obj).length; },\n\t    key: function (n) { return (n in Object.keys(obj)) ? Object.keys(obj)[n] : null; },\n\t    getItem: function (key) { return {}.hasOwnProperty.call(obj, key) ? obj[key] : null; },\n\t    setItem: function (key, val) { obj[key] = String(val); },\n\t    removeItem: function (key) { delete obj[key]; },\n\t    clear: function () { obj = {}; }\n\t  });\n\t})();\n\t\n\tvar KeyValueStorage = (function () {\n\t  var s = canUseLocalStorage ? localStorage : RAMStorage;\n\t\n\t  return {\n\t    read  : s.getItem.bind(s),\n\t    write : s.setItem.bind(s),\n\t    remove: s.removeItem.bind(s),\n\t    // Registers a listener for StorageEvents from other tabs/windows.\n\t    addStorageListener: canUseLocalStorage\n\t      ? function (listener) {\n\t        window.addEventListener('storage', function (e) {\n\t          if (e.storageArea === localStorage) {\n\t            listener(e);\n\t          }\n\t        });\n\t      }\n\t      : function () {},\n\t    removeStorageListener: canUseLocalStorage\n\t      ? window.removeEventListener.bind(window, 'storage')\n\t      : function () {}\n\t  };\n\t})();\n\t\n\t\n\texports.canUseLocalStorage = canUseLocalStorage;\n\texports.KeyValueStorage = KeyValueStorage;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t// misc. utilities\n\t\n\t//////////////////////////////////\n\t// Utilities for null/undefined //\n\t//////////////////////////////////\n\t\n\t// Assert non-null.\n\t// Return the value if it is not null or undefined; otherwise, throw an error.\n\tfunction nonNull(value) {\n\t  if (value == null) {\n\t    throw new Error('expected a non-null defined value, but got: ' + String(value));\n\t  }\n\t  return value;\n\t}\n\t\n\t// Null coalescing: iff the first argument is null or undefined, return the second.\n\tfunction coalesce(a, b) {\n\t  return (a != null) ? a : b;\n\t}\n\t\n\t// Apply a function to a value if non-null, otherwise return the value.\n\t// (Monadic bind for maybe (option) type.)\n\t// ((a -> b), ?a) -> ?b\n\tfunction applyMaybe(f, x) {\n\t  return (x != null) ? f(x) : x;\n\t}\n\t\n\t// Returns the first function result that is not null or undefined.\n\t// Otherwise, returns undefined.\n\t// ((a -> ?b), [a]) -> ?b\n\tfunction getFirst(f, xs) {\n\t  for (var i = 0; i < xs.length; ++i) {\n\t    var val = f(xs[i]);\n\t    if (val != null) {\n\t      return val;\n\t    }\n\t  }\n\t}\n\t\n\t/////////\n\t// DOM //\n\t/////////\n\t\n\t/* global document */\n\t\n\t/**\n\t * Concat an array of DOM Nodes into a DocumentFragment.\n\t * @param  {[Node]} array\n\t * @return {DocumentFragment}\n\t */\n\tfunction toDocFragment(array) {\n\t  var result = document.createDocumentFragment();\n\t  array.forEach(result.appendChild.bind(result));\n\t  return result;\n\t}\n\t\n\texports.nonNull = nonNull;\n\texports.coalesce = coalesce;\n\texports.applyMaybe = applyMaybe;\n\texports.getFirst = getFirst;\n\t\n\texports.toDocFragment = toDocFragment;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Promise;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar KeyValueStorage = __webpack_require__(6).KeyValueStorage,\n\t    examples = __webpack_require__(12),\n\t    util = __webpack_require__(7),\n\t    _ = __webpack_require__(1);\n\t\n\t/**\n\t * Document model (storage).\n\t * @param {string} docID Each document ID in a key-value store should be unique.\n\t *                       An ID is typically a timestamp. It should not contain '.'.\n\t */\n\tfunction TMDocument(docID) {\n\t  var preset = examples.get(docID);\n\t  Object.defineProperties(this, {\n\t    id:     { value: docID },\n\t    prefix: { value: 'doc.' + docID },\n\t    isExample: { value: preset ? true : false }\n\t  });\n\t  // fall back to reading presets for example documents\n\t  if (preset) {\n\t    Object.defineProperties(this, {\n\t      sourceCode: useFallbackGet(preset, this, 'sourceCode'),\n\t      // names are read-only\n\t      positionTable: useFallbackGet(preset, this, 'positionTable'),\n\t      name: {\n\t        get: function () { return preset.name; },\n\t        set: function () {}, // don't err when removing (set = null)\n\t        enumerable: true\n\t      }\n\t    });\n\t  }\n\t}\n\t\n\tfunction useFallbackGet(preset, obj, prop) {\n\t  var proto = Object.getPrototypeOf(obj);\n\t  var desc = Object.getOwnPropertyDescriptor(proto, prop);\n\t  var get = desc.get;\n\t  desc.get = function () {\n\t    return util.coalesce(get.call(obj), preset[prop]);\n\t  };\n\t  return desc;\n\t}\n\t\n\t// internal method.\n\tTMDocument.prototype.path = function (path) {\n\t  return [this.prefix, path].join('.');\n\t};\n\t\n\t(function () {\n\t  var store = KeyValueStorage;\n\t  var read = store.read.bind(store);\n\t  var write = function (key, val) {\n\t    if (val != null) {\n\t      store.write(key, val);\n\t    } else {\n\t      store.remove(key);\n\t    }\n\t  };\n\t  // var remove = store.remove.bind(store);\n\t  function stringProp(path) {\n\t    return {\n\t      get: function () { return read(this.path(path)); },\n\t      set: function (val) { write(this.path(path), val); },\n\t      enumerable: true\n\t    };\n\t  }\n\t\n\t  var propDescriptors = {\n\t    sourceCode: stringProp('diagram.sourceCode'),\n\t    positionTable: {\n\t      get: function () {\n\t        return util.applyMaybe(parsePositionTable,\n\t          read(this.path('diagram.positions')));\n\t      },\n\t      set: function (val) {\n\t        write(this.path('diagram.positions'),\n\t          util.applyMaybe(stringifyPositionTable, val));\n\t      },\n\t      enumerable: true\n\t    },\n\t    editorSourceCode: stringProp('editor.sourceCode'),\n\t    name: stringProp('name')\n\t  };\n\t  Object.defineProperties(TMDocument.prototype, propDescriptors);\n\t  TMDocument.prototype.dataKeys = Object.keys(propDescriptors);\n\t})();\n\t\n\t// TODO: bypass unnecessary parse & stringify cycle for positions\n\tTMDocument.prototype.copyFrom = function (other) {\n\t  this.dataKeys.forEach(function (key) {\n\t    this[key] = other[key];\n\t  }, this);\n\t  return this;\n\t};\n\t\n\tTMDocument.prototype.delete = function () {\n\t  this.copyFrom({});\n\t};\n\t\n\t// Cross-tab/window storage sync\n\t\n\t/**\n\t * Checks whether a storage key is for a document's name.\n\t * @return {?string} The document ID if true, otherwise null.\n\t */\n\tTMDocument.IDFromNameStorageKey = function (string) {\n\t  var result = /^doc\\.([^.]+)\\.name$/.exec(string);\n\t  return result && result[1];\n\t};\n\t\n\t/**\n\t * Registers a listener for document changes caused by other tabs/windows.\n\t * The listener receives the document ID and the property name that changed.\n\t * @param {Function} listener\n\t */\n\tTMDocument.addOutsideChangeListener = function (listener) {\n\t  var re = /^doc\\.([^.]+)\\.(.+)$/;\n\t\n\t  KeyValueStorage.addStorageListener(function (e) {\n\t    var matches = re.exec(e.key);\n\t    if (matches) {\n\t      listener(matches[1], matches[2]);\n\t    }\n\t  });\n\t};\n\t\n\t/////////////////////////\n\t// Position table JSON //\n\t/////////////////////////\n\t\n\t// JSON -> Object\n\tvar parsePositionTable = JSON.parse;\n\t\n\t// PositionTable -> JSON\n\tvar stringifyPositionTable = _.flow(\n\t  _.mapValues(truncateCoords(2)),\n\t  JSON.stringify\n\t);\n\t\n\t// Truncate .x .y .px .py to 2 decimal places, to save space.\n\tfunction truncateCoords(decimalPlaces) {\n\t  var multiplier = Math.pow(10, decimalPlaces);\n\t  function truncate(value) {\n\t    return Math.round(value * multiplier)/multiplier;\n\t  }\n\t\n\t  return function (val) {\n\t    var result =  _(val).pick(['x','y','px','py']).mapValues(truncate).value();\n\t    result.fixed = val.fixed;\n\t    return result;\n\t  };\n\t}\n\t\n\tmodule.exports = TMDocument;\n\n\n/***/ },\n/* 10 */,\n/* 11 */,\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar parseDocument = __webpack_require__(4).parseDocument;\n\tvar fromPairs = __webpack_require__(1).fromPairs;\n\t\n\t\n\tfunction requireExample(name) {\n\t  return __webpack_require__(40)(\"./\" + name + '.yaml');\n\t}\n\t\n\tvar examplePairs = [\n\t  'repeat01',\n\t  'binaryIncrement',\n\t  'divisibleBy3',\n\t  'copy1s',\n\t  'divisibleBy3Base10',\n\t  'matchThreeLengths',\n\t  'matchBinaryStrings',\n\t  'palindrome',\n\t  'busyBeaver3',\n\t  'busyBeaver4',\n\t  'powersOfTwo',\n\t  'lengthMult',\n\t  'binaryAdd',\n\t  'unaryMult',\n\t  'binaryMult'\n\t].map(function (id) {\n\t  // parse each string into a document\n\t  var doc = parseDocument(requireExample(id));\n\t  doc.id = id;\n\t\n\t  return [id, doc];\n\t});\n\tvar examples = Object.freeze(fromPairs(examplePairs));\n\t\n\t\n\tfunction isExampleID(docID) {\n\t  return {}.hasOwnProperty.call(examples, docID);\n\t}\n\t\n\tfunction get(docID) {\n\t  return isExampleID(docID) ? examples[docID] : null;\n\t}\n\t\n\tvar list = examplePairs.map(function (pair) { return pair[1]; });\n\t\n\t\n\texports.hasID = isExampleID;\n\texports.get = get;\n\texports.list = list;\n\texports.firsttimeDocID = 'binaryIncrement';\n\texports.blankTemplate = requireExample('_template');\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar TM = __webpack_require__(11),\n\t    jsyaml = __webpack_require__(18),\n\t    _ = __webpack_require__(5);\n\t\n\t/**\n\t * Thrown when parsing a string that is valid as YAML but invalid\n\t * as a machine specification.\n\t *\n\t * Examples: unrecognized synonym, no start state defined,\n\t * transitioning to an undeclared state.\n\t *\n\t * A readable message is generated based on the details (if any) provided.\n\t * @param {string} reason  A readable error code.\n\t *   As an error code, this should be relatively short and not include runtime values.\n\t * @param {?Object} details Optional details. Possible keys:\n\t *                          problemValue, state, key, synonym, info, suggestion\n\t */\n\tfunction TMSpecError(reason, details) {\n\t  this.name = 'TMSpecError';\n\t  this.stack = (new Error()).stack;\n\t\n\t  this.reason = reason;\n\t  this.details = details || {};\n\t}\n\tTMSpecError.prototype = Object.create(Error.prototype);\n\tTMSpecError.prototype.constructor = TMSpecError;\n\t\n\t// generate a formatted description in HTML\n\tObject.defineProperty(TMSpecError.prototype, 'message', {\n\t  get: function () {\n\t    var header = this.reason;\n\t    var details = this.details;\n\t\n\t    function code(str) { return '<code>' + str + '</code>'; }\n\t    function showLoc(state, symbol, synonym) {\n\t      if (state != null) {\n\t        if (symbol != null) {\n\t          return ' in the transition from state ' + code(state) + ' and symbol ' + code(symbol);\n\t        } else {\n\t          return ' for state ' + code(state);\n\t        }\n\t      } else if (synonym != null) {\n\t        return ' in the definition of synonym ' + code(synonym);\n\t      }\n\t      return '';\n\t    }\n\t    var problemValue = details.problemValue ? ' ' + code(details.problemValue) : '';\n\t    var location = showLoc(details.state, details.symbol, details.synonym);\n\t    var sentences = ['<strong>' + header + problemValue + '</strong>' + location\n\t      , details.info, details.suggestion]\n\t      .filter(_.identity)\n\t      .map(function (s) { return s + '.'; });\n\t    if (location) { sentences.splice(1, 0, '<br>'); }\n\t    return sentences.join(' ');\n\t  },\n\t  enumerable: true\n\t});\n\t\n\t// type TransitionTable = {[key: string]: ?{[key: string]: string} }\n\t// type TMSpec = {blank: string, start state: string, table: TransitionTable}\n\t\n\t// TODO: check with flow (flowtype.org)\n\t// throws YAMLException on YAML syntax error\n\t// throws TMSpecError for an invalid spec (eg. no start state, transitioning to an undefined state)\n\t// string -> TMSpec\n\tfunction parseSpec(str) {\n\t  var obj = jsyaml.safeLoad(str);\n\t  // check for required object properties.\n\t  // auto-convert .blank and 'start state' to string, for convenience.\n\t  if (obj == null) { throw new TMSpecError('The document is empty',\n\t    {info: 'Every Turing machine requires a <code>blank</code> tape symbol,' +\n\t    ' a <code>start state</code>, and a transition <code>table</code>'}); }\n\t  var detailsForBlank = {suggestion:\n\t    'Examples: <code>blank: \\' \\'</code>, <code>blank: \\'0\\'</code>'};\n\t  if (obj.blank == null) {\n\t    throw new TMSpecError('No blank symbol was specified', detailsForBlank);\n\t  }\n\t  obj.blank = String(obj.blank);\n\t  if (obj.blank.length !== 1) {\n\t    throw new TMSpecError('The blank symbol must be a string of length 1', detailsForBlank);\n\t  }\n\t  obj.startState = obj['start state'];\n\t  delete obj['start state'];\n\t  if (obj.startState == null) {\n\t    throw new TMSpecError('No start state was specified',\n\t    {suggestion: 'Assign one using <code>start state: </code>'});\n\t  }\n\t  obj.startState = String(obj.startState);\n\t  // parse synonyms and transition table\n\t  checkTableType(obj.table); // parseSynonyms assumes a table object\n\t  var synonyms = parseSynonyms(obj.synonyms, obj.table);\n\t  obj.table = parseTable(synonyms, obj.table);\n\t  // check for references to non-existent states\n\t  if (!(obj.startState in obj.table)) {\n\t    throw new TMSpecError('The start state has to be declared in the transition table');\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\tfunction checkTableType(val) {\n\t  if (val == null) {\n\t    throw new TMSpecError('Missing transition table',\n\t    {suggestion: 'Specify one using <code>table:</code>'});\n\t  }\n\t  if (typeof val !== 'object') {\n\t    throw new TMSpecError('Transition table has an invalid type',\n\t    {problemValue: typeof val,\n\t    info: 'The transition table should be a nested mapping from states to symbols to instructions'});\n\t  }\n\t}\n\t\n\t// (any, Object) -> ?SynonymMap\n\tfunction parseSynonyms(val, table) {\n\t  if (val == null) {\n\t    return null;\n\t  }\n\t  if (typeof val !== 'object') {\n\t    throw new TMSpecError('Synonyms table has an invalid type',\n\t      {problemValue: typeof val,\n\t      info: 'Synonyms should be a mapping from string abbreviations to instructions'\n\t        + ' (e.g. <code>accept: {R: accept}</code>)'});\n\t  }\n\t  return _.mapValues(val, function (actionVal, key) {\n\t    try {\n\t      return parseInstruction(null, table, actionVal);\n\t    } catch (e) {\n\t      if (e instanceof TMSpecError) {\n\t        e.details.synonym = key;\n\t        if (e.reason === 'Unrecognized string') {\n\t          e.details.info = 'Note that a synonym cannot be defined using another synonym';\n\t        }\n\t      }\n\t      throw e;\n\t    }\n\t  });\n\t}\n\t\n\t// (?SynonymMap, {[key: string]: string}) -> TransitionTable\n\tfunction parseTable(synonyms, val) {\n\t  return _.mapValues(val, function (stateObj, state) {\n\t    if (stateObj == null) {\n\t      // case: halting state\n\t      return null;\n\t    }\n\t    if (typeof stateObj !== 'object') {\n\t      throw new TMSpecError('State entry has an invalid type',\n\t      {problemValue: typeof stateObj, state: state,\n\t      info: 'Each state should map symbols to instructions. An empty map signifies a halting state.'});\n\t    }\n\t    return _.mapValues(stateObj, function (actionVal, symbol) {\n\t      try {\n\t        return parseInstruction(synonyms, val, actionVal);\n\t      } catch (e) {\n\t        if (e instanceof TMSpecError) {\n\t          e.details.state = state;\n\t          e.details.symbol = symbol;\n\t        }\n\t        throw e;\n\t      }\n\t    });\n\t  });\n\t}\n\t\n\t// omits null/undefined properties\n\t// (?string, direction, ?string) -> {symbol?: string, move: direction, state?: string}\n\tfunction makeInstruction(symbol, move, state) {\n\t  return Object.freeze(_.omitBy({symbol: symbol, move: move, state: state},\n\t    function (x) { return x == null; }));\n\t}\n\t\n\tfunction checkTarget(table, instruct) {\n\t  if (instruct.state != null && !(instruct.state in table)) {\n\t    throw new TMSpecError('Undeclared state', {problemValue: instruct.state,\n\t    suggestion: 'Make sure to list all states in the transition table and define their transitions (if any)'});\n\t  }\n\t  return instruct;\n\t}\n\t\n\t// throws if the target state is undeclared (not in the table)\n\t// type SynonymMap = {[key: string]: TMAction}\n\t// (SynonymMap?, Object, string | Object) -> TMAction\n\tfunction parseInstruction(synonyms, table, val) {\n\t  return checkTarget(table, function () {\n\t    switch (typeof val) {\n\t      case 'string': return parseInstructionString(synonyms, val);\n\t      case 'object': return parseInstructionObject(val);\n\t      default: throw new TMSpecError('Invalid instruction type',\n\t        {problemValue: typeof val,\n\t          info: 'An instruction can be a string (a direction <code>L</code>/<code>R</code> or a synonym)'\n\t            + ' or a mapping (examples: <code>{R: accept}</code>, <code>{write: \\' \\', L: start}</code>)'});\n\t    }\n\t  }());\n\t}\n\t\n\tvar moveLeft = Object.freeze({move: TM.MoveHead.left});\n\tvar moveRight = Object.freeze({move: TM.MoveHead.right});\n\t\n\t// case: direction or synonym\n\tfunction parseInstructionString(synonyms, val) {\n\t  if (val === 'L') {\n\t    return moveLeft;\n\t  } else if (val === 'R') {\n\t    return moveRight;\n\t  }\n\t  // note: this order prevents overriding L/R in synonyms, as that would\n\t  // allow inconsistent notation, e.g. 'R' and {R: ..} being different.\n\t  if (synonyms && synonyms[val]) { return synonyms[val]; }\n\t  throw new TMSpecError('Unrecognized string',\n\t    {problemValue: val,\n\t    info: 'An instruction can be a string if it\\'s a synonym or a direction'});\n\t}\n\t\n\t// type ActionObj = {write?: any, L: ?string} | {write?: any, R: ?string}\n\t// case: ActionObj\n\tfunction parseInstructionObject(val) {\n\t  var symbol, move, state;\n\t  if (val == null) { throw new TMSpecError('Missing instruction'); }\n\t  // prevent typos: check for unrecognized keys\n\t  (function () {\n\t    var badKey;\n\t    if (!Object.keys(val).every(function (key) {\n\t      badKey = key;\n\t      return key === 'L' || key === 'R' || key === 'write';\n\t    })) {\n\t      throw new TMSpecError('Unrecognized key',\n\t      {problemValue: badKey,\n\t      info: 'An instruction always has a tape movement <code>L</code> or <code>R</code>, '\n\t        + 'and optionally can <code>write</code> a symbol'});\n\t    }\n\t  })();\n\t  // one L/R key is required, with optional state value\n\t  if ('L' in val && 'R' in val) {\n\t    throw new TMSpecError('Conflicting tape movements',\n\t    {info: 'Each instruction needs exactly one movement direction, but two were found'});\n\t  }\n\t  if ('L' in val) {\n\t    move = TM.MoveHead.left;\n\t    state = val.L;\n\t  } else if ('R' in val) {\n\t    move = TM.MoveHead.right;\n\t    state = val.R;\n\t  } else {\n\t    throw new TMSpecError('Missing movement direction');\n\t  }\n\t  // write key is optional, but must contain a char value if present\n\t  if ('write' in val) {\n\t    var writeStr = String(val.write);\n\t    if (writeStr.length === 1) {\n\t      symbol = writeStr;\n\t    } else {\n\t      throw new TMSpecError('Write requires a string of length 1');\n\t    }\n\t  }\n\t  return makeInstruction(symbol, move, state);\n\t}\n\t\n\texports.TMSpecError = TMSpecError;\n\texports.parseSpec = parseSpec;\n\t// re-exports\n\texports.YAMLException = jsyaml.YAMLException;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar $ = __webpack_require__(3);\n\tvar Promise = __webpack_require__(8); // eslint-disable-line no-shadow\n\t\n\tPromise.config({\n\t  cancellation: true\n\t});\n\t\n\t// On success, 'resolve' is called with the response data.\n\t// On failure, 'reject' is called with {xhr: jqXHR, status: string, error: string}.\n\t// To abort the request, use .cancel (from bluebird). Neither is called in that case.\n\t// jqXHR -> Promise\n\tfunction promisifyAjax(xhr) {\n\t  return new Promise(function (resolve, reject, onCancel) {\n\t    xhr.then(resolve, function (jqXHR, textStatus, errorThrown) {\n\t      reject({xhr: jqXHR, status: textStatus, error: errorThrown});\n\t    });\n\t    onCancel && onCancel(function () {\n\t      try { xhr.abort(); } catch (e) {/* */}\n\t    });\n\t  });\n\t}\n\t\n\t// GistID -> Promise\n\t// @see promisifyAjax\n\tfunction getGist(gistID) {\n\t  return promisifyAjax($.ajax({\n\t    url: 'https://api.github.com/gists/' + gistID,\n\t    type: 'GET',\n\t    dataType: 'json',\n\t    accepts: 'application/vnd.github.v3+json' // specify API version for stability\n\t  }));\n\t}\n\t\n\t// https://developer.github.com/v3/gists/#create-a-gist\n\t// @see promisifyAjax\n\t// {files: {[filename: string]: {content: string}},\n\t//  description?: string, public?: boolean} -> Promise\n\tfunction createGist(payload) {\n\t  // return Promise.delay(1000, {id: 'offlinetesting'});\n\t  return promisifyAjax($.ajax({\n\t    url: 'https://api.github.com/gists',\n\t    type: 'POST',\n\t    data: JSON.stringify(payload),\n\t    // headers: {Authorization: 'token DEVTOKEN'},\n\t    dataType: 'json', // response datatype\n\t    accepts: 'application/vnd.github.v3+json' // specify API version for stability\n\t  }));\n\t}\n\t\n\texports.getGist = getGist;\n\texports.createGist = createGist;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* eslint-env browser */\n\tvar CheckboxTable = __webpack_require__(42);\n\tvar FileReaderPromise = __webpack_require__(43);\n\tvar format = __webpack_require__(4);\n\tvar getGist = __webpack_require__(14).getGist;\n\t\n\tvar $ = __webpack_require__(3);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar Promise = __webpack_require__(8);  // eslint-disable-line no-shadow\n\t\n\t\n\tfunction decodeFormURLComponent(str) {\n\t  return decodeURIComponent(str.replace('+', ' '));\n\t}\n\t\n\t/**\n\t * https://url.spec.whatwg.org/#urlencoded-parsing\n\t */\n\tfunction queryParams(queryString) {\n\t  function decode(str) {\n\t    return str ? decodeFormURLComponent(str) : '';\n\t  }\n\t  var result = {};\n\t  queryString.split('&').forEach(function (str) {\n\t    var pair = str.split('=');\n\t    result[decode(pair[0])] = decode(pair[1]);\n\t  });\n\t  return result;\n\t}\n\t\n\t///////////////////\n\t// Import Dialog //\n\t///////////////////\n\t\n\t// requires an existing dialog in the DOM\n\tfunction ImportDialog(dialogNode) {\n\t  this.node = dialogNode;\n\t  this.titleNode = dialogNode.querySelector('.modal-header .modal-title');\n\t  this.bodyNode = dialogNode.querySelector('.modal-body');\n\t  this.footerNode = dialogNode.querySelector('.modal-footer');\n\t  this.cancelButtonNode = d3.select(this.footerNode).text('')\n\t    .append('button')\n\t      .attr({type: 'button', class: 'btn btn-default', 'data-dismiss': 'modal'})\n\t      .text('Cancel')\n\t    .node();\n\t  this.$dialog = $(dialogNode)\n\t    .one('hide.bs.modal', this.__onClose.bind(this));\n\t}\n\t\n\t// internal event handler.\n\tImportDialog.prototype.__onClose = function () {\n\t  this.onClose();\n\t  // use .empty to clean up $.on used in CheckboxTable\n\t  $(this.bodyNode).empty();\n\t  $(this.footerNode).empty();\n\t};\n\t\n\t// configurable\n\tImportDialog.prototype.onClose = function () {\n\t};\n\t\n\tImportDialog.prototype.show = function () {\n\t  this.$dialog.modal({backdrop: 'static', keyboard: false});\n\t};\n\t\n\tImportDialog.prototype.close = function () {\n\t  this.$dialog.modal('hide');\n\t};\n\t\n\tImportDialog.prototype.setBodyChildNodes = function (nodes) {\n\t  this.bodyNode.textContent = '';\n\t  this.bodyNode.appendChild(joinNodes(nodes));\n\t};\n\t\n\tfunction appendPanel(div, titleHTML) {\n\t  var panel = div.append('div')\n\t      .attr('class', 'panel panel-default');\n\t  panel.append('div')\n\t      .attr('class', 'panel-heading')\n\t    .append('h5')\n\t      .attr('class', 'panel-title')\n\t      .html(titleHTML);\n\t  return panel;\n\t}\n\t\n\tvar emptySelection = Object.freeze(d3.selectAll([]));\n\t\n\t// (D3Selection, {title: string, data: [string]}) -> void\n\tfunction appendListPanel(container, data) {\n\t  var panel = emptySelection;\n\t  if (data.data && data.data.length) {\n\t    panel = appendPanel(container, data.title);\n\t    panel.append('div')\n\t        .attr('class', 'panel-body')\n\t      .append('ul')\n\t        .attr('class', 'list-inline')\n\t      .selectAll('li')\n\t        .data(data.data)\n\t      .enter().append('li')\n\t        .text(_.identity);\n\t  }\n\t  return panel;\n\t}\n\t\n\t// ( D3Selection, {title: string, headers: [string],\n\t//  data: [[string | (D3Selection -> void)]]} ) -> void\n\tfunction appendTablePanel(container, data) {\n\t  var panel = emptySelection;\n\t  if (data.data && data.data.length) {\n\t    panel = appendPanel(container, data.title);\n\t    panel.append('table')\n\t        .attr('class', 'table')\n\t        .call(function (table) {\n\t          // headers\n\t          table.append('thead')\n\t            .append('tr').selectAll('th').data(data.headers)\n\t            .enter().append('th').text(_.identity);\n\t          // contents\n\t          table.append('tbody').selectAll('tr')\n\t              .data(data.data)\n\t            .enter().append('tr').selectAll('td')\n\t              .data(_.identity)\n\t            .enter().append('td').each(/* @this td */ function (d) {\n\t              var td = d3.select(this);\n\t              if (typeof d === 'function') {\n\t                d(td);\n\t              } else {\n\t                td.text(d);\n\t              }\n\t            });\n\t        });\n\t  }\n\t  return panel;\n\t}\n\t\n\t// NonDocumentFiles -> boolean\n\tvar isEmptyNonDocs = _.every(_.isEmpty);\n\t\n\t// (D3Selection, NonDocumentFiles, ?string) -> void\n\tfunction listNondocuments(dialogBody, nondocs, disclosureTitle) {\n\t  if (isEmptyNonDocs(nondocs)) {\n\t    return;\n\t  }\n\t  // Disclosure triangle\n\t  var collapseId = 'nondocument-files';\n\t  dialogBody.append('a')\n\t      .attr({\n\t        href: '#'+collapseId,\n\t        class: 'disclosure-triangle collapsed',\n\t        role: 'button',\n\t        'data-toggle': 'collapse'\n\t      })\n\t      .text(disclosureTitle ? disclosureTitle : 'Show other files');\n\t  var container = dialogBody.append('div')\n\t      .attr({\n\t        id: collapseId,\n\t        class: 'collapse'\n\t      });\n\t  // Errors by type, most important first\n\t  // TODO: auto-report unexpected errors\n\t  appendTablePanel(container, {\n\t    title: 'Unexpected error',\n\t    headers: ['Filename', 'Error'],\n\t    data: nondocs.otherError.map(function functionName(d) {\n\t      return [d.filename, errorString(d.error) ];\n\t    })\n\t  }).classed('panel-danger', true);\n\t  appendTablePanel(container, {\n\t    title: 'Not suitable for import',\n\t    headers: ['Filename', 'Reason'],\n\t    data: nondocs.badDoc.map(function (d) {\n\t      return [d.filename, d.error.message];\n\t    })\n\t  });\n\t  appendTablePanel(container, {\n\t    title: 'Not valid as YAML',\n\t    headers: ['Filename', 'Syntax error'],\n\t    data: nondocs.badYAML.map(function (d) {\n\t      return [d.filename,\n\t        function (td) { td.append('pre').text(d.error.message); } ];\n\t    })\n\t  });\n\t  // TODO: document largest allowed filesize\n\t  appendListPanel(container, {\n\t    title: 'File is too large',\n\t    data: nondocs.tooLarge\n\t  });\n\t  appendListPanel(container, {\n\t    title: 'Different file extension (not <code>.yaml</code>/<code>.yml</code>)',\n\t    data: nondocs.wrongType\n\t  });\n\t}\n\t\n\t// deal with objects like DOMError (whose .toString gives \"[object FileError]\")\n\tfunction errorString(reason) {\n\t  return reason instanceof Error\n\t    ? String(reason)\n\t    : reason.message || reason.name || String(reason);\n\t}\n\t\n\t//////////////////////\n\t// Document Parsing //\n\t//////////////////////\n\t\n\t/* Interface for Document Parsing\n\t  type GistFile = {\n\t    filename: string,\n\t    size: number,\n\t    truncated: boolean,\n\t    content: string\n\t  };\n\t  type TMData = {source code: string};\n\t  type DocFile = {filename: string, size: number, document: TMData};\n\t\n\t  type Filename = string;\n\t  type ErrorTuple = {filename: Filename, error: Error | YAMLException};\n\t  type NonDocumentFiles = {\n\t    wrongType:  [Filename],\n\t    tooLarge:   [Filename],\n\t    badYAML:    [ErrorTuple],\n\t    badDoc:     [ErrorTuple],\n\t    otherError: [ErrorTuple]\n\t  };\n\t  type ParseResult = {documentFiles: [DocFile], nonDocumentFiles: NonDocumentFiles};\n\t */\n\t\n\t// Parse each file into a document or a categorized error.\n\t// Local files are read only if they have the right extension and size.\n\t// NB. make sure to convert FileList to an actual Array.\n\t// The promise resolves with ParseResult.\n\t// (number, [GistFile | File]) -> Promise\n\tfunction parseFiles(sizelimit, files) {\n\t  var docfiles = [];\n\t  var nondocs = {wrongType: [], tooLarge: [], badYAML: [], badDoc: [], otherError: []};\n\t\n\t  return Promise.each(files, function (file) {\n\t    var name = file.filename || file.name; // eslint-disable-line no-shadow\n\t    if (name.search(/\\.ya?ml$/) === -1) {\n\t      nondocs.wrongType.push(name);\n\t    } else if (file.truncated || file.size > sizelimit) {\n\t      nondocs.tooLarge.push(name);\n\t    } else {\n\t      return Promise.resolve(file.content != null ? file.content\n\t        : FileReaderPromise.readAsText(file))\n\t      .then(function (content) {\n\t        docfiles.push({\n\t          filename: name,\n\t          size: file.size,\n\t          document: format.parseDocument(content)\n\t        });\n\t      }).catch(function (e) {\n\t        var tuple = {filename: name, error: e};\n\t        if (e instanceof format.YAMLException) {\n\t          nondocs.badYAML.push(tuple);\n\t        } else if (e instanceof format.InvalidDocumentError) {\n\t          nondocs.badDoc.push(tuple);\n\t        } else {\n\t          nondocs.otherError.push(tuple);\n\t        }\n\t      });\n\t    }\n\t  }).return({documentFiles: docfiles, nonDocumentFiles: nondocs});\n\t}\n\t\n\t/////////////////////\n\t// Document Import //\n\t/////////////////////\n\t\n\tfunction showSizeKB(n) {\n\t  // example: 12.0 KB\n\t  return (Math.ceil(10*n/1024)/10).toFixed(1) + ' KB';\n\t}\n\t\n\t// {docFiles: [DocFile], nonDocumentFiles: NonDocumentFiles,\n\t//  dialog: ImportDialog, citeNode?: Node, importDocuments: [TMData] -> void} -> void\n\tfunction pickMultiple(args) {\n\t  var docfiles = args.documentFiles,\n\t      nondocs = args.nonDocumentFiles,\n\t      citeNode = args.citeNode,\n\t      dialog = args.dialog,\n\t      importDocuments = args.importDocuments;\n\t  // Dialog body\n\t  var dialogBody = d3.select(dialog.bodyNode).text('');\n\t  dialogBody.append('p').call(function (p) {\n\t    p.append('strong').text('Select documents to import');\n\t    if (citeNode) {\n\t      p.node().appendChild(document.createTextNode(' from '));\n\t      p.node().appendChild(citeNode);\n\t    }\n\t  });\n\t  var ctable = new CheckboxTable({\n\t    table: dialogBody.append('table')\n\t      .attr({class: 'table table-hover checkbox-table'}),\n\t    headers: ['Filename', 'Size'],\n\t    data: docfiles.map(function (doc) {\n\t      return [doc.filename, showSizeKB(doc.size)];\n\t    })\n\t  });\n\t  listNondocuments(dialogBody, nondocs);\n\t  // Dialog footer\n\t  var importButton = d3.select(dialog.footerNode).append('button')\n\t      .attr({type: 'button', class: 'btn btn-primary', 'data-dismiss': 'modal'})\n\t      .property('disabled', true)\n\t      .text('Import')\n\t      .on('click', /* @this button */ function () {\n\t        d3.select(this).on('click', null); // prevent double import; like .one()\n\t        var names = d3.set(ctable.getCheckedValues());\n\t        importDocuments(docfiles\n\t          .filter(function (file) { return names.has(file.filename); })\n\t          .map(_.property('document'))\n\t        );\n\t      })\n\t    .node();\n\t  ctable.onChange = function () {\n\t    importButton.disabled = ctable.isCheckedEmpty();\n\t  };\n\t}\n\t\n\t// {nonDocumentFiles: NonDocumentFiles, dialog: ImportDialog, citeLink?: Node} -> void\n\tfunction pickNone(args) {\n\t  var nondocs = args.nonDocumentFiles,\n\t      dialog = args.dialog,\n\t      citeLink = args.citeLink;\n\t\n\t  d3.select(dialog.bodyNode).text('').call(function (body) {\n\t    body.append('p').append('strong').text(!isEmptyNonDocs(nondocs)\n\t        ? 'None of the files are suitable for import.'\n\t        : 'No files were selected.');\n\t    if (citeLink) {\n\t      body.append('p').text('Requested URL: ').node().appendChild(citeLink);\n\t    }\n\t    listNondocuments(body, nondocs, 'Show details');\n\t  });\n\t  dialog.cancelButtonNode.textContent = 'Close';\n\t}\n\t\n\t// Intermingle text and nodes.\n\t// [Node | string] -> DocumentFragment\n\tfunction joinNodes(nodes) {\n\t  var result = document.createDocumentFragment();\n\t  nodes.forEach(function (node) {\n\t    if (typeof node === 'string') {\n\t      result.appendChild(document.createTextNode(node));\n\t    } else {\n\t      result.appendChild(node);\n\t    }\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction wrapTag(tagName, node) {\n\t  var tag = document.createElement(tagName);\n\t  tag.appendChild(node);\n\t  return tag;\n\t}\n\t\n\t// Create a link with text <q>`gist description`</q> if given, otherwise gist `gistID`.\n\t// {gistID: string, description?: string} -> HTMLAnchorElement | HTMLQuoteElement\n\tfunction gistDescriptionLink(args) {\n\t  var link = externalLink({\n\t    href: 'https://gist.github.com/' + args.gistID,\n\t    textContent: args.description || ('gist ' + args.gistID)\n\t  });\n\t  return args.description ? wrapTag('q', link) : link;\n\t}\n\t\n\t// {href: string, textContent?: string} -> HTMLAnchorElement\n\tfunction externalLink(args) {\n\t  var link = document.createElement('a');\n\t  link.href = args.href;\n\t  link.target = '_blank';\n\t  link.textContent = args.textContent || args.href;\n\t  return link;\n\t}\n\t\n\t// The returned promise resolves/cancels when the dialog is closed:\n\t// • resolves if loading (before import) finished and the user cancelled anyway\n\t// • cancels if files were still loading and not yet displayed (eg. fetch, parse)\n\t// ({gistID: string, dialogNode: Node, importDocument: TMData -> void} |\n\t// {files: FileList, dialogNode: Node, importDocument: TMData -> void}) -> Promise\n\tfunction importCommon(args) {\n\t  var gistID = args.gistID,\n\t      dialogNode = args.dialogNode,\n\t      importDocument = args.importDocument;\n\t\n\t  var dialog = new ImportDialog(dialogNode);\n\t  var citeLink;\n\t  var citeNode;\n\t  // prevent accidentally exceeding quota\n\t  var MAX_FILESIZE = 400 * 1024;\n\t  // Start fetch, show dialog\n\t  var filesPromise = (function () {\n\t    if (gistID != null) {\n\t      dialog.titleNode.textContent = 'Import from GitHub gist';\n\t      citeLink = externalLink({href: 'https://gist.github.com/' + gistID});\n\t      dialog.setBodyChildNodes(['Retrieving ', citeLink, '…']);\n\t      return getGist(gistID).then(function (data) {\n\t        citeNode = gistDescriptionLink({\n\t          gistID: gistID,\n\t          description: data.description\n\t        });\n\t        dialog.setBodyChildNodes(['Processing ', citeLink, '…']);\n\t        return _.values(data.files);\n\t      });\n\t    } else {\n\t      dialog.titleNode.textContent = 'Import from files';\n\t      dialog.setBodyChildNodes(['Processing files…']);\n\t      return Promise.resolve(_.toArray(args.files));\n\t    }\n\t  }());\n\t  dialog.show();\n\t  // Parse, pick, import\n\t  var promise = filesPromise\n\t  .then(parseFiles.bind(undefined, MAX_FILESIZE))\n\t  .then(function (parsed) {\n\t    var docfiles = parsed.documentFiles;\n\t    switch (docfiles.length) {\n\t      case 0:\n\t        pickNone({\n\t          nonDocumentFiles: parsed.nonDocumentFiles,\n\t          dialog: dialog,\n\t          citeLink: citeLink\n\t        });\n\t        return;\n\t      case 1:\n\t        importDocument(docfiles[0].document);\n\t        dialog.close();\n\t        return;\n\t      default:\n\t        pickMultiple({\n\t          documentFiles: docfiles,\n\t          nonDocumentFiles: parsed.nonDocumentFiles,\n\t          dialog: dialog,\n\t          citeNode: citeNode,\n\t          importDocuments: function importDocuments(docs) {\n\t            docs.concat().reverse().map(importDocument);\n\t          }\n\t        });\n\t    }\n\t  })\n\t  .catch(function (reason) {\n\t    dialog.setBodyChildNodes([messageForError(reason)]\n\t      .concat(citeLink ? ['Requested URL: ', citeLink] : [])\n\t    );\n\t    dialog.cancelButtonNode.textContent = 'Close';\n\t  });\n\t  var waitForDialog = new Promise(function (resolve) {\n\t    dialog.onClose = function () {\n\t      promise.cancel();\n\t      resolve();\n\t    };\n\t  });\n\t  return promise.return(waitForDialog);\n\t}\n\t\n\t// {gistID: string, dialogNode: Node, importDocument: TMData -> void} -> Promise\n\tvar importGist = importCommon;\n\t\n\t// {files: FileList, dialogNode: Node, importDocument: TMData -> void} -> Promise\n\tvar importLocalFiles = importCommon;\n\t\n\tfunction createElementHTML(tagName, innerHTML) {\n\t  var element = document.createElement(tagName);\n\t  element.innerHTML = innerHTML;\n\t  return element;\n\t}\n\t\n\t// ({xhr: jqXHR} | Error) -> Node\n\tfunction messageForError(reason) {\n\t  var xhr = reason.xhr;\n\t  if (xhr) {\n\t    // case: couldn't fetch\n\t    return createElementHTML('p', (function () {\n\t      switch (reason.status) {\n\t        case 'abort':\n\t          return [''];\n\t        case 'timeout':\n\t          return [\n\t            '<strong>The request timed out.</strong>',\n\t            'You can check your connection and try again.'\n\t          ];\n\t        default:\n\t        // case: HTTP error\n\t          if (xhr.status === 404) {\n\t            return [\n\t              '<strong>No GitHub gist exists with that ID.</strong>',\n\t              'It’s possible the ID is incorrect, or the gist was deleted.'\n\t            ];\n\t          } else if (xhr.status === 0) {\n\t            return ['GitHub could not be reached. Your Internet connection may be offline.'];\n\t          } else {\n\t            return [\n\t              'The import failed because of a <strong>connection error</strong>.',\n\t              'HTTP status code: ' + xhr.status + ' ' + xhr.statusText\n\t            ];\n\t          }\n\t      }\n\t    }()).join('<br>'));\n\t  } else {\n\t    // case: other error\n\t    var pre = document.createElement('pre');\n\t    pre.textContent = errorString(reason);\n\t    return joinNodes([\n\t      createElementHTML('p', 'An unexpected error occurred:'), pre]);\n\t  }\n\t}\n\t\n\t// Import a gist given by ?import-gist=gistID and reset the URL.\n\t// Call this once the DOM is ready (document.readyState === 'interactive').\n\t// {dialogNode: Node, importDocument: TMData -> void} -> void\n\tfunction runImport(args) {\n\t  // TODO: test with dev server\n\t  function resetURL() {\n\t    try {\n\t      console.info('resetURL called'); // eslint-disable-line no-console\n\t      history.replaceState(null, null, '/');\n\t    } catch (e) {\n\t      // ignore\n\t    }\n\t  }\n\t\n\t  var params = queryParams(location.search.substring(1));\n\t  var gistID = params['import-gist'];\n\t  if (gistID) {\n\t    importGist(_.assign({gistID: gistID}, args))\n\t    .finally(resetURL);\n\t  }\n\t}\n\t\n\texports.importGist = importGist;\n\texports.importLocalFiles = importLocalFiles;\n\texports.runImport = runImport;\n\n\n/***/ },\n/* 16 */,\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = ace;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jsyaml;\n\n/***/ },\n/* 19 */,\n/* 20 */,\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"input: '${2}'\\nblank: '${3: }'\\nstart state: ${4:start}\\ntable:\\n  ${4}:\\n    ${5}\\n\"\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: binary addition\\nsource code: |\\n  # Adds two binary numbers together.\\n\\n  # Format: Given input a+b where a and b are binary numbers,\\n  # leaves c b on the tape, where c = a+b.\\n  # Example: '11+1' => '100 1'.\\n  input: '1011+11001'\\n  blank: ' '\\n  start state: right\\n  table:\\n    # Start at the second number's rightmost digit.\\n    right:\\n      [0,1,+]: R\\n      ' ': {L: read}\\n\\n    # Add each digit from right to left:\\n    # read the current digit of the second number,\\n    read:\\n      0: {write: c, L: have0}\\n      1: {write: c, L: have1}\\n      +: {write: ' ', L: rewrite}\\n    # and add it to the next place of the first number,\\n    # marking the place (using O or I) as already added.\\n    have0: {[0,1]: L, +: {L: add0}}\\n    have1: {[0,1]: L, +: {L: add1}}\\n    add0:\\n      [0,' ']: {write: O, R: back0}\\n      1      : {write: I, R: back0}\\n      [O,I]  : L\\n    add1:\\n      [0,' ']: {write: I, R: back1}\\n      1      : {write: O, L: carry}\\n      [O,I]  : L\\n    carry:\\n      [0,' ']: {write: 1, R: back1}\\n      1      : {write: 0, L}\\n    # Then, restore the current digit, and repeat with the next digit.\\n    back0:\\n      [0,1,O,I,+]: R\\n      c: {write: 0, L: read}\\n    back1:\\n      [0,1,O,I,+]: R\\n      c: {write: 1, L: read}\\n\\n    # Finish: rewrite place markers back to 0s and 1s.\\n    rewrite:\\n      O: {write: 0, L}\\n      I: {write: 1, L}\\n      [0,1]: L\\n      ' ': {R: done}\\n    done:\\n\\n\\n  # Exercise:\\n\\n  # • Generate the Fibonacci sequence in binary, listed from right to left:\\n  #   ...1101 1000 101 11 10 1 1 0\\n  #   Hint: prefix the current number with a +, copy the previous number\\n  #   and place it left of the +, run the adder, and repeat.\\n  #   Example: '1 0' => '+1 0' => '0+1 0' => '1 1 0' => '+1 1 0' => ...\\npositions:\\n  right:   {x: 300, y: 130}\\n  rewrite: {x: 500, y: 130}\\n  done:    {x: 620, y: 130}\\n\\n  back0:  {x: 250, y: 250}\\n  read:   {x: 400, y: 250}\\n  back1:  {x: 550, y: 250}\\n  carry:  {x: 650, y: 250}\\n\\n  add0:   {x: 150, y: 400}\\n  have0:  {x: 300, y: 400}\\n  have1:  {x: 500, y: 400}\\n  add1:   {x: 650, y: 400}\\n\"\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: binary increment\\nsource code: |\\n  # Adds 1 to a binary number.\\n  input: '1011'\\n  blank: ' '\\n  start state: right\\n  table:\\n    # scan to the rightmost digit\\n    right:\\n      [1,0]: R\\n      ' '  : {L: carry}\\n    # then carry the 1\\n    carry:\\n      1      : {write: 0, L}\\n      [0,' ']: {write: 1, L: done}\\n    done:\\n\\n\\n  # Exercises:\\n\\n  # • Modify the machine to always halt on the leftmost digit\\n  #   (regardless of the number's length).\\n  #   Hint: add a state between carry and done.\\n\\n  # • Make a machine that adds 2 instead of 1.\\n  #   Hint: 2 is '10' in binary, so the last digit is unaffected.\\n  #   Alternative hint: chain together two copies of the machine from\\n  #   the first exercise (renaming the states of the second copy).\\n\\n  # • Make a machine to subtract 1.\\n  #   To simplify things, assume the input is always greater than 0.\\npositions:\\n  right: {x: 230, y: 250}\\n  carry: {x: 400, y: 250}\\n  done: {x: 570, y: 250}\\n\"\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: binary multiplication\\nsource code: |\\n  # Multiplies two binary numbers together.\\n\\n  # Examples: '11*11' => '1001', '111*110' => '101010'.\\n  input: '11*101' # 3*5 = 15 (1111 in binary)\\n  blank: ' '\\n  start state: start\\n  table:\\n    # Prefix the input with a '+', and go to the rightmost digit.\\n    start:\\n      [0,1]: {L: init}\\n    init:\\n      ' ': {write: '+', R: right}\\n    right:\\n      [0,1,'*']: R\\n      ' ': {L: readB}\\n\\n    # Read and erase the last digit of the multiplier.\\n    # If it's 1, add the current multiplicand.\\n    # In any case, double the multiplicand afterwards.\\n    readB:\\n      0: {write: ' ', L: doubleL}\\n      1: {write: ' ', L: addA}\\n    addA:\\n      [0,1]: L\\n      '*': {L: read} # enter adder\\n    # Double the multiplicand by appending a 0.\\n    doubleL:\\n      [0,1]: L\\n      '*': {write: 0, R: shift}\\n    double: # return from adder\\n      [0,1,+]: R\\n      '*': {write: 0, R: shift}\\n    # Make room by shifting the multiplier right 1 cell.\\n    shift:\\n      0: {write: '*', R: shift0}\\n      1: {write: '*', R: shift1}\\n      ' ': {L: tidy} # base case: multiplier = 0\\n    shift0:\\n      0:   {R: shift0}\\n      1:   {write: 0, R: shift1}\\n      ' ': {write: 0, R: right}\\n    shift1:\\n      0:   {write: 1, R: shift0}\\n      1:   {R: shift1}\\n      ' ': {write: 1, R: right}\\n\\n    tidy:\\n      [0,1]: {write: ' ', L}\\n      +: {write: ' ', L: done}\\n    done:\\n\\n  # This is the 'binary addition' machine almost verbatim.\\n  # It's adjusted to keep the '+'\\n  # and to lead to another state instead of halting.\\n    read:\\n      0: {write: c, L: have0}\\n      1: {write: c, L: have1}\\n      +: {L: rewrite} # keep the +\\n    have0: {[0,1]: L, +: {L: add0}}\\n    have1: {[0,1]: L, +: {L: add1}}\\n    add0:\\n      [0,' ']: {write: O, R: back0}\\n      1      : {write: I, R: back0}\\n      [O,I]  : L\\n    add1:\\n      [0,' ']: {write: I, R: back1}\\n      1      : {write: O, L: carry}\\n      [O,I]  : L\\n    carry:\\n      [0,' ']: {write: 1, R: back1}\\n      1      : {write: 0, L}\\n    back0:\\n      [0,1,O,I,+]: R\\n      c: {write: 0, L: read}\\n    back1:\\n      [0,1,O,I,+]: R\\n      c: {write: 1, L: read}\\n    rewrite:\\n      O: {write: 0, L}\\n      I: {write: 1, L}\\n      [0,1]: L\\n      ' ': {R: double} # when done, go to the 'double' state\\n\\n\\n  # Remark:\\n  # We can view the machine as expressing a recursive function:\\n\\n  #   multiply(a, b) = mult(0, a, b)\\n\\n  #   mult(acc, a, 0     ) = acc\\n  #   mult(acc, a, 2k + 0) = mult(acc    , 2a, k)   where k ≠ 0\\n  #   mult(acc, a, 2k + 1) = mult(acc + a, 2a, k)\\n\\n  # where a, b, and k are natural numbers.\\n\\n  # Each reduction maintains the invariant\\n  #   mult(acc, a, b) = acc + a * b\\n  # Note that mult's third argument (b) is always decreasing,\\n  # so mult is guaranteed to halt.\\n  # Eventually b reaches 0 and the result is simply the accumulator.\\npositions:\\n  start:  {x: 80 , y: 70}\\n  init:   {x: 190, y: 70}\\n  tidy:   {x: 730, y: 70}\\n  done:   {x: 730, y: 180}\\n\\n  right:  {x: 300, y: 115}\\n  shift:  {x: 600, y: 115}\\n  shift1: {x: 450, y: 70}\\n  shift0: {x: 450, y: 160}\\n\\n  readB:  {x: 300, y: 215}\\n  addA:   {x: 160, y: 215}\\n  doubleL: {x: 550, y: 215}\\n\\n  rewrite: {x: 363, y: 300}\\n  double: {x: 650, y: 300}\\n\\n  back0:  {x: 160, y: 370}\\n  read:   {x: 300, y: 370}\\n  back1:  {x: 440, y: 370}\\n  carry:  {x: 540, y: 370}\\n\\n  add0:   {x:  60, y: 470}\\n  have0:  {x: 200, y: 470}\\n  have1:  {x: 400, y: 470}\\n  add1:   {x: 540, y: 470}\\n\"\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: 3-state busy beaver\\nsource code: |\\n  # A 3-state 2-symbol busy beaver for most non-blank symbols.\\n  # It takes 13 steps and leaves 6 non-blank symbols on the tape.\\n\\n  # What's a \\\"busy beaver\\\"?\\n  #   Suppose every possible Turing machine with n states and k symbols\\n  #   (for instance, 3 states and 2 symbols) were started on\\n  #   a blank tape with no input.\\n  #   Some of the machines would never halt. Out of the ones that do halt,\\n  #   a machine that leaves the most non-blank symbols on the tape\\n  #   is called a busy beaver.\\n  blank: '0'\\n  start state: A\\n  table:\\n    A:\\n      0: {write: 1, R: B}\\n      1: {L: C}\\n    B:\\n      0: {write: 1, L: A}\\n      1: R\\n    C:\\n      0: {write: 1, L: B}\\n      1: {R: H}\\n    H:\\n\\n  # An alternative criterion is halting after the most steps.\\n  # This busy beaver takes the most steps (21) but only prints 5 1's:\\n    # A:\\n    #   0: {write: 1, R: B}\\n    #   1: {R: H}\\n    # B:\\n    #   0: {write: 1, L: B}\\n    #   1: {write: 0, R: C}\\n    # C:\\n    #   0: {write: 1, L}\\n    #   1: {L: A}\\n    # H:\\n\\n\\n  # Exercise:\\n\\n  # • Consider Turing machines that have n states and k symbols.\\n  #   Instead of a missing instruction, halting is denoted by\\n  #   a transition to a special \\\"halt\\\" state (for a total of n+1 states).\\n  #   How many different transition functions are possible?\\n\\n  #   Hint: Each instruction writes a symbol, moves left or right,\\n  #   and goes to a state.\\n  #   There is one instruction per combination of non-halt state & symbol.\\n\\n\\n\\n  #   Answer: (2k(n+1))^(nk)\\npositions:\\n  A: {x: 320, y: 296.188}\\n  B: {x: 400, y: 157.624}\\n  C: {x: 480, y: 296.188}\\n  H: {x: 400, y: 376.188}\\n\"\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: 4-state busy beaver\\nsource code: |\\n  # A 4-state 2-symbol busy beaver\\n  # that halts after 107 steps, leaving 13 1's on the tape.\\n  # It takes the most steps *and* prints the most 1's.\\n  blank: 0\\n  start state: A\\n  table:\\n    A: {0: {write: 1, R: B}, 1:           {L: B}}\\n    B: {0: {write: 1, L: A}, 1: {write: 0, L: C}}\\n    C: {0: {write: 1, R: H}, 1:           {L: D}}\\n    D: {0: {write: 1, R   }, 1: {write: 0, R: A}}\\n    H:\\n\\n\\n  # Finding a busy beaver requires considering every n-state k-symbol\\n  # machine and proving either that it halts with no more non-blank symbols\\n  # or that it never halts at all.\\n\\n  # Even with strategies to reduce the search space—\\n  # including normalization, accelerated simulation, and automated proofs—\\n  # there are still machines that show surprising complexity\\n  # and require individual analysis.\\n\\n  # This 4-state busy beaver was proven by Allen Brady in 1983.\\n  # Busy beavers for 5 states and above are as yet unknown.\\n  # At the time of writing, the current 5-state 2-symbol contender\\n  # takes 47,176,870 steps to halt, and the 6-state contender\\n  # takes over 7.4 * 10^36534 steps\\n  # (http://www.logique.jussieu.fr/~michel/bbc.html).\\n  # \\\"Given that 5-state 2-symbol halting Turing machines can compute\\n  # Collatz-like congruential functions, it may be very hard to find\\n  # [the next busy beaver]\\\" (https://oeis.org/A060843).\\n\\n\\n  # An entertaining read on busy beavers and their profoundness:\\n\\n  # • \\\"Who Can Name the Bigger Number?\\\"\\n  #   http://www.scottaaronson.com/writings/bignumbers.html\\npositions:\\n  # square with side length 160\\n  A: {x: 320, y: 170}\\n  B: {x: 480, y: 170}\\n\\n  C: {x: 480, y: 330}\\n  D: {x: 320, y: 330}\\n  H: {x: 620, y: 330}\\n\"\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: copy 1s\\nsource code: |\\n  # Copies a string of consecutive 1s.\\n  input: '111'\\n  blank: 0\\n  start state: each\\n  table:\\n    # mark the current 1 by erasing it\\n    each:\\n      0: {R: H}\\n      1: {write: 0, R: sep}\\n    # skip to the separator\\n    sep:\\n      0: {R: add}\\n      1: R\\n    # skip to the end of the copy and write a 1\\n    add:\\n      0: {write: 1, L: sepL}\\n      1: R\\n    # return to the separator\\n    sepL:\\n      0: {L: next}\\n      1: L\\n    # return to the erased 1, restore it, and then advance to the next 1\\n    next:\\n      0: {write: 1, R: each}\\n      1: L\\n    H:\\n\\n\\n  # Exercises:\\n\\n  # • Edit the machine to copy the string indefinitely,\\n  #   i.e. given the input '11', produce 11011011011...\\n  #   Hint: this can be done by modifying only one transition.\\n\\n  # • Make a machine to output the endless sequence 1011011101111011111...\\npositions:\\n  each: {x: 400   , y: 100}\\n  sep:  {x: 400.01, y: 250}\\n  add:  {x: 400.02, y: 400}\\n  sepL: {x: 250   , y: 250}\\n  next: {x: 250.01, y: 100}\\n  H:    {x: 550   , y: 100}\\n\"\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: divisible by 3\\nsource code: |\\n  # Checks if a binary number is divisible by 3.\\n  input: '1001' # try '1111' (15), '10100' (20), '111001' (57)\\n  blank: ' '\\n  # How it works:\\n\\n  # Consider reading a binary number, say 10011 (19),\\n  # from left to right one digit at a time.\\n  # Each time a digit is read, the new value equals the new digit\\n  # plus the old value shifted left one place (multiplied by 2).\\n\\n  # Digits  Value\\n  # -------------\\n  #         0\\n  # 1       1\\n  # 10      2\\n  # 100     4\\n  # 1001    9\\n  # 10011   19\\n\\n  # Now instead of tracking the entire number, just track the remainder.\\n  # It works the same way.\\n  start state: q0\\n  table:\\n    q0:\\n      0: R       # 2*0 + 0 = 0\\n      1: {R: q1} # 2*0 + 1 = 1\\n      ' ': {R: accept}\\n    q1:\\n      0: {R: q2} # 2*1 + 0 = 2\\n      1: {R: q0} # 2*1 + 1 = 3\\n    q2:\\n      0: {R: q1} # 2*2 + 0 = 4\\n      1: {R: q2} # 2*2 + 1 = 5\\n    accept:\\n\\n\\n  # Exercises:\\n\\n  # • Modify the machine to check if n-1 is divisible by 3,\\n  #   where n is the input. That is, accept the binary of 1, 4, 7, 10, ...\\n  #   Hint: this can be done without modifying the tape (no 'write').\\n\\n  # • Round the number up to the nearest multiple of 3.\\n  #   Hint: do one pass right to find the remainder, then another pass left\\n  #   to add. See the 'binary increment' example for how to add.\\n\\n  # • Round the number down to the nearest multiple of 3.\\npositions:\\n  q0: {x: 230, y: 250}\\n  q1: {x: 400, y: 250}\\n  q2: {x: 570, y: 250}\\n  accept: {x: 230.01, y: 380}\\n\"\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: divisible by 3 (base 10)\\nsource code: |\\n  # Checks if a base 10 number is divisible by 3.\\n  input: 4728 # try 42, 57, 1337, 5328, 7521, 314159265\\n  blank: ' '\\n  # This uses the same idea as the base 2 version.\\n  #\\n  # To make things more interesting, we derive the step relation:\\n  # Let x be the number left of the tape head,\\n  #     d the digit under the head, and\\n  #     x' the number up to and including the head.\\n  # Then\\n  #   x' = 10x + d .\\n  # Notice 10 ≡ 1 (mod 3). Therefore\\n  #   x' ≡ x + d (mod 3) .\\n  # Each step simply adds the new digit's remainder mod 3.\\n  start state: q0\\n  table:\\n    q0:\\n      [0,3,6,9]: R     # 0 + 0 ≡ 0 (mod 3)\\n      [1,4,7]: {R: q1} # 0 + 1 ≡ 1\\n      [2,5,8]: {R: q2} # 0 + 2 ≡ 2\\n      ' ': {R: accept}\\n    q1:\\n      [0,3,6,9]: R     # 1 + 0 ≡ 1\\n      [1,4,7]: {R: q2} # 1 + 1 ≡ 2\\n      [2,5,8]: {R: q0} # 1 + 2 ≡ 0\\n    q2:\\n      [0,3,6,9]: R     # 2 + 0 ≡ 2\\n      [1,4,7]: {R: q0} # 2 + 1 ≡ 0\\n      [2,5,8]: {R: q1} # 2 + 2 ≡ 1\\n    accept:\\n\\n\\n  # Exercises:\\n\\n  # • Check for divisibility by 5.\\n  #   Hint: only 2 states (besides accept) are required.\\n\\n  # • Check for divisibility by 4.\\n  #   Hint: use 4 states (besides accept).\\npositions:\\n  # centered equilateral triangle with side length 250\\n  q0: {x: 275, y: 322.1688}\\n  q1: {x: 400, y: 105.6624}\\n  q2: {x: 525, y: 322.1688}\\n  accept: {x: 275.01, y: 430}\\n\"\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: multiplied lengths\\nsource code: |\\n  # Decides the language { a^(i)b^(j)c^(k) | i*j = k and i,j,k ≥ 1 }.\\n  # (a's followed by b's then c's,\\n  # where the number of a's multiplied by the number of b's\\n  # equals the number of c's.)\\n  input: aabbbcccccc # try abc, b, aabcbc, aabcc, aabbbbcccccccc\\n  blank: ' '\\n  start state: start\\n\\n  table:\\n    # Check for the form a^(i)b^(j)c^(k) where i,j,k ≥ 1.\\n    start:  {        a: {R: a+}}\\n    a+:     {a: R,   b: {R: b+}}\\n    b+:     {b: R,   c: {R: c+}}\\n    c+:     {c: R, ' ': {L: left}}\\n    left:\\n      [a,b,c]: L\\n      ' ': {R: eachA}\\n    # Then check that i*j = k.\\n    #   The approach is two nested loops:\\n    #   For each 'a':\\n    #     For each 'b':\\n    #       Mark one 'c'\\n    #   At the end, check that all c's are marked.\\n    eachA:\\n      a: {write: ' ', R: eachB}\\n      b: {R: scan}\\n    eachB:\\n      a: R\\n      b: {write: B, R: markC}\\n      C: {L: nextA}\\n    markC:\\n      [b,C]: R\\n      c: {write: C, L: nextB}\\n    nextB:\\n      [b,C]: L\\n      B: {R: eachB}\\n    nextA:\\n      a: L\\n      B: {write: b, L}\\n      ' ': {R: eachA}\\n\\n    scan:\\n      [b,C]: R\\n      ' ': {R: accept}\\n    accept:\\npositions:\\n  start:  {x: 180, y: 40}\\n  a+:     {x: 180, y: 180}\\n  b+:     {x: 180, y: 320}\\n  c+:     {x: 180, y: 460}\\n  left:   {x: 290, y: 320}\\n\\n  accept: {x: 400, y: 40}\\n  eachA:  {x: 400, y: 180}\\n  eachB:  {x: 400, y: 320}\\n  markC:  {x: 400, y: 460}\\n\\n  scan:   {x: 560, y: 180}\\n  nextA:  {x: 560, y: 320}\\n  nextB:  {x: 560, y: 460}\\n\"\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: equal strings\\nsource code: |\\n  # Decides the language { w#w | w ∈ {0,1}* }\\n  # (two equal binary strings separated by '#')\\n  input: '01001#01001' # try '#', '1#10', '10#1', '10#10'\\n  blank: ' '\\n  # Two strings are equal if they are both the empty string,\\n  # or they start with the same symbol and are equal thereafter.\\n  start state: start\\n  table:\\n    start:\\n      # Inductive case: start with the same symbol.\\n      0: {write: ' ', R: have0}\\n      1: {write: ' ', R: have1}\\n      # Base case: empty string.\\n      '#': {R: check}\\n    have0:\\n      [0,1]: R\\n      '#': {R: match0}\\n    have1:\\n      [0,1]: R\\n      '#': {R: match1}\\n    match0:\\n      x: R\\n      0: {write: x, L: back}\\n    match1:\\n      x: R\\n      1: {write: x, L: back}\\n    back:\\n      [0,1,'#',x]: L\\n      ' ': {R: start}\\n    check:\\n      x: R\\n      ' ': {R: accept}\\n    accept:\\n\\n\\n  # Exercises:\\n\\n  # • Accept if the second string is the bitwise complement\\n  #   (1s and 0s swapped) of the first, e.g. accept '1101#0010'.\\n\\n  # • Check that a binary string has the same number of 0s and 1s;\\n  #   eg., accept '001110' but reject '10010'.\\n\\n  # • Check if two strings are different.\\n  #   Example: accept '00#001' and '0101#0111', but reject '1001#1001'.\\npositions:\\n  accept: {x: 80 , y: 250}\\n  check:  {x: 190, y: 250}\\n  # regular hexagon with side length 150\\n  start:  {x: 300, y: 250}\\n  back:   {x: 600, y: 250}\\n  have1:  {x: 375, y: 120.10}\\n  match1: {x: 525, y: 120.10}\\n  have0:  {x: 375, y: 379.90}\\n  match0: {x: 525, y: 379.90}\\n\"\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: three equal lengths\\nsource code: |\\n  # Decides the language { aⁿbⁿcⁿ | n ≥ 1 }, that is,\\n  # accepts a's followed by b's then c's of the same length.\\n  input: aabbcc # try bac, aabc, aabcc, aabcbc\\n  blank: ' '\\n  # Mark the first a, b, and c on each pass (by capitalizing them).\\n  # All a's must precede all b's, which must precede all c's.\\n  # When there are no more a's,\\n  # all input symbols should have been marked.\\n  start state: qA\\n  table:\\n    qA:\\n      a: {write: A, R: qB}\\n      B: {R: scan}\\n    qB:\\n      [a,B]: R\\n      b: {write: B, R: qC}\\n    qC:\\n      [b,C]: R\\n      c: {write: C, L: back}\\n    back:\\n      [a,B,b,C]: L\\n      A: {R: qA}\\n    scan:\\n      [B,C]: R\\n      ' ': {R: accept}\\n    accept:\\n\\n\\n  # Exercises:\\n\\n  # • Suppose a ledger starts from 0 and gains one dollar for each +\\n  #   and loses one for each -. Reading left to right,\\n  #   check that the account never goes into the negative.\\n  #   Examples: accept '+-++' and '++-+--', reject '-++' and '++---+'.\\n\\n  # • Check parentheses for proper nesting,\\n  #   e.g. accept '()(()()())' but reject '(()))(' and '(()('.\\npositions:\\n  qA: {x: 240, y: 250}\\n  qB: {x: 400, y: 250}\\n  qC: {x: 560, y: 250}\\n  back:   {x: 400, y: 370}\\n  scan:   {x: 320, y: 150}\\n  accept: {x: 480, y: 150}\\n\"\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: palindrome\\nsource code: |\\n  # Accepts palindromes made of the symbols 'a' and 'b'\\n  input: 'abba' # try a, ab, bb, babab\\n  blank: ' '\\n  start state: start\\n  synonyms:\\n    accept: {R: accept}\\n    reject: {R: reject}\\n  # A palindrome is either the empty string, a single symbol,\\n  # or a (shorter) palindrome with the same symbol added to both ends.\\n  table:\\n    start:\\n      a: {write: ' ', R: haveA}\\n      b: {write: ' ', R: haveB}\\n      ' ': accept # empty string\\n    haveA:\\n      [a,b]: R\\n      ' ': {L: matchA}\\n    haveB:\\n      [a,b]: R\\n      ' ': {L: matchB}\\n    matchA:\\n      a: {write: ' ', L: back} # same symbol at both ends\\n      b: reject\\n      ' ': accept # single symbol\\n    matchB:\\n      a: reject\\n      b: {write: ' ', L: back} # same symbol at both ends\\n      ' ': accept # single symbol\\n    back:\\n      [a,b]: L\\n      ' ': {R: start}\\n    accept:\\n    reject:\\n\\n\\n  # Exercise:\\n\\n  # • Modify the machine to include 'c' in the symbol alphabet,\\n  #   so it also works for strings like 'cabbac'.\\npositions:\\n  haveA:  {x: 240, y: 185}\\n  start:  {x: 400, y: 185}\\n  haveB:  {x: 560, y: 185}\\n\\n  matchA: {x: 240, y: 315}\\n  back:   {x: 400, y: 315}\\n  matchB: {x: 560, y: 315}\\n\\n  accept: {x: 400, y: 55}\\n  reject: {x: 400, y: 445}\\n\"\n\n/***/ },\n/* 34 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: powers of two\\nsource code: |\\n  # Matches strings of 0s whose length is a power of two.\\n\\n  # This example comes from the textbook\\n  #   \\\"Introduction to the Theory of Computation\\\" (3rd edition, 2012)\\n  #   by Michael Sipser\\n  # The states have been renamed (from q1, q2, etc.)\\n  # to make it easier to understand.\\n  input: '0000' # try '0', '000', '00000000'\\n  blank: ' '\\n  start state: zero\\n  synonyms:\\n    accept: {R: accept}\\n    reject: {R: reject}\\n  # The idea: divide the length by 2 repeatedly until it reaches 1.\\n\\n  # To do this, cross off every other 0, one pass at a time.\\n  # If any pass reads an odd number of 0s (a remainder), reject right away.\\n  # Otherwise if every pass halves the length cleanly,\\n  # the length must be a power of two (1*2^n for n ≥ 0).\\n\\n  # Note that since the first 0 is never crossed off, we can simply\\n  # erase it on the first pass and start the count from 1 from then on.\\n  table:\\n    zero:\\n      0  : {write: ' ', R: one}\\n      ' ': reject\\n    # Base case: accept length of 1 = 2^0.\\n    one:\\n      0  : {write: x, R: even}\\n      ' ': accept\\n      x  : R\\n    # Inductive case: divide by 2 and check for no remainder.\\n    even:\\n      0  : {R: odd}\\n      ' ': {L: back} # return for another pass\\n      x  : R\\n    odd: # odd and > 1\\n      0  : {write: x, R: even}\\n      ' ': reject # odd number of 0s on this pass\\n      x  : R\\n    back:\\n      ' ': {R: one}\\n      [0,x]: L\\n    accept:\\n    reject:\\npositions:\\n  zero:   {x: 200, y: 200}\\n  one:    {x: 400, y: 200}\\n  even:   {x: 600, y: 200}\\n\\n  odd:    {x: 600, y: 385}\\n  back:   {x: 500, y: 125}\\n  accept: {x: 400, y: 300}\\n  reject: {x: 200, y: 385}\\n\"\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: repeat 0 1\\nsource code: |\\n  # This is the first example machine given by Alan Turing in his 1936 paper\\n  #   \\\"On Computable Numbers, with an Application to\\n  #    the Entscheidungsproblem\\\".\\n  # It simply writes the endless sequence 0 1 0 1 0 1...\\n  blank: ' '\\n  start state: b\\n  table:\\n    b:\\n      ' ': {write: 0, R: c}\\n    c:\\n      ' ':           {R: e}\\n    e:\\n      ' ': {write: 1, R: f}\\n    f:\\n      ' ':           {R: b}\\n\\n\\n  # (Turing uses the convention of leaving a gap after each output cell,\\n  # reserving it for marking the cell. For instance, on a tape that\\n  # contains '0 1x0 0 1 1y1y0y', x marks the leftmost 1 and y marks 110.)\\npositions:\\n  b: {x: 300, y: 200, fixed: false}\\n  c: {x: 450, y: 150, fixed: false}\\n  e: {x: 500, y: 300, fixed: false}\\n  f: {x: 350, y: 350, fixed: false}\\n\"\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"name: unary multiplication\\nsource code: |\\n  # Multiplies together two unary numbers separated by a '*'.\\n  # (Unary is like tallying. Here '||*|||' means 2 times 3.)\\n  input: '||*|||' # try '*', '|*|||', '||||*||'\\n  blank: ' '\\n\\n  # The idea:\\n  #   multiply(0, b) = 0\\n  #   multiply(a, b) = b + multiply(a-1, b)   when a > 0\\n  start state: eachA\\n  table:\\n    # For each 1 in a, add a copy of b.\\n    eachA:\\n      '|': {write: ' ', R: toB}  # Inductive case: a > 0.\\n      '*': {R: skip}             # Base case:      a = 0.\\n    toB:\\n      '|': R\\n      '*': {R: eachB} # enter copier\\n    nextA: # return from copier\\n      ' ': {write: '|', R: eachA}\\n      ['|','*']: L\\n\\n    skip:\\n      '|': R\\n      ' ': {R: done}\\n    done:\\n\\n    # This is the 'copy 1s' machine, with ' ' as 0 and '|' as 1.\\n    eachB:\\n      ' ': {L: nextA}\\n      '|': {write: ' ', R: sep}\\n    sep:\\n      ' ': {R: add}\\n      '|': R\\n    add:\\n      ' ': {write: '|', L: sepL}\\n      '|': R\\n    sepL:\\n      ' ': {L: nextB}\\n      '|': L\\n    nextB:\\n      ' ': {write: '|', R: eachB}\\n      '|': L\\n\\npositions:\\n  eachA:  {x: 400, y:  50}\\n  toB:    {x: 400, y: 150}\\n  eachB:  {x: 400, y: 250}\\n  sep:   {x: 400, y: 350}\\n  add:   {x: 400, y: 450}\\n\\n  sepL:  {x: 280, y: 350}\\n  nextB:  {x: 280, y: 250}\\n\\n  nextA:  {x: 280, y: 90}\\n  skip:   {x: 520, y: 90}\\n  done:   {x: 520, y: 190}\\n\"\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* global document */\n\tvar KeyValueStorage = __webpack_require__(6).KeyValueStorage;\n\tvar TMDocument = __webpack_require__(9);\n\tvar d3 = __webpack_require__(2);\n\tvar defaults = __webpack_require__(1).defaults; // NB. 2nd arg takes precedence\n\t\n\t/**\n\t * Document menu controller.\n\t *\n\t * The view is fully determined by a 3-tuple: ([ID], ID -> Name, currentID).\n\t * @constructor\n\t * @param {Object}  args                  argument object\n\t * @param {HTMLSelectElement}\n\t *                  args.menu\n\t * @param {?Node}  [args.group=args.menu] Node to add documents to.\n\t * @param {string}  args.storagePrefix\n\t * @param {?(TMDocument -> HTMLOptionElement)}\n\t *                  args.makeOption       Customize rendering for each document entry.\n\t * @param {?string} args.firsttimeDocID   Document to open on the first visit.\n\t */\n\tfunction DocumentMenu(args) {\n\t  var menu = args.menu,\n\t      group = args.group || menu,\n\t      storagePrefix = args.storagePrefix,\n\t      firsttimeDocID = args.firsttimeDocID;\n\t\n\t  if (!menu) {\n\t    throw new TypeError('DocumentMenu: missing parameter: menu element');\n\t  } else if (!storagePrefix) {\n\t    throw new TypeError('DocumentMenu: missing parameter: storage prefix');\n\t  }\n\t  if (args.makeOption) {\n\t    this.optionFromDocument = args.makeOption;\n\t  }\n\t  this.menu = menu;\n\t  this.group = group;\n\t  this.group.innerHTML = '';\n\t  this.__storagePrefix = storagePrefix;\n\t\n\t  // Load document entries (non-examples)\n\t  this.doclist = new DocumentList(storagePrefix + '.list');\n\t  this.render();\n\t  // Re-open last-opened document\n\t  this.selectDocID(this.getSavedCurrentDocID() || firsttimeDocID);\n\t\n\t  // Listen for selection changes\n\t  var self = this;\n\t  this.menu.addEventListener('change', function () {\n\t    self.onChange(self.currentDocument, {type: 'open'});\n\t  });\n\t\n\t  // Listen for storage changes in other tabs/windows\n\t  KeyValueStorage.addStorageListener(function (e) {\n\t    var docID;\n\t    var option, newOption;\n\t\n\t    if (e.key === self.doclist.storageKey) {\n\t      // case: [ID] list changed\n\t      self.doclist.readList();\n\t      self.render();\n\t    } else if ( (docID = TMDocument.IDFromNameStorageKey(e.key)) ) {\n\t      // case: single document renamed: (ID -> Name) changed\n\t      option = self.findOptionByDocID(docID);\n\t      if (option) {\n\t        // replace the whole <option>, to be consistent with .optionFromDocument\n\t        option.parentNode.replaceChild(\n\t          newOption = self.optionFromDocument(new TMDocument(docID)),\n\t          option\n\t        );\n\t        newOption.selected = option.selected;\n\t        d3.select(newOption).datum( d3.select(option).datum() );\n\t      }\n\t    }\n\t  });\n\t}\n\t\n\tObject.defineProperties(DocumentMenu.prototype, {\n\t  currentOption: {\n\t    get: function () { return this.menu.selectedOptions[0]; },\n\t    enumerable: true\n\t  },\n\t  currentDocument: {\n\t    get: function () {\n\t      var opt = this.currentOption;\n\t      return opt ? new TMDocument(opt.value) : null;\n\t    },\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tDocumentMenu.prototype.render = function () {\n\t  var currentDocID = this.currentOption ? this.currentOption.value : null;\n\t\n\t  var option = d3.select(this.group).selectAll('option')\n\t    .data(this.doclist.list, function (entry) { return entry.id; });\n\t\n\t  option.exit().remove();\n\t\n\t  var self = this;\n\t  option.enter().insert(function (entry) {\n\t    return self.optionFromDocument(new TMDocument(entry.id));\n\t  });\n\t\n\t  // If current document was deleted, switch to another document\n\t  if (this.currentOption.value !== currentDocID) {\n\t    // fallback 1: saved current docID\n\t    if (!this.selectDocID(this.getSavedCurrentDocID(), {type: 'delete'})) {\n\t      // fallback 2: whatever is now selected\n\t      this.onChange(this.currentDocument, {type: 'delete'});\n\t    }\n\t  }\n\t};\n\t\n\t// Returns the <option> whose 'value' attribute is docID.\n\tDocumentMenu.prototype.findOptionByDocID = function (docID) {\n\t  return this.menu.querySelector('option[value=\"' + docID.replace(/\"/g, '\\\\\"') + '\"]');\n\t};\n\t\n\t// Selects (switches the active item to) the given docID. Returns true on success.\n\tDocumentMenu.prototype.selectDocID = function (docID, opts) {\n\t  try {\n\t    this.findOptionByDocID(docID).selected = true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  this.onChange(this.currentDocument, opts);\n\t  return true;\n\t};\n\t\n\t// Saves the current (selected) docID to storage.\n\tDocumentMenu.prototype.saveCurrentDocID = function () {\n\t  var docID = this.currentOption && this.currentOption.value;\n\t  if (docID) {\n\t    KeyValueStorage.write(this.__storagePrefix + '.currentDocID', docID);\n\t  }\n\t};\n\t\n\t// Returns the saved current docID, otherwise null.\n\tDocumentMenu.prototype.getSavedCurrentDocID = function () {\n\t  return KeyValueStorage.read(this.__storagePrefix + '.currentDocID');\n\t};\n\t\n\t// Configurable methods\n\t\n\tDocumentMenu.prototype.optionFromDocument = function (doc) {\n\t  var option = document.createElement('option');\n\t  option.value = doc.id;\n\t  option.text = doc.name || 'untitled';\n\t  return option;\n\t};\n\t\n\t// Called when the current document ID changes\n\t// through user action (<select>) or this class's API.\n\t// The callback receives the new value of .currentDocument,\n\t// along with the options object (whose .type\n\t// is 'duplicate', 'delete', or 'open').\n\tDocumentMenu.prototype.onChange = function () {\n\t};\n\t\n\t// Internal Helpers\n\t\n\t// prepend then select\n\tDocumentMenu.prototype.__prepend = function (doc, opts) {\n\t  var option = this.optionFromDocument(doc);\n\t  this.group.insertBefore(option, this.group.firstChild);\n\t  if (opts && opts.select) {\n\t    option.selected = true;\n\t    this.onChange(doc, opts);\n\t  }\n\t  return doc;\n\t};\n\t\n\t// Methods not about Current Document\n\t\n\tDocumentMenu.prototype.newDocument = function (opts) {\n\t  return this.__prepend(this.doclist.newDocument(), defaults({type: 'open'}, opts));\n\t};\n\t\n\t// Methods about Current Document\n\t\n\tDocumentMenu.prototype.duplicate = function (doc, opts) {\n\t  return this.__prepend(this.doclist.duplicate(doc), defaults({type: 'duplicate'}, opts));\n\t};\n\t\n\tDocumentMenu.prototype.rename = function (name) {\n\t  this.currentDocument.name = name;\n\t  this.currentOption.text = name;\n\t};\n\t\n\t// required invariant: one option is always selected.\n\t// returns true if the current entry was removed from the list.\n\tDocumentMenu.prototype.delete = function (opts) {\n\t  this.currentDocument.delete();\n\t  var index = this.menu.selectedIndex;\n\t  var didDeleteEntry = this.doclist.deleteIndex(index);\n\t  if (didDeleteEntry) {\n\t    this.currentOption.remove();\n\t    this.menu.selectedIndex = index;\n\t    this.onChange(this.currentDocument, defaults({type: 'delete'}, opts));\n\t  }\n\t  return didDeleteEntry;\n\t};\n\t\n\t/////////////////////\n\t// Document List   //\n\t// (model/storage) //\n\t/////////////////////\n\t\n\t// TODO: impl. transactions\n\t\n\t// for custom documents.\n\tfunction DocumentList(storageKey) {\n\t  this.storageKey = storageKey;\n\t  this.readList();\n\t}\n\t\n\t// () -> string\n\tDocumentList.newID = function () {\n\t  return String(Date.now());\n\t};\n\t\n\t// internal methods.\n\tDocumentList.prototype.add = function (docID) {\n\t  this.__list.unshift({id: docID});\n\t  this.writeList();\n\t};\n\tDocumentList.prototype.readList = function () {\n\t  this.__list = JSON.parse(KeyValueStorage.read(this.storageKey)) || [];\n\t};\n\tDocumentList.prototype.writeList = function () {\n\t  KeyValueStorage.write(this.storageKey, JSON.stringify(this.__list));\n\t};\n\t\n\tDocumentList.prototype.newDocument = function () {\n\t  var newID = DocumentList.newID();\n\t  this.add(newID);\n\t  return new TMDocument(newID);\n\t};\n\t\n\tDocumentList.prototype.duplicate = function (doc) {\n\t  return this.newDocument().copyFrom(doc);\n\t};\n\t\n\t/**\n\t * Behaves like list.splice(index, 1).\n\t * @param  {number} index index of the element to delete\n\t * @return {boolean} true if an element was removed, false otherwise (index out of bounds)\n\t */\n\tDocumentList.prototype.deleteIndex = function (index) {\n\t  var deleted = this.__list.splice(index, 1);\n\t  this.writeList();\n\t  return (deleted.length > 0);\n\t};\n\t\n\tObject.defineProperties(DocumentList.prototype, {\n\t  list: {\n\t    get: function () { return this.__list; },\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tmodule.exports = DocumentMenu;\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar TMSimulator = __webpack_require__(39),\n\t    parser = __webpack_require__(13),\n\t    util = __webpack_require__(7),\n\t    ace = __webpack_require__(17),\n\t    d3 = __webpack_require__(2);\n\tvar TMSpecError = parser.TMSpecError;\n\tvar YAMLException = parser.YAMLException;\n\tvar UndoManager = ace.require('ace/undomanager').UndoManager;\n\t\n\t/**\n\t * For editing and displaying a TMDocument.\n\t * The controller coordinates the interactions between\n\t *   1. simulator\n\t *   2. code editor\n\t *   3. storage\n\t *\n\t * All container and button params are required.\n\t * @param {Object} containers\n\t *   Empty containers to use (contents will likely be replaced).\n\t * @param {HTMLDivElement} containers.simulator\n\t * @param {HTMLDivElement} containers.editorAlerts\n\t * @param {HTMLDivElement} containers.editor\n\t * @param {Object} buttons Buttons to use.\n\t * @param {HTMLButtonElement} buttons.simulator.run\n\t * @param {HTMLButtonElement} buttons.simulator.step\n\t * @param {HTMLButtonElement} buttons.simulator.reset\n\t * @param {HTMLButtonElement} buttons.editor.load For loading the editor source\n\t * @param {HTMLButtonElement} buttons.editor.revert For reverting the editor source\n\t * @param {TMDocument} document The document to load from and save to.\n\t */\n\tfunction TMDocumentController(containers, buttons, document) {\n\t  // FIXME: check for every container and button and throw if any are missing\n\t  // TODO: check that document param is present\n\t  this.simulator = new TMSimulator(containers.simulator, buttons.simulator);\n\t\n\t  // Set up ace editor //\n\t  var editor = ace.edit(containers.editor);\n\t  editor.session.setOptions({\n\t    mode: 'ace/mode/yaml',\n\t    tabSize: 2,\n\t    useSoftTabs: true\n\t  });\n\t  editor.setOptions({\n\t    minLines: 15,\n\t    maxLines: 50\n\t  });\n\t  // suppress warning about\n\t  // \"Automatically scrolling cursor into view after selection change\"\n\t  editor.$blockScrolling = Infinity;\n\t\n\t  var editorButtons = buttons.editor;\n\t  var self = this;\n\t  editorButtons.load\n\t      .addEventListener('click', function () {\n\t        self.loadEditorSource();\n\t        // save whenever \"Load\" is pressed\n\t        self.save();\n\t        self.editor.focus();\n\t      });\n\t  editorButtons.revert\n\t      .addEventListener('click', function () {\n\t        self.revertEditorSource();\n\t        self.editor.focus();\n\t      });\n\t\n\t  Object.defineProperties(this, {\n\t    __document: {\n\t      value: {editor: {}}, // dummy document that gets replaced\n\t      writable: true\n\t    },\n\t    buttons   : { value: buttons },\n\t    containers: { value: containers },\n\t    editor    : { value: editor, enumerable: true }\n\t  });\n\t  this.openDocument(document);\n\t}\n\t\n\tTMDocumentController.prototype.getDocument = function () {\n\t  return this.__document;\n\t};\n\t\n\t// set the backing document, without saving/loading or affecting the views.\n\tTMDocumentController.prototype.setBackingDocument = function (doc) {\n\t  this.__document = doc;\n\t};\n\t\n\t// save the current document, then open another one.\n\t// does nothing if the document ID is the same.\n\tTMDocumentController.prototype.openDocument = function (doc) {\n\t  if (this.getDocument().id === doc.id) { return; } // same document\n\t  this.save();\n\t  return this.forceLoadDocument(doc);\n\t};\n\t\n\t// (low-level) load the document. current data is discarded without saving.\n\t// this can be used to switch from a deleted document or reload a document.\n\tTMDocumentController.prototype.forceLoadDocument = function (doc, keepUndoHistory) {\n\t  this.setBackingDocument(doc);\n\t  var diagramSource = doc.sourceCode;\n\t  var editorSource = doc.editorSourceCode;\n\t  // init //\n\t  this.simulator.clear();\n\t  this.setEditorValue(editorSource == null ? diagramSource : editorSource);\n\t  // prevent undo-ing to the previous document. note: .reset() doesn't work\n\t  if (!keepUndoHistory) {\n\t    this.editor.session.setUndoManager(new UndoManager());\n\t  }\n\t\n\t  if (editorSource == null) {\n\t    // case: synced: load straight from editor.\n\t    this.loadEditorSource();\n\t  } else {\n\t    // case: not synced: editor has separate contents.\n\t    this.isSynced = false;\n\t    try {\n\t      this.simulator.sourceCode = diagramSource;\n\t      this.simulator.positionTable = doc.positionTable;\n\t    } catch (e) {\n\t      this.showCorruptDiagramAlert(true);\n\t    }\n\t  }\n\t};\n\t\n\tTMDocumentController.prototype.save = function () {\n\t  var doc = this.getDocument();\n\t  if (this.hasValidDiagram) {\n\t    // sidenote: deleting first can allow saving when space would otherwise be full\n\t    doc.editorSourceCode = this.isSynced ? undefined : this.editor.getValue();\n\t    doc.sourceCode = this.simulator.sourceCode;\n\t    doc.positionTable = this.simulator.positionTable;\n\t  } else {\n\t    if (doc.editorSourceCode == null) {\n\t      // case 1: editor was synced with the diagram.\n\t      //  only edit doc.sourceCode until it's fixed;\n\t      //  don't worsen the problem to case 2.\n\t      doc.sourceCode = this.editor.getValue();\n\t    } else {\n\t      // case 2: editor has separate contents.\n\t      //  this is more confusing, as there are two \"source code\" values to contend with.\n\t      doc.editorSourceCode = this.editor.getValue();\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Set the editor contents.\n\t * • Converts null to '', since editor.setValue(null) crashes.\n\t * • Clears the editor alerts.\n\t * @param {?string} str\n\t */\n\tTMDocumentController.prototype.setEditorValue = function (str) {\n\t  this.editor.setValue(util.coalesce(str, ''), -1 /* put cursor at start */);\n\t  this.setAlertErrors([]);\n\t};\n\t\n\t/////////////////////////\n\t// Error/Alert Display //\n\t/////////////////////////\n\t\n\tfunction aceAnnotationFromYAMLException(e) {\n\t  return {\n\t    row: e.mark.line,\n\t    column: e.mark.column,\n\t    text: 'Not valid YAML (possibly caused by a typo):\\n' + e.message,\n\t    type: 'error'\n\t  };\n\t}\n\t\n\tTMDocumentController.prototype.setAlertErrors = function (errors) {\n\t  var self = this;\n\t  var alerts = d3.select(self.containers.editorAlerts).selectAll('.alert')\n\t    .data(errors, function (e) { return String(e); }); // key by error description\n\t\n\t  alerts.exit().remove();\n\t\n\t  alerts.enter()\n\t    .append('div')\n\t      .attr('class', 'alert alert-danger')\n\t      .attr('role', 'alert')\n\t      .each(/** @this div */ function (e) {\n\t        var div = d3.select(this);\n\t        if (e instanceof YAMLException) {\n\t          var annot = aceAnnotationFromYAMLException(e);\n\t          var lineNum = annot.row + 1; // annotation lines start at 0; editor starts at 1\n\t          var column = annot.column;\n\t          div.append('strong')\n\t              .text('Syntax error on ')\n\t            .append('a')\n\t              .text('line ' + lineNum)\n\t              .on('click', function () {\n\t                self.editor.gotoLine(lineNum, column, true);\n\t                self.editor.focus();\n\t                // prevent scrolling, especially href=\"#\" scrolling to the top\n\t                d3.event.preventDefault();\n\t              })\n\t              .attr('href', '#' + self.containers.editor.id);\n\t          div.append('br');\n\t          // aside: text nodes aren't elements so they need to be wrapped (e.g. in span)\n\t          // https://github.com/mbostock/d3/issues/94\n\t          div.append('span').text('Possible reason: ' + e.reason);\n\t        } else if (e instanceof TMSpecError) {\n\t          div.html(e.message);\n\t        } else {\n\t          div.html('<strong>Unexpected error</strong>: ' + e);\n\t        }\n\t      });\n\t  self.editor.session.setAnnotations(\n\t    errors\n\t    .map(function (e) {\n\t      return (e instanceof YAMLException) ? aceAnnotationFromYAMLException(e) : null;\n\t    })\n\t    .filter(function (x) { return x; })\n\t  );\n\t};\n\t\n\t\n\t//////////////////////////////\n\t// Syncing diagram & editor //\n\t//////////////////////////////\n\t\n\t// Sync Status\n\t\n\t// This method can be overridden as necessary.\n\t// The default implementation toggles Bootstrap 3 classes.\n\tTMDocumentController.prototype.setLoadButtonSuccess = function (didSucceed) {\n\t  d3.select(this.buttons.editor.load)\n\t      .classed({\n\t        'btn-success': didSucceed,\n\t        'btn-primary': !didSucceed\n\t      });\n\t};\n\t\n\t// internal. whether the editor and diagram source code are in sync, and the diagram is valid.\n\t// Updates \"Load machine\" button display.\n\t// for future reference: .isSynced cannot be moved to TMDocument because it requires knowledge from the simulator.\n\tObject.defineProperty(TMDocumentController.prototype, 'isSynced', {\n\t  set: function (isSynced) {\n\t    isSynced = Boolean(isSynced);\n\t    if (this.__isSynced !== isSynced) {\n\t      this.__isSynced = isSynced;\n\t      this.setLoadButtonSuccess(isSynced);\n\t      if (isSynced) {\n\t        // changes cause desync\n\t        var onChange = function () {\n\t          this.isSynced = false;\n\t          this.editor.removeListener('change', onChange);\n\t        }.bind(this);\n\t        this.editor.on('change', onChange);\n\t      }\n\t    }\n\t  },\n\t  get: function () { return this.__isSynced; }\n\t});\n\t\n\t// public API for isSynced\n\tTMDocumentController.prototype.getIsSynced = function () {\n\t  return Boolean(this.isSynced);\n\t};\n\t\n\t// Load & Revert\n\t\n\t// internal. used to detect when an imported document is corrupted.\n\tObject.defineProperty(TMDocumentController.prototype, 'hasValidDiagram', {\n\t  get: function () {\n\t    return Boolean(this.simulator.sourceCode);\n\t  }\n\t});\n\t\n\t/**\n\t * Show/hide the notice that the diagram's source code is invalid;\n\t * use this when the editor has contents of its own (so it can't display the diagram's source).\n\t *\n\t * This happens for imported documents that were corrupted.\n\t * It can also happen if the value in storage is tampered with.\n\t * @param  {boolean} show true to display immediately, false to hide.\n\t */\n\tTMDocumentController.prototype.showCorruptDiagramAlert = function (show) {\n\t  function enquote(s) { return '<q>' + s + '</q>'; }\n\t  var div = d3.select(this.simulator.container);\n\t  if (show) {\n\t    var revertName = this.buttons.editor.revert.textContent.trim();\n\t    div.html('')\n\t      .append('div')\n\t        .attr('class', 'alert alert-danger')\n\t        .html('<h4>This imported document has an error</h4>' +\n\t          [ 'The diagram was not valid and could not be displayed.'\n\t          , 'You can either load a new diagram from the editor, or attempt to recover this one'\n\t          , 'using ' + enquote(revertName) + ' (which will replace the current editor contents).'\n\t          ].join('<br>')\n\t        );\n\t  } else {\n\t    div.selectAll('.alert').remove();\n\t  }\n\t};\n\t\n\t// Sync from editor to diagram\n\tTMDocumentController.prototype.loadEditorSource = function () {\n\t  // load to diagram, and report any errors\n\t  var errors = (function () {\n\t    try {\n\t      var isNewDiagram = !this.hasValidDiagram;\n\t      this.simulator.sourceCode = this.editor.getValue();\n\t      if (isNewDiagram) {\n\t        // loaded new, or recovery succeeded => close error notice, restore positions\n\t        this.showCorruptDiagramAlert(false);\n\t        this.simulator.positionTable = this.getDocument().positionTable;\n\t      }\n\t      // .toJSON() is the only known way to preserve the cursor/selection(s)\n\t      // this.__loadedEditorSelection = this.editor.session.selection.toJSON();\n\t      return [];\n\t    } catch (e) {\n\t      return [e];\n\t    }\n\t  }.call(this));\n\t  this.isSynced = (errors.length === 0);\n\t  this.setAlertErrors(errors);\n\t};\n\t\n\t// Sync from diagram to editor\n\tTMDocumentController.prototype.revertEditorSource = function () {\n\t  this.setEditorValue(this.hasValidDiagram\n\t    ? this.simulator.sourceCode\n\t    : this.getDocument().sourceCode);\n\t\n\t  if (this.hasValidDiagram) {\n\t    this.isSynced = true;\n\t  } else {\n\t    // show errors when reverting to a corrupted diagram\n\t    this.loadEditorSource();\n\t  }\n\t  // if (this.__loadedEditorSelection) {\n\t  //   this.editor.session.selection.fromJSON(this.__loadedEditorSelection);\n\t  // }\n\t};\n\t\n\tmodule.exports = TMDocumentController;\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar parseSpec = __webpack_require__(13).parseSpec,\n\t    TMViz = __webpack_require__(10),\n\t    watchInit = __webpack_require__(16).watchInit,\n\t    values = __webpack_require__(5).values;\n\t\n\t/**\n\t * Turing machine simulator component.\n\t *\n\t * Contains a state diagram, tape diagram, and button controls.\n\t * @param {[type]} container [description]\n\t * @param {[type]} buttons   [description]\n\t */\n\tfunction TMSimulator(container, buttons) {\n\t  this.container = container;\n\t  this.buttons = buttons;\n\t\n\t  var self = this;\n\t  buttons.step\n\t      .addEventListener('click', function () {\n\t        self.machine.isRunning = false;\n\t        self.machine.step(); // each step click corresponds to 1 machine step\n\t      });\n\t  buttons.run\n\t      .addEventListener('click', function () {\n\t        self.machine.isRunning = !self.machine.isRunning;\n\t      });\n\t  buttons.reset\n\t      .addEventListener('click', function () {\n\t        self.machine.reset();\n\t      });\n\t  buttons.all = values(buttons);\n\t\n\t  this.clear();\n\t}\n\t\n\tTMSimulator.prototype.clear = function () {\n\t  this.sourceCode = null;\n\t};\n\t\n\tObject.defineProperties(TMSimulator.prototype, {\n\t  /**\n\t   * The machine's source code.\n\t   * • Setting a new source code will attempt to persist the state node positions.\n\t   * • To set a new machine, first call .clear(), then set the source code.\n\t   */\n\t  sourceCode: {\n\t    get: function () {\n\t      return this.__sourceCode;\n\t    },\n\t    // throws if sourceCode has errors\n\t    set: function (sourceCode) {\n\t      if (this.machine) {\n\t        this.machine.isRunning = false; // important\n\t      }\n\t      if (sourceCode == null) {\n\t        // clear display\n\t        this.machine = null;\n\t        this.container.innerHTML = '';\n\t      } else {\n\t        // parse & check, then set\n\t        var spec = parseSpec(sourceCode);\n\t        if (this.machine) {\n\t          // case: update\n\t          // copy & restore positions, clear & load contents\n\t          var posTable = this.machine.positionTable;\n\t          this.clear();\n\t          this.machine = new TMViz(this.container, spec, posTable);\n\t        } else {\n\t          // case: load new\n\t          this.machine = new TMViz(this.container, spec);\n\t        }\n\t      }\n\t      this.__sourceCode = sourceCode;\n\t    },\n\t    enumerable: true\n\t  },\n\t  positionTable: {\n\t    get: function () {\n\t      return this.machine && this.machine.positionTable;\n\t    },\n\t    set: function (posTable) {\n\t      if (this.machine && posTable) {\n\t        this.machine.positionTable = posTable;\n\t      }\n\t    },\n\t    enumerable: true\n\t  },\n\t  machine: {\n\t    get: function () {\n\t      return this.__machine;\n\t    },\n\t    set: function (machine) {\n\t      this.__machine = machine;\n\t      this.rebindButtons();\n\t    }\n\t  }\n\t});\n\t\n\t/////////////\n\t// Buttons //\n\t/////////////\n\t\n\t/**\n\t * The innerHTML for the \"Run\" button.\n\t * The default value can be overridden.\n\t * @type {string}\n\t */\n\tTMSimulator.prototype.htmlForRunButton =\n\t  '<span class=\"glyphicon glyphicon-play\" aria-hidden=\"true\"></span><br>Run';\n\tTMSimulator.prototype.htmlForPauseButton =\n\t  '<span class=\"glyphicon glyphicon-pause\" aria-hidden=\"true\"></span><br>Pause';\n\t\n\t// bind: .disabled for Step and Run, and .innerHTML (Run/Pause) for Run\n\tfunction rebindStepRun(stepButton, runButton, runHTML, pauseHTML, machine) {\n\t  function onHaltedChange(isHalted) {\n\t    stepButton.disabled = isHalted;\n\t    runButton.disabled = isHalted;\n\t  }\n\t  function onRunningChange(isRunning) {\n\t    runButton.innerHTML = isRunning ? pauseHTML : runHTML;\n\t  }\n\t  watchInit(machine, 'isHalted', function (prop, oldval, isHalted) {\n\t    onHaltedChange(isHalted);\n\t    return isHalted;\n\t  });\n\t  watchInit(machine, 'isRunning', function (prop, oldval, isRunning) {\n\t    onRunningChange(isRunning);\n\t    return isRunning;\n\t  });\n\t}\n\t\n\t// internal method.\n\tTMSimulator.prototype.rebindButtons = function () {\n\t  var buttons = this.buttons;\n\t  var enable = (this.machine != null);\n\t  if (enable) {\n\t    rebindStepRun(buttons.step, buttons.run,\n\t      this.htmlForRunButton, this.htmlForPauseButton, this.machine);\n\t  }\n\t  buttons.all.forEach(function (b) { b.disabled = !enable; });\n\t};\n\t\n\tmodule.exports = TMSimulator;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./_template.yaml\": 21,\n\t\t\"./binaryAdd.yaml\": 22,\n\t\t\"./binaryIncrement.yaml\": 23,\n\t\t\"./binaryMult.yaml\": 24,\n\t\t\"./busyBeaver3.yaml\": 25,\n\t\t\"./busyBeaver4.yaml\": 26,\n\t\t\"./copy1s.yaml\": 27,\n\t\t\"./divisibleBy3.yaml\": 28,\n\t\t\"./divisibleBy3Base10.yaml\": 29,\n\t\t\"./lengthMult.yaml\": 30,\n\t\t\"./matchBinaryStrings.yaml\": 31,\n\t\t\"./matchThreeLengths.yaml\": 32,\n\t\t\"./palindrome.yaml\": 33,\n\t\t\"./powersOfTwo.yaml\": 34,\n\t\t\"./repeat01.yaml\": 35,\n\t\t\"./unaryMult.yaml\": 36\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 40;\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t/**\n\t * Displays a table of keyboard shortcuts.\n\t */\n\t\n\tvar d3 = __webpack_require__(2);\n\t\n\tfunction identity(x) { return x; }\n\t\n\t/**\n\t * Renders a table, using three layers of list nesting: tbody, tr, td.\n\t * @param  {[ [[HTML]] ]}     data\n\t * @param  {HTMLTableElement} table\n\t * @return {D3Selection}            D3 selection of the <tbody> elements\n\t */\n\tfunction renderTable(data, table) {\n\t  var tbody = d3.select(table).selectAll('tbody')\n\t      .data(data)\n\t    .enter().append('tbody');\n\t\n\t  var tr = tbody.selectAll('tr')\n\t      .data(identity)\n\t    .enter().append('tr');\n\t\n\t  tr.selectAll('td')\n\t      .data(identity)\n\t    .enter().append('td')\n\t      .html(identity);\n\t\n\t  return tbody;\n\t}\n\t\n\t\n\t// type Key = string;\n\t// type KeyList = [Key];\n\t\n\t// Key -> Key\n\tfunction abbreviateKey(key) {\n\t  switch (key) {\n\t    case 'Command': return 'Cmd';\n\t    case 'Option':  return 'Opt';\n\t    case 'Up':      return '↑';\n\t    case 'Down':    return '↓';\n\t    case 'Left':    return '←';\n\t    case 'Right':   return '→';\n\t    default:        return key;\n\t  }\n\t}\n\t\n\t// KeyList -> HTML\n\tfunction keylistToHTML(keys) {\n\t  return keys.map(function (key) {\n\t    return '<kbd>' + key + '</kbd>';\n\t  }).join('-');\n\t}\n\t\n\t// Commands -> String -> KeyList\n\tfunction createGetKeylist(commands) {\n\t  var platform = commands.platform;\n\t  // workaround: some ace keybindings for Mac use Alt instead of Option\n\t  var altToOption = platform !== 'mac' ? identity : function (key) {\n\t    return (key === 'Alt') ? 'Option' : key;\n\t  };\n\t\n\t  return function getKeylist(name) {\n\t    return commands.commands[name].bindKey[platform].split('-').map(altToOption);\n\t  };\n\t}\n\t\n\t\n\t// Fills a <table> with some default keyboard shortcuts.\n\tfunction main(commands, table) {\n\t  var getKeylist = createGetKeylist(commands);\n\t\n\t  return renderTable(entries.map(function (group) {\n\t    return group.map(function (d) {\n\t      return [\n\t        keylistToHTML(getKeylist(d.name).map(abbreviateKey)),\n\t        d.desc\n\t      ];\n\t    });\n\t  }), table);\n\t}\n\t\n\tvar entries = [\n\t  [\n\t    { name: 'save', desc: 'Load machine<br> <small>Save changes and load the machine.</small>' }\n\t  ], [\n\t    { name: 'togglecomment', desc: 'Toggle comment' },\n\t    { name: 'indent', desc: 'Indent selection' },\n\t    { name: 'outdent', desc: 'Unindent selection' }\n\t  ], [\n\t    { name: 'movelinesup', desc: 'Move line up' },\n\t    { name: 'movelinesdown', desc: 'Move line down' },\n\t    { name: 'duplicateSelection', desc: 'Duplicate line/selection' }\n\t  ], [\n\t    { name: 'selectMoreAfter', desc: 'Add next occurrence to selection<br> <small>Like a quick “find”. Useful for renaming things.</small>' },\n\t    { name: 'find', desc: 'Find' },\n\t    { name: 'replace', desc: 'Find and Replace' }\n\t  ]\n\t];\n\t\n\t\n\texports.main = main;\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// var d3 = require('d3');\n\tvar $ = __webpack_require__(3); // for event delegation\n\t\n\tfunction identity(x) { return x; }\n\tfunction head(array) { return array[0]; }\n\t\n\t/**\n\t * A <table> that includes a checkbox in front of each row,\n\t * and a header checkbox to (de)select all rows.\n\t * @param {D3Selection<HTMLTableElement>} args.table empty table to use\n\t * @param {[string]}    [args.headers] column headers\n\t * @param {[[string]]}  [args.data]    table data\n\t */\n\tfunction CheckboxTable(args) {\n\t  this.table = args.table;\n\t  this.headerRow = this.table.append('thead').append('tr');\n\t  this.tbody = this.table.append('tbody');\n\t  // header checkbox (selects/deselects all checkboxes)\n\t  var self = this;\n\t  this.headerCheckbox = this.headerRow\n\t    .append('th')\n\t      .attr('class', 'checkbox-cell')\n\t    .append('input')\n\t      .attr('type', 'checkbox')\n\t      .on('click', /* @this checkbox */ function () {\n\t        self.getCheckboxes().property('checked', this.checked);\n\t        self.onChange();\n\t      });\n\t  $(this.tbody.node()).on('click', 'tr', /* @this tr */ function (e) {\n\t    // treat whole <tr> as click zone\n\t    if (e.target.tagName !== 'INPUT') {\n\t      var box = this.querySelector('input[type=\"checkbox\"]');\n\t      box.checked = !box.checked;\n\t    }\n\t    // update header checkbox\n\t    self.refresh();\n\t    self.onChange();\n\t  });\n\t  // content\n\t  args.headers && this.setHeaders(args.headers);\n\t  args.data && this.setData(args.data);\n\t}\n\t\n\t/**\n\t * Set the column headers.\n\t * @param {[string]} headers\n\t */\n\tCheckboxTable.prototype.setHeaders = function (headers) {\n\t  var th = this.headerRow\n\t    .selectAll('th:not(.checkbox-cell)')\n\t      .data(headers);\n\t  th.exit().remove();\n\t  th.enter().append('th');\n\t  th.text(identity);\n\t};\n\t\n\t/**\n\t * Set the table body data.\n\t *\n\t * Each row begins with a checkbox whose .value is the first cell.\n\t * Rows are keyed by the first cell when updating data.\n\t * @param {[[string]]} data\n\t * @return this\n\t */\n\tCheckboxTable.prototype.setData = function (data) {\n\t  var tr = this.tbody.selectAll('tr')\n\t      .data(data, head);\n\t  tr.exit().remove();\n\t  tr.enter()\n\t    .append('tr')\n\t  // checkbox at the start of each row\n\t    .append('td')\n\t      .attr('class', 'checkbox-cell')\n\t    .append('input')\n\t      .attr({\n\t        type: 'checkbox',\n\t        value: head\n\t      });\n\t  tr.order();\n\t  // row cells\n\t  var td = tr.selectAll('td:not(.checkbox-cell)')\n\t      .data(identity);\n\t  td.exit().remove();\n\t  td.enter().append('td');\n\t  td.text(identity);\n\t\n\t  return this;\n\t};\n\t\n\tCheckboxTable.prototype.getCheckboxes = function () {\n\t  return this.tbody.selectAll('input[type=\"checkbox\"]');\n\t};\n\t\n\tCheckboxTable.prototype.getCheckedValues = function () {\n\t  return this.tbody.selectAll('input[type=\"checkbox\"]:checked')[0]\n\t    .map(function (x) { return x.value; });\n\t};\n\t\n\tCheckboxTable.prototype.isCheckedEmpty = function () {\n\t  var headerBox = this.headerCheckbox.node();\n\t  return !(headerBox.checked || headerBox.indeterminate);\n\t};\n\t\n\t/**\n\t * Refresh the header checkbox (called after a row checkbox is toggled).\n\t */\n\tCheckboxTable.prototype.refresh = function () {\n\t  var headerBox = this.headerCheckbox.node();\n\t  var boxes = this.getCheckboxes();\n\t\n\t  var total = boxes.size();\n\t  var checked = boxes.filter(':checked').size();\n\t  if (checked === 0) {\n\t    headerBox.checked = false;\n\t  } else if (checked === total) {\n\t    headerBox.checked = true;\n\t  }\n\t  headerBox.indeterminate = (0 < checked && checked < total);\n\t};\n\t\n\t// configurable. called after a click toggles a row or header checkbox.\n\tCheckboxTable.prototype.onChange = function () {\n\t};\n\t\n\tmodule.exports = CheckboxTable;\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* global FileReader:false */\n\tvar Promise = __webpack_require__(8); // eslint-disable-line no-shadow\n\t\n\t// arguments are forwarded to FileReader.readAsText\n\t// (Blob, ?encoding) -> Promise\n\tfunction readAsText() {\n\t  var args = arguments;\n\t  return new Promise(function (resolve, reject, onCancel) {\n\t    var reader = new FileReader();\n\t    reader.addEventListener('load', function () {\n\t      resolve(reader.result);\n\t    });\n\t    reader.addEventListener('error', function () {\n\t      reject(reader.error);\n\t    });\n\t    onCancel && onCancel(function () {\n\t      try { reader.abort(); } catch (e) {/* */}\n\t    });\n\t\n\t    reader.readAsText.apply(reader, args);\n\t  });\n\t}\n\t\n\texports.readAsText = readAsText;\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* eslint-env browser */\n\tvar format = __webpack_require__(4);\n\tvar createGist = __webpack_require__(14).createGist;\n\tvar Clipboard = __webpack_require__(50);\n\tvar $ = __webpack_require__(3); // for bootstrap tooltip\n\t\n\t// https://github.com/Modernizr/Modernizr/blob/master/feature-detects/a/download.js\n\tvar canUseDownloadAttribute =\n\t  !window.externalHost && 'download' in document.createElement('a');\n\t\n\t// can copy to clipboard programmatically?\n\tvar canUseCopyCommand = (function () {\n\t  try {\n\t    return document.queryCommandSupported('copy');\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}());\n\t\n\t// Add event handlers to select an HTMLInputElement's text on focus.\n\tfunction addSelectOnFocus(element) {\n\t  element.addEventListener('focus', function selectAll(e) {\n\t    e.target.select();\n\t  });\n\t  // Safari workaround\n\t  element.addEventListener('mouseup', function (e) {\n\t    e.preventDefault();\n\t  });\n\t}\n\t\n\t// Show a one-time tooltip.\n\t// NB. an existing title attribute overrides the tooltip options.\n\tfunction showTransientTooltip($element, options) {\n\t  $element.tooltip(options)\n\t    .tooltip('show')\n\t    .one('hidden.bs.tooltip', function () {\n\t      $element.tooltip('destroy');\n\t    });\n\t}\n\t\n\tfunction showCopiedTooltip(element) {\n\t  showTransientTooltip($(element), {title: 'Copied!', placement: 'bottom'});\n\t}\n\t\n\t\n\t///////////////////////\n\t// Share with GitHub //\n\t///////////////////////\n\t\n\t/**\n\t * Generate a new gist and display a shareable link.\n\t * @param  {HTMLElement} container  Container to use for displaying the link.\n\t * @param  {HTMLButtonElement} button\n\t * @param  {string} filename\n\t * @param  {string} contents  The file contents.\n\t * @return {Promise}          Cancellable promise to create the gist.\n\t */\n\tfunction generateGist(container, button, filename, contents) {\n\t  var oldButtonText = button.textContent;\n\t  button.textContent = 'Loading…';\n\t  button.disabled = true;\n\t\n\t  var payload = {\n\t    files: {},\n\t    // TODO: set description & public\n\t    // description: 'Turing machine for turingmachine.io',\n\t    description: 'Sample document'\n\t    // public: true\n\t  };\n\t  payload.files[filename] = {content: contents};\n\t\n\t  return createGist(payload).then(function (response) {\n\t    // Show link on success\n\t    var id = response.id;\n\t    showGeneratedGist(container, 'http://turingmachine.io/?import-gist=' + id);\n\t  }).catch(function (reason) {\n\t    // Alert error on failure\n\t    var message = (function () {\n\t      var xhr = reason.xhr;\n\t      try {\n\t        return 'Response from GitHub: “' + xhr.responseJSON.message + '”';\n\t      } catch (e) {\n\t        if (xhr.status > 0) {\n\t          return 'HTTP status code: ' + xhr.status + ' ' + xhr.statusText;\n\t        } else {\n\t          return 'GitHub could not be reached.\\nYour Internet connection may be offline.';\n\t        }\n\t      }\n\t    }());\n\t    alert('Could not create new gist.\\n\\n' + message);\n\t\n\t    button.disabled = false;\n\t    button.textContent = oldButtonText;\n\t  });\n\t}\n\t\n\tfunction showGeneratedGist(container, url) {\n\t  container.innerHTML =\n\t    '<input id=\"sharedPermalink\" type=\"url\" class=\"form-control\" readonly>' +\n\t    '<button type=\"button\" class=\"btn btn-default\" data-clipboard-target=\"#sharedPermalink\">' +\n\t    '<span class=\"glyphicon glyphicon-copy\" aria-hidden=\"true\"></span>' +\n\t    '</button>';\n\t  var urlInput = container.querySelector('input');\n\t  urlInput.value = url;\n\t  urlInput.size = url.length + 2;\n\t  addSelectOnFocus(urlInput);\n\t  urlInput.focus();\n\t}\n\t\n\tfunction createGenerateGistButton(container) {\n\t  container.innerHTML =\n\t  '<button type=\"button\" class=\"btn btn-default\">Create permalink</button>' +\n\t  '<p class=\"help-block\">This will create and link to a new' +\n\t    ' <a href=\"https://help.github.com/articles/creating-gists/#creating-an-anonymous-gist\"' +\n\t    ' target=\"_blank\">read-only</a> GitHub gist.' +\n\t  '</p>';\n\t  return container.querySelector('button');\n\t}\n\t\n\t\n\t///////////////////\n\t// Download file //\n\t///////////////////\n\t\n\t// Create a link button if canUseDownloadAttribute, otherwise a link with instructions.\n\tfunction createDownloadLink(filename, contents) {\n\t  var link = document.createElement('a');\n\t  link.href = 'data:text/x-yaml;charset=utf-8,' + encodeURIComponent(contents);\n\t  link.target = '_blank';\n\t  link.download = filename;\n\t\n\t  if (canUseDownloadAttribute) {\n\t    link.textContent = 'Download document';\n\t    link.className = 'btn btn-primary';\n\t    return link;\n\t  } else {\n\t    link.textContent = 'Right-click here and choose “Save target as…” or “Download Linked File As…”';\n\t    var p = document.createElement('p');\n\t    p.innerHTML = ', <br>then name the file to end with <code>.yaml</code>';\n\t    p.insertBefore(link, p.firstChild);\n\t    return p;\n\t  }\n\t}\n\t\n\t\n\t////////////\n\t// Common //\n\t////////////\n\t\n\tfunction init(args) {\n\t  var $dialog = args.$dialog,\n\t      getCurrentDocument = args.getCurrentDocument,\n\t      getIsSynced = args.getIsSynced,\n\t      gistContainer = args.gistContainer,\n\t      downloadContainer = args.downloadContainer,\n\t      textarea = args.textarea;\n\t\n\t  if (canUseDownloadAttribute) {\n\t    $dialog.addClass('download-attr');\n\t  }\n\t  if (!canUseCopyCommand) {\n\t    $dialog.addClass('no-copycommand');\n\t  }\n\t  gistContainer.className = 'form-group form-inline';\n\t  addSelectOnFocus(textarea);\n\t\n\t  function setupDialog() {\n\t    var doc = getCurrentDocument();\n\t    var filename = doc.name + '.yaml';\n\t    var contents = format.stringifyDocument(doc);\n\t    var gistPromise;\n\t\n\t    // warn about unsynced changes\n\t    var $alert;\n\t    if (!getIsSynced()) {\n\t      $alert = $(\n\t        '<div class=\"alert alert-warning\" role=\"alert\">' +\n\t        'The code editor has <strong>unsynced changes</strong> and might not correspond with the diagram.<br>' +\n\t        'Click <q>Load machine</q> to try to sync them. Otherwise, two sets of code will be exported.' +\n\t        '</div>'\n\t      ).prependTo($dialog.find('.modal-body'));\n\t    }\n\t\n\t    createGenerateGistButton(gistContainer).addEventListener('click', function (e) {\n\t      gistPromise = generateGist(gistContainer, e.target, filename, contents);\n\t    });\n\t\n\t    // \"Download document\" button link\n\t    downloadContainer.appendChild(createDownloadLink(filename, contents));\n\t    // <textarea> for document contents\n\t    textarea.value = contents;\n\t    // workaround \"Copy to clipboard\" .focus() scrolling down to <textarea>\n\t    // note: doesn't work when <textarea> is completely out of view\n\t    textarea.setSelectionRange(0,0);\n\t\n\t    var clipboard = new Clipboard('[data-clipboard-target]');\n\t    clipboard.on('success', function (e) {\n\t      showCopiedTooltip(e.trigger);\n\t      e.clearSelection();\n\t    });\n\t\n\t    // return cleanup function\n\t    return function () {\n\t      if (gistPromise) {\n\t        try { gistPromise.cancel(); } catch (e) {/* */}\n\t      }\n\t      if ($alert) { $alert.remove(); }\n\t      gistContainer.textContent = '';\n\t      downloadContainer.textContent = '';\n\t      textarea.value = '';\n\t      clipboard.destroy();\n\t    };\n\t  }\n\t\n\t  $dialog.on('show.bs.modal', function () {\n\t    var cleanup = setupDialog();\n\t    $dialog.one('hidden.bs.modal', cleanup);\n\t  });\n\t}\n\t\n\texports.init = init;\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* global document: false */\n\tvar docimport = __webpack_require__(15);\n\tvar format = __webpack_require__(4);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\t// Init the import panel and attach event handlers\n\t// {$dialog: jQuery, gistIDForm: HTMLFormElement, importArgs: Object} -> void\n\tfunction init(args) {\n\t  var $dialog = args.$dialog,\n\t      gistIDForm = args.gistIDForm,\n\t      importArgs = args.importArgs;\n\t\n\t  function hideDialog() {\n\t    $dialog.modal('hide');\n\t    // Workaround needed for opening another modal before a modal is done hiding.\n\t    // Without this, the <body> scrolls instead of the modal:\n\t    // modal2.show locks body scroll => modal1.hidden unlocks body scroll\n\t    // while modal2 is still open.\n\t    var nextDialog = importArgs.dialogNode;\n\t    $dialog.one('hidden.bs.modal', function () {\n\t      if (nextDialog.classList.contains('in')) {\n\t        document.body.classList.add('modal-open');\n\t      }\n\t    });\n\t  }\n\t\n\t  // Panel: From GitHub gist\n\t  gistIDForm.addEventListener('submit', function (e) {\n\t    e.preventDefault();\n\t    hideDialog();\n\t\n\t    var gistID = gistIDForm.querySelector('input[type=\"text\"]').value;\n\t    docimport.importGist(_.assign({gistID: gistID}, importArgs));\n\t  });\n\t\n\t  // Panel: From files\n\t  (function () {\n\t    // TODO: factor out element IDs and containers into interface\n\t    var panelBody = document.querySelector('#importFilesPanel > .panel-body');\n\t    // <input type=\"file\">\n\t    var fileInput = panelBody.querySelector('input[type=\"file\"]');\n\t    var importFilesButton = document.getElementById('importFilesButton');\n\t    importFilesButton.addEventListener('click', function () {\n\t      hideDialog();\n\t      docimport.importLocalFiles(_.assign({files: fileInput.files}, importArgs));\n\t    });\n\t    // <textarea>\n\t    var textarea = panelBody.querySelector('textarea');\n\t    var importContentsButton = document.getElementById('importContentsButton');\n\t    importContentsButton.parentNode.style.position = 'relative';\n\t    importContentsButton.addEventListener('click', function (e) {\n\t      if (importDocumentContents(\n\t        { containers: {status: e.target.parentNode, details: panelBody },\n\t          importDocument: importArgs.importDocument },\n\t        textarea.value\n\t      )) {\n\t        textarea.select();\n\t      }\n\t    });\n\t  }());\n\t}\n\t\n\t///////////////////////////////\n\t// Import from pasted string //\n\t///////////////////////////////\n\t\n\t// () -> HTMLButtonElement\n\tfunction createCloseIcon() {\n\t  return d3.select(document.createElement('button'))\n\t      .attr({class: 'close', 'aria-label': 'Close'})\n\t      .html('<span aria-hidden=\"true\">&times;</span>')\n\t    .node();\n\t}\n\t\n\t// Show import outcome (success/failure) and error (if any)\n\t// ({status: HTMLElement, details: HTMLElement}, ?Error) -> void\n\tfunction showImportContentOutcome(containers, error) {\n\t  var statusContainer = d3.select(containers.status),\n\t      detailsContainer = d3.select(containers.details);\n\t  statusContainer.selectAll('[role=\"alert\"]').remove();\n\t  detailsContainer.selectAll('.alert').remove();\n\t  var status = statusContainer.append('span')\n\t      .attr({role: 'alert'})\n\t      .style({\n\t        position: 'absolute', left: 0, width: '40%', // center between left and button\n\t        top: '50%', transform: 'translateY(-60%)' // center vertically\n\t      });\n\t\n\t  // () -> string\n\t  function showErrorDetails() {\n\t    var details = detailsContainer.append('div')\n\t        .attr({role: 'alert', class: 'alert alert-danger'})\n\t        .style('margin-top', '1em');\n\t    details.append(createCloseIcon)\n\t        .attr('data-dismiss', 'alert')\n\t        .on('click', function () {\n\t          status.remove(); // dismiss details => also dismiss status\n\t        });\n\t    if (error instanceof format.YAMLException) {\n\t      details.append('h4').text('Not valid YAML'); // only \".alert h4\" has margin-top: 0\n\t      details.append('pre').text(error.message);\n\t    } else if (error instanceof format.InvalidDocumentError) {\n\t      details.append('span')\n\t          .text(error.message.replace(/\\.?$/, '.')); // add period if missing\n\t    } else {\n\t      details.append('h4').text('Unexpected error');\n\t      details.append('pre').text(String(error));\n\t      return 'Import failed';\n\t    }\n\t    return 'Not a valid document';\n\t  }\n\t\n\t  if (error) {\n\t    var statusSummary = showErrorDetails();\n\t    status.attr({class: 'text-danger'})\n\t        .html('<span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span> '\n\t                + statusSummary);\n\t  } else {\n\t    status.attr({class: 'text-success'})\n\t        .html('<span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span> '\n\t                + 'Import succeeded')\n\t      .transition()\n\t        .delay(2500)\n\t        .duration(2000)\n\t        .style('opacity', 0)\n\t        .remove();\n\t  }\n\t}\n\t\n\t// returns true if import succeeded\n\tfunction importDocumentContents(opts, content) {\n\t  var containers = opts.containers,\n\t      importDocument = opts.importDocument;\n\t\n\t  var error = (function () {\n\t    try {\n\t      importDocument(format.parseDocument(content));\n\t    } catch (e) {\n\t      return e;\n\t    }\n\t  }());\n\t  showImportContentOutcome(containers, error);\n\t  return (error == null);\n\t}\n\t\n\texports.init = init;\n\n\n/***/ },\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */\n/***/ function(module, exports) {\n\n\tmodule.exports = Clipboard;\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** main.bundle.js\n **/","// main entry point for index.html.\n// important: make sure to coordinate variables and elements between the HTML and JS\n'use strict';\n\n/* eslint-env browser */\nvar TMDocumentController = require('./TMDocumentController'),\n    DocumentMenu = require('./DocumentMenu'),\n    examples = require('./examples'),\n    toDocFragment = require('./util').toDocFragment;\nvar ace = require('ace-builds/src-min-noconflict');\nvar $ = require('jquery'); // for Bootstrap modal dialog events\n\n// load up front so going offline doesn't break anything\n// (for snippet placeholders, used by \"New blank document\")\nace.config.loadModule('ace/ext/language_tools');\n\nfunction getId(id) { return document.getElementById(id); }\n\n\n//////////////////////////\n// Compatibility Checks //\n//////////////////////////\n\n(function () {\n  function addWarning(html) {\n    getId('diagram-column').insertAdjacentHTML('afterbegin', html);\n  }\n\n  // Warn when falling back to RAM-only storage\n  // NB. This mainly covers local storage errors and Safari's Private Browsing.\n  if (!require('./storage').canUseLocalStorage) {\n    addWarning('<div class=\"alert alert-info alert-dismissible\" role=\"alert\">' +\n      '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>' +\n      '<p>Local storage is unavailable. ' +\n      'Your browser could be in Private Browsing mode, or it might not support <a href=\"http://caniuse.com/#feat=namevalue-storage\" target=\"_blank\">local storage</a>.</p>' +\n      '<strong>Any changes will be lost after leaving the webpage.</strong>' +\n      '</div>');\n  }\n\n  /*\n  Warn for IE 10 and under, which misbehave and lack certain features.\n  Examples:\n    • IE 9 and under don't support .classList.\n    • IE 10's \"storage event is fired even on the originating document where it occurred.\"\n      http://caniuse.com/#feat=namevalue-storage\n  */\n\n  // Detect IE 10 and under (http://stackoverflow.com/a/16135889)\n  var isIEUnder11 = new Function('/*@cc_on return @_jscript_version; @*/')() < 11;\n  if (isIEUnder11) {\n    addWarning('<div class=\"alert alert-warning alert-dismissible\" role=\"alert\">' +\n      '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>' +\n      '<p><strong>Your <a href=\"http://whatbrowser.org\" target=\"_blank\">web browser</a> is out of date</strong> and does not support some features used by this program.<br>' +\n      '<em>The page may not work correctly, and data may be lost.</em></p>' +\n      'Please update your browser, or use another browser such as <a href=\"http://www.google.com/chrome/browser/\" target=\"_blank\">Chrome</a> or <a href=\"http://getfirefox.com\" target=\"_blank\">Firefox</a>.' +\n      '</div>');\n  }\n\n  // Warn about iOS local storage volatility\n  $(function () {\n    // Detect iOS (http://stackoverflow.com/a/9039885)\n    var isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n    if (isIOS) {\n      getId('misc-tips-list').insertAdjacentHTML('afterbegin',\n        '<li><strong class=\"text-warning\">Important note for iOS</strong>: ' +\n        'iOS saves browser local storage in the cache folder, which is <strong>not backed up</strong>, and is ' +\n        '<q cite=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Browser_compatibility\"><strong>subject to occasional clean up</strong>, ' +\n        'at the behest of the OS, typically if space is short.</q></li>');\n    }\n  });\n}());\n\n\n/////////////////////\n// Import & Export //\n/////////////////////\n\nfunction importDocument(obj) {\n  // duplicate data into the menu, then open it.\n  menu.duplicate(obj, {select: true, type: 'open'});\n}\n\n$(function () {\n  // Enable buttons now that handlers are ready\n  $('.tm-needsready').prop('disabled', false);\n\n  // Run import from URL query (if any)\n  var importArgs = {\n    dialogNode: getId('importDialog'),\n    importDocument: importDocument\n  };\n  require('./sharing/import').runImport(importArgs);\n  // Init import dialog\n  var $importPanel = $('#importPanel');\n  $importPanel.one('show.bs.modal', function () {\n    require('./sharing/import-panel').init({\n      $dialog: $importPanel,\n      gistIDForm: getId('gistIDForm'),\n      importArgs: importArgs\n    });\n  });\n  // Init export dialog\n  var exportPanel = getId('exportPanel');\n  require('./sharing/export-panel').init({\n    $dialog: $(exportPanel),\n    getCurrentDocument: function () {\n      controller.save(); // IMPORTANT: save changes, otherwise data model is out of date\n      return menu.currentDocument;\n    },\n    getIsSynced: controller.getIsSynced.bind(controller),\n    gistContainer: getId('shareGistContainer'),\n    downloadContainer: getId('exportDownloadContainer'),\n    copyContentsButton: getId('copyContentsButton'),\n    textarea: exportPanel.querySelector('textarea')\n  });\n});\n\n\n///////////////////\n// Document List //\n///////////////////\n\nvar menu = (function () {\n  var select = document.getElementById('tm-doc-menu');\n  // Group: Documents\n  var docGroup = document.createElement('optgroup');\n  docGroup.label = 'Documents';\n  select.appendChild(docGroup);\n  // Group: Examples\n  var exampleGroup = document.createElement('optgroup');\n  exampleGroup.label = 'Examples';\n  exampleGroup.appendChild(toDocFragment(examples.list.map(\n    DocumentMenu.prototype.optionFromDocument)));\n  select.appendChild(exampleGroup);\n\n  return new DocumentMenu({\n    menu: select,\n    group: docGroup,\n    storagePrefix: 'tm.docs',\n    firsttimeDocID: examples.firsttimeDocID\n  });\n})();\n\n\n/////////////////\n// \"Edit\" Menu //\n/////////////////\n\n(function () {\n  menu.onChange = function (doc, opts) {\n    switch (opts && opts.type) {\n      case 'duplicate':\n        controller.setBackingDocument(doc);\n        break;\n      case 'delete':\n        controller.forceLoadDocument(doc);\n        break;\n      default:\n        controller.openDocument(doc);\n    }\n    refreshEditMenu();\n  };\n\n  // Refresh the \"Edit\" menu items depending on document vs. example.\n  var refreshEditMenu = (function () {\n    var renameLink = document.querySelector('[data-target=\"#renameDialog\"]');\n    var deleteLink = document.querySelector('[data-target=\"#deleteDialog\"]');\n    var wasExample;\n    function renameExample() {\n      // duplicate, then rename the duplicate.\n      // how it works: switch to duplicate document ->\n      //   refreshEditMenu() enables rename dialog -> event bubbles up -> dialog opens.\n      // this might be the simplest way; Event.stopPropagation leaves the dropdown hanging.\n      duplicateDocument();\n    }\n\n    return function () {\n      var isExample = menu.currentDocument.isExample;\n      if (wasExample !== isExample) {\n        if (!isExample) {\n          renameLink.textContent = 'Rename…';\n          renameLink.removeEventListener('click', renameExample);\n          renameLink.setAttribute('data-toggle', 'modal');\n          deleteLink.textContent = 'Delete…';\n          deleteLink.setAttribute('data-target', '#deleteDialog');\n        } else {\n          renameLink.textContent = 'Rename a copy…';\n          renameLink.addEventListener('click', renameExample);\n          renameLink.removeAttribute('data-toggle');\n          deleteLink.textContent = 'Reset this example…';\n          deleteLink.setAttribute('data-target', '#resetExampleDialog');\n        }\n        wasExample = isExample;\n      }\n    };\n  }());\n  refreshEditMenu();\n\n  // only swap out the storage backing; don't affect views or undo history\n  function duplicateDocument() {\n    controller.save();\n    menu.duplicate(menu.currentDocument, {select: true});\n  }\n\n  function newBlankDocument() {\n    menu.newDocument({select: true});\n    // load up starter template\n    if (controller.editor.insertSnippet) { // async loaded\n      controller.editor.insertSnippet(examples.blankTemplate);\n      controller.loadEditorSource();\n    }\n  }\n\n  var $renameDialog = $(getId('renameDialog'));\n  [{id: 'tm-doc-action-duplicate', callback: duplicateDocument},\n  {id: 'tm-doc-action-newblank', callback: newBlankDocument}\n  ].forEach(function (item) {\n    document.getElementById(item.id).addEventListener('click', function (e) {\n      e.preventDefault();\n      item.callback(e);\n\n      $renameDialog.modal({keyboard: false})\n        .one('hidden.bs.modal', function () {\n          controller.editor.focus();\n        });\n    });\n  });\n}());\n\n\n/////////////\n// Dialogs //\n/////////////\n\n(function () {\n  // Rename\n  var $renameDialog = $(getId('renameDialog'));\n  var renameBox = getId('renameDialogInput');\n  $renameDialog\n    .on('show.bs.modal', function () {\n      renameBox.value = menu.currentOption.text;\n    })\n    .on('shown.bs.modal', function () {\n      renameBox.select();\n    })\n    // NB. remember data-keyboard=\"false\" on the triggering element,\n    // to prevent closing with Esc and causing a save.\n    // remark: an exception thrown on 'hide' prevents the dialog from closing,\n    // so save during 'hidden' instead.\n    .on('hidden.bs.modal', function () {\n      var newName = renameBox.value;\n      if (menu.currentOption.text !== newName) {\n        // TODO: report errors\n        menu.rename(newName);\n      }\n      renameBox.value = '';\n    });\n  document.getElementById('renameDialogForm').addEventListener('submit', function (e) {\n    e.preventDefault();\n    $renameDialog.modal('hide');\n  });\n\n  // Delete\n  function deleteDocument() {\n    menu.delete();\n  }\n  document.getElementById('tm-doc-action-delete').addEventListener('click', deleteDocument);\n\n  // Reset Example\n  function discardReset() {\n    menu.delete();\n    // load manually since example stays and selection doesn't change\n    controller.forceLoadDocument(menu.currentDocument);\n  }\n  function saveReset() {\n    menu.duplicate(menu.currentDocument, {select: false});\n    discardReset();\n  }\n  document.getElementById('tm-doc-action-resetdiscard').addEventListener('click', discardReset);\n  document.getElementById('tm-doc-action-resetsave').addEventListener('click', saveReset);\n}());\n\n////////////////\n// Controller //\n////////////////\n\nvar controller = (function () {\n  function getButton(container, type) {\n    return container.querySelector('button.tm-' + type);\n  }\n  var editor = document.getElementById('editor-container');\n  // button containers\n  var sim = document.getElementById('controls-container');\n  var ed = editor.parentNode;\n\n  return new TMDocumentController({\n    simulator: document.getElementById('machine-container'),\n    editorAlerts: document.getElementById('editor-alerts-container'),\n    editor: editor\n  }, {\n    simulator: {\n      run: getButton(sim, 'run'),\n      step: getButton(sim, 'step'),\n      reset: getButton(sim, 'reset')\n    },\n    editor: {\n      load: getButton(ed, 'editor-load'),\n      revert: getButton(ed, 'editor-revert')\n    }\n  }, menu.currentDocument);\n}());\n\ncontroller.editor.setTheme('ace/theme/chrome');\ncontroller.editor.commands.addCommand({\n  name: 'save',\n  bindKey: { mac: 'Cmd-S', win: 'Ctrl-S' },\n  exec: function () {\n    controller.loadEditorSource();\n  }\n});\ncontroller.editor.session.setUseWrapMode(true);\n$(function () {\n  try {\n    require('./kbdshortcuts').main(controller.editor.commands,\n      getId('kbdShortcutTable')\n    );\n  } catch (e) {\n    /* */\n  }\n});\n\n// XXX: confirm if save fails\nwindow.addEventListener('beforeunload', function () {\n  controller.save();\n  menu.saveCurrentDocID();\n});\n\n// Keep the current document in sync across tabs/windows\nwindow.addEventListener('blur', function () {\n  // One tab saves the data...\n  controller.save();\n});\n(function () {\n  // ...and the other tab loads it.\n  var isReloading = false;\n  require('./TMDocument').addOutsideChangeListener(function (docID, prop) {\n    if (docID === controller.getDocument().id && prop !== 'name' && !isReloading) {\n      // Batch together property changes into one reload\n      isReloading = true;\n      setTimeout(function () {\n        isReloading = false;\n        // Preserve undo history\n        controller.forceLoadDocument(controller.getDocument(), true);\n\n      }, 100);\n    }\n  });\n}());\n\n// For interaction/debugging\nexports.controller = controller;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main.js\n ** module id = 0\n ** module chunks = 1\n **/","module.exports = jQuery;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jQuery\"\n ** module id = 3\n ** module chunks = 1\n **/","'use strict';\n\nvar jsyaml = require('js-yaml'),\n    _ = require('lodash/fp');\n\n// Document Serialization\n\nvar docToYaml = {\n  name: 'name',\n  sourceCode: 'source code',\n  positionTable: 'positions',\n  editorSourceCode: 'editor contents'\n};\nvar yamlToDoc = _.invert(docToYaml);\n\n// like _.mapKeys, but only using the keys specified in a mapping object.\n// {[key: string] -> string} -> ?Object -> Object\nfunction mapKeys(mapping) {\n  return function (input) {\n    var output = {};\n    if (input != null) {\n      Object.keys(mapping).forEach(function (fromKey) {\n        var toKey = mapping[fromKey];\n        output[toKey] = input[fromKey];\n      });\n    }\n    return output;\n  };\n}\n\n// we want parseDocument . stringifyDocument = identity, up to null == undefined.\n\n/**\n * Serialize a document.\n * For each state node position, only .x, .y, and .fixed are saved.\n * .fixed is omitted if true (its default value).\n * @param  {TMDocument} doc document to serialize\n * @return {string}\n */\nvar stringifyDocument = _.flow(\n  mapKeys(docToYaml),\n  _.omitBy(function (x) { return x == null; }),\n  _.update('positions', _.mapValues(function (pos) {\n    return pos.fixed\n      ? {x: pos.x, y: pos.y}\n      : {x: pos.x, y: pos.y, fixed: false};\n  })),\n  // NB. lodash/fp/partialRight takes an array of arguments.\n  _.partialRight(jsyaml.safeDump, [{\n    flowLevel: 2,       // positions: one state per line\n    lineWidth: -1,      // don't wrap lines\n    noRefs: true,       // no aliases/references are used\n    noCompatMode: true  // use y: instead of 'y':\n  }])\n);\n\n/**\n * Deserialize a document.\n * State positions' .px and .py are optional and default to .x and .y.\n * .fixed defaults to true.\n * @param  {string} str    serialized document\n * @return {Object}        data usable in TMDocument.copyFrom()\n * @throws {YAMLException} on YAML syntax error\n * @throws {TypeError}     when missing \"source code\" string property\n */\nvar parseDocument = _.flow(\n  jsyaml.safeLoad,\n  _.update('positions', _.mapValues(function (pos) {\n    // NB. lodash/fp/defaults is swapped: 2nd takes precedence\n    return _.defaults({px: pos.x, py: pos.y, fixed: true}, pos);\n  })),\n  mapKeys(yamlToDoc),\n  checkData\n);\n\n// throw if \"source code\" attribute is missing or not a string\nfunction checkData(obj) {\n  if (obj == null || obj.sourceCode == null) {\n    throw new InvalidDocumentError('The “source code:” value is missing');\n  } else if (!_.isString(obj.sourceCode)) {\n    throw new InvalidDocumentError('The “source code:” value needs to be of type string');\n  }\n  return obj;\n}\n\n// for valid YAML that is not valid as a document\nfunction InvalidDocumentError(message) {\n  this.name = 'InvalidDocumentError';\n  this.message = message || 'Invalid document';\n  this.stack = (new Error()).stack;\n}\nInvalidDocumentError.prototype = Object.create(Error.prototype);\nInvalidDocumentError.prototype.constructor = InvalidDocumentError;\n\nexports.stringifyDocument = stringifyDocument;\nexports.parseDocument = parseDocument;\nexports.InvalidDocumentError = InvalidDocumentError;\n\n// Re-exports\nexports.YAMLException = jsyaml.YAMLException;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sharing/format.js\n ** module id = 4\n ** module chunks = 1\n **/","'use strict';\n\n/* global localStorage:false, window:false */\n\n///////////////////////\n// Key-Value Storage //\n///////////////////////\n\nvar canUseLocalStorage = (function () {\n  // from modernizr v3.3.1 (modernizr.com)\n  var mod = 'modernizr';\n  try {\n    localStorage.setItem(mod, mod);\n    localStorage.removeItem(mod);\n    return true;\n  } catch (e) {\n    return false;\n  }\n})();\n\n// RAM-only fallback\nvar RAMStorage = (function () {\n  var obj = {};\n  return Object.freeze({\n    get length() { return Object.keys(obj).length; },\n    key: function (n) { return (n in Object.keys(obj)) ? Object.keys(obj)[n] : null; },\n    getItem: function (key) { return {}.hasOwnProperty.call(obj, key) ? obj[key] : null; },\n    setItem: function (key, val) { obj[key] = String(val); },\n    removeItem: function (key) { delete obj[key]; },\n    clear: function () { obj = {}; }\n  });\n})();\n\nvar KeyValueStorage = (function () {\n  var s = canUseLocalStorage ? localStorage : RAMStorage;\n\n  return {\n    read  : s.getItem.bind(s),\n    write : s.setItem.bind(s),\n    remove: s.removeItem.bind(s),\n    // Registers a listener for StorageEvents from other tabs/windows.\n    addStorageListener: canUseLocalStorage\n      ? function (listener) {\n        window.addEventListener('storage', function (e) {\n          if (e.storageArea === localStorage) {\n            listener(e);\n          }\n        });\n      }\n      : function () {},\n    removeStorageListener: canUseLocalStorage\n      ? window.removeEventListener.bind(window, 'storage')\n      : function () {}\n  };\n})();\n\n\nexports.canUseLocalStorage = canUseLocalStorage;\nexports.KeyValueStorage = KeyValueStorage;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/storage.js\n ** module id = 6\n ** module chunks = 1\n **/","'use strict';\n// misc. utilities\n\n//////////////////////////////////\n// Utilities for null/undefined //\n//////////////////////////////////\n\n// Assert non-null.\n// Return the value if it is not null or undefined; otherwise, throw an error.\nfunction nonNull(value) {\n  if (value == null) {\n    throw new Error('expected a non-null defined value, but got: ' + String(value));\n  }\n  return value;\n}\n\n// Null coalescing: iff the first argument is null or undefined, return the second.\nfunction coalesce(a, b) {\n  return (a != null) ? a : b;\n}\n\n// Apply a function to a value if non-null, otherwise return the value.\n// (Monadic bind for maybe (option) type.)\n// ((a -> b), ?a) -> ?b\nfunction applyMaybe(f, x) {\n  return (x != null) ? f(x) : x;\n}\n\n// Returns the first function result that is not null or undefined.\n// Otherwise, returns undefined.\n// ((a -> ?b), [a]) -> ?b\nfunction getFirst(f, xs) {\n  for (var i = 0; i < xs.length; ++i) {\n    var val = f(xs[i]);\n    if (val != null) {\n      return val;\n    }\n  }\n}\n\n/////////\n// DOM //\n/////////\n\n/* global document */\n\n/**\n * Concat an array of DOM Nodes into a DocumentFragment.\n * @param  {[Node]} array\n * @return {DocumentFragment}\n */\nfunction toDocFragment(array) {\n  var result = document.createDocumentFragment();\n  array.forEach(result.appendChild.bind(result));\n  return result;\n}\n\nexports.nonNull = nonNull;\nexports.coalesce = coalesce;\nexports.applyMaybe = applyMaybe;\nexports.getFirst = getFirst;\n\nexports.toDocFragment = toDocFragment;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/util.js\n ** module id = 7\n ** module chunks = 1\n **/","module.exports = Promise;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Promise\"\n ** module id = 8\n ** module chunks = 1\n **/","'use strict';\n\nvar KeyValueStorage = require('./storage').KeyValueStorage,\n    examples = require('./examples'),\n    util = require('./util'),\n    _ = require('lodash/fp');\n\n/**\n * Document model (storage).\n * @param {string} docID Each document ID in a key-value store should be unique.\n *                       An ID is typically a timestamp. It should not contain '.'.\n */\nfunction TMDocument(docID) {\n  var preset = examples.get(docID);\n  Object.defineProperties(this, {\n    id:     { value: docID },\n    prefix: { value: 'doc.' + docID },\n    isExample: { value: preset ? true : false }\n  });\n  // fall back to reading presets for example documents\n  if (preset) {\n    Object.defineProperties(this, {\n      sourceCode: useFallbackGet(preset, this, 'sourceCode'),\n      // names are read-only\n      positionTable: useFallbackGet(preset, this, 'positionTable'),\n      name: {\n        get: function () { return preset.name; },\n        set: function () {}, // don't err when removing (set = null)\n        enumerable: true\n      }\n    });\n  }\n}\n\nfunction useFallbackGet(preset, obj, prop) {\n  var proto = Object.getPrototypeOf(obj);\n  var desc = Object.getOwnPropertyDescriptor(proto, prop);\n  var get = desc.get;\n  desc.get = function () {\n    return util.coalesce(get.call(obj), preset[prop]);\n  };\n  return desc;\n}\n\n// internal method.\nTMDocument.prototype.path = function (path) {\n  return [this.prefix, path].join('.');\n};\n\n(function () {\n  var store = KeyValueStorage;\n  var read = store.read.bind(store);\n  var write = function (key, val) {\n    if (val != null) {\n      store.write(key, val);\n    } else {\n      store.remove(key);\n    }\n  };\n  // var remove = store.remove.bind(store);\n  function stringProp(path) {\n    return {\n      get: function () { return read(this.path(path)); },\n      set: function (val) { write(this.path(path), val); },\n      enumerable: true\n    };\n  }\n\n  var propDescriptors = {\n    sourceCode: stringProp('diagram.sourceCode'),\n    positionTable: {\n      get: function () {\n        return util.applyMaybe(parsePositionTable,\n          read(this.path('diagram.positions')));\n      },\n      set: function (val) {\n        write(this.path('diagram.positions'),\n          util.applyMaybe(stringifyPositionTable, val));\n      },\n      enumerable: true\n    },\n    editorSourceCode: stringProp('editor.sourceCode'),\n    name: stringProp('name')\n  };\n  Object.defineProperties(TMDocument.prototype, propDescriptors);\n  TMDocument.prototype.dataKeys = Object.keys(propDescriptors);\n})();\n\n// TODO: bypass unnecessary parse & stringify cycle for positions\nTMDocument.prototype.copyFrom = function (other) {\n  this.dataKeys.forEach(function (key) {\n    this[key] = other[key];\n  }, this);\n  return this;\n};\n\nTMDocument.prototype.delete = function () {\n  this.copyFrom({});\n};\n\n// Cross-tab/window storage sync\n\n/**\n * Checks whether a storage key is for a document's name.\n * @return {?string} The document ID if true, otherwise null.\n */\nTMDocument.IDFromNameStorageKey = function (string) {\n  var result = /^doc\\.([^.]+)\\.name$/.exec(string);\n  return result && result[1];\n};\n\n/**\n * Registers a listener for document changes caused by other tabs/windows.\n * The listener receives the document ID and the property name that changed.\n * @param {Function} listener\n */\nTMDocument.addOutsideChangeListener = function (listener) {\n  var re = /^doc\\.([^.]+)\\.(.+)$/;\n\n  KeyValueStorage.addStorageListener(function (e) {\n    var matches = re.exec(e.key);\n    if (matches) {\n      listener(matches[1], matches[2]);\n    }\n  });\n};\n\n/////////////////////////\n// Position table JSON //\n/////////////////////////\n\n// JSON -> Object\nvar parsePositionTable = JSON.parse;\n\n// PositionTable -> JSON\nvar stringifyPositionTable = _.flow(\n  _.mapValues(truncateCoords(2)),\n  JSON.stringify\n);\n\n// Truncate .x .y .px .py to 2 decimal places, to save space.\nfunction truncateCoords(decimalPlaces) {\n  var multiplier = Math.pow(10, decimalPlaces);\n  function truncate(value) {\n    return Math.round(value * multiplier)/multiplier;\n  }\n\n  return function (val) {\n    var result =  _(val).pick(['x','y','px','py']).mapValues(truncate).value();\n    result.fixed = val.fixed;\n    return result;\n  };\n}\n\nmodule.exports = TMDocument;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/TMDocument.js\n ** module id = 9\n ** module chunks = 1\n **/","'use strict';\n\nvar parseDocument = require('./sharing/format').parseDocument;\nvar fromPairs = require('lodash/fp').fromPairs;\n\n\nfunction requireExample(name) {\n  return require('raw!./examples/' + name + '.yaml');\n}\n\nvar examplePairs = [\n  'repeat01',\n  'binaryIncrement',\n  'divisibleBy3',\n  'copy1s',\n  'divisibleBy3Base10',\n  'matchThreeLengths',\n  'matchBinaryStrings',\n  'palindrome',\n  'busyBeaver3',\n  'busyBeaver4',\n  'powersOfTwo',\n  'lengthMult',\n  'binaryAdd',\n  'unaryMult',\n  'binaryMult'\n].map(function (id) {\n  // parse each string into a document\n  var doc = parseDocument(requireExample(id));\n  doc.id = id;\n\n  return [id, doc];\n});\nvar examples = Object.freeze(fromPairs(examplePairs));\n\n\nfunction isExampleID(docID) {\n  return {}.hasOwnProperty.call(examples, docID);\n}\n\nfunction get(docID) {\n  return isExampleID(docID) ? examples[docID] : null;\n}\n\nvar list = examplePairs.map(function (pair) { return pair[1]; });\n\n\nexports.hasID = isExampleID;\nexports.get = get;\nexports.list = list;\nexports.firsttimeDocID = 'binaryIncrement';\nexports.blankTemplate = requireExample('_template');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/examples.js\n ** module id = 12\n ** module chunks = 1\n **/","'use strict';\n\nvar TM = require('./TuringMachine'),\n    jsyaml = require('js-yaml'),\n    _ = require('lodash');\n\n/**\n * Thrown when parsing a string that is valid as YAML but invalid\n * as a machine specification.\n *\n * Examples: unrecognized synonym, no start state defined,\n * transitioning to an undeclared state.\n *\n * A readable message is generated based on the details (if any) provided.\n * @param {string} reason  A readable error code.\n *   As an error code, this should be relatively short and not include runtime values.\n * @param {?Object} details Optional details. Possible keys:\n *                          problemValue, state, key, synonym, info, suggestion\n */\nfunction TMSpecError(reason, details) {\n  this.name = 'TMSpecError';\n  this.stack = (new Error()).stack;\n\n  this.reason = reason;\n  this.details = details || {};\n}\nTMSpecError.prototype = Object.create(Error.prototype);\nTMSpecError.prototype.constructor = TMSpecError;\n\n// generate a formatted description in HTML\nObject.defineProperty(TMSpecError.prototype, 'message', {\n  get: function () {\n    var header = this.reason;\n    var details = this.details;\n\n    function code(str) { return '<code>' + str + '</code>'; }\n    function showLoc(state, symbol, synonym) {\n      if (state != null) {\n        if (symbol != null) {\n          return ' in the transition from state ' + code(state) + ' and symbol ' + code(symbol);\n        } else {\n          return ' for state ' + code(state);\n        }\n      } else if (synonym != null) {\n        return ' in the definition of synonym ' + code(synonym);\n      }\n      return '';\n    }\n    var problemValue = details.problemValue ? ' ' + code(details.problemValue) : '';\n    var location = showLoc(details.state, details.symbol, details.synonym);\n    var sentences = ['<strong>' + header + problemValue + '</strong>' + location\n      , details.info, details.suggestion]\n      .filter(_.identity)\n      .map(function (s) { return s + '.'; });\n    if (location) { sentences.splice(1, 0, '<br>'); }\n    return sentences.join(' ');\n  },\n  enumerable: true\n});\n\n// type TransitionTable = {[key: string]: ?{[key: string]: string} }\n// type TMSpec = {blank: string, start state: string, table: TransitionTable}\n\n// TODO: check with flow (flowtype.org)\n// throws YAMLException on YAML syntax error\n// throws TMSpecError for an invalid spec (eg. no start state, transitioning to an undefined state)\n// string -> TMSpec\nfunction parseSpec(str) {\n  var obj = jsyaml.safeLoad(str);\n  // check for required object properties.\n  // auto-convert .blank and 'start state' to string, for convenience.\n  if (obj == null) { throw new TMSpecError('The document is empty',\n    {info: 'Every Turing machine requires a <code>blank</code> tape symbol,' +\n    ' a <code>start state</code>, and a transition <code>table</code>'}); }\n  var detailsForBlank = {suggestion:\n    'Examples: <code>blank: \\' \\'</code>, <code>blank: \\'0\\'</code>'};\n  if (obj.blank == null) {\n    throw new TMSpecError('No blank symbol was specified', detailsForBlank);\n  }\n  obj.blank = String(obj.blank);\n  if (obj.blank.length !== 1) {\n    throw new TMSpecError('The blank symbol must be a string of length 1', detailsForBlank);\n  }\n  obj.startState = obj['start state'];\n  delete obj['start state'];\n  if (obj.startState == null) {\n    throw new TMSpecError('No start state was specified',\n    {suggestion: 'Assign one using <code>start state: </code>'});\n  }\n  obj.startState = String(obj.startState);\n  // parse synonyms and transition table\n  checkTableType(obj.table); // parseSynonyms assumes a table object\n  var synonyms = parseSynonyms(obj.synonyms, obj.table);\n  obj.table = parseTable(synonyms, obj.table);\n  // check for references to non-existent states\n  if (!(obj.startState in obj.table)) {\n    throw new TMSpecError('The start state has to be declared in the transition table');\n  }\n\n  return obj;\n}\n\nfunction checkTableType(val) {\n  if (val == null) {\n    throw new TMSpecError('Missing transition table',\n    {suggestion: 'Specify one using <code>table:</code>'});\n  }\n  if (typeof val !== 'object') {\n    throw new TMSpecError('Transition table has an invalid type',\n    {problemValue: typeof val,\n    info: 'The transition table should be a nested mapping from states to symbols to instructions'});\n  }\n}\n\n// (any, Object) -> ?SynonymMap\nfunction parseSynonyms(val, table) {\n  if (val == null) {\n    return null;\n  }\n  if (typeof val !== 'object') {\n    throw new TMSpecError('Synonyms table has an invalid type',\n      {problemValue: typeof val,\n      info: 'Synonyms should be a mapping from string abbreviations to instructions'\n        + ' (e.g. <code>accept: {R: accept}</code>)'});\n  }\n  return _.mapValues(val, function (actionVal, key) {\n    try {\n      return parseInstruction(null, table, actionVal);\n    } catch (e) {\n      if (e instanceof TMSpecError) {\n        e.details.synonym = key;\n        if (e.reason === 'Unrecognized string') {\n          e.details.info = 'Note that a synonym cannot be defined using another synonym';\n        }\n      }\n      throw e;\n    }\n  });\n}\n\n// (?SynonymMap, {[key: string]: string}) -> TransitionTable\nfunction parseTable(synonyms, val) {\n  return _.mapValues(val, function (stateObj, state) {\n    if (stateObj == null) {\n      // case: halting state\n      return null;\n    }\n    if (typeof stateObj !== 'object') {\n      throw new TMSpecError('State entry has an invalid type',\n      {problemValue: typeof stateObj, state: state,\n      info: 'Each state should map symbols to instructions. An empty map signifies a halting state.'});\n    }\n    return _.mapValues(stateObj, function (actionVal, symbol) {\n      try {\n        return parseInstruction(synonyms, val, actionVal);\n      } catch (e) {\n        if (e instanceof TMSpecError) {\n          e.details.state = state;\n          e.details.symbol = symbol;\n        }\n        throw e;\n      }\n    });\n  });\n}\n\n// omits null/undefined properties\n// (?string, direction, ?string) -> {symbol?: string, move: direction, state?: string}\nfunction makeInstruction(symbol, move, state) {\n  return Object.freeze(_.omitBy({symbol: symbol, move: move, state: state},\n    function (x) { return x == null; }));\n}\n\nfunction checkTarget(table, instruct) {\n  if (instruct.state != null && !(instruct.state in table)) {\n    throw new TMSpecError('Undeclared state', {problemValue: instruct.state,\n    suggestion: 'Make sure to list all states in the transition table and define their transitions (if any)'});\n  }\n  return instruct;\n}\n\n// throws if the target state is undeclared (not in the table)\n// type SynonymMap = {[key: string]: TMAction}\n// (SynonymMap?, Object, string | Object) -> TMAction\nfunction parseInstruction(synonyms, table, val) {\n  return checkTarget(table, function () {\n    switch (typeof val) {\n      case 'string': return parseInstructionString(synonyms, val);\n      case 'object': return parseInstructionObject(val);\n      default: throw new TMSpecError('Invalid instruction type',\n        {problemValue: typeof val,\n          info: 'An instruction can be a string (a direction <code>L</code>/<code>R</code> or a synonym)'\n            + ' or a mapping (examples: <code>{R: accept}</code>, <code>{write: \\' \\', L: start}</code>)'});\n    }\n  }());\n}\n\nvar moveLeft = Object.freeze({move: TM.MoveHead.left});\nvar moveRight = Object.freeze({move: TM.MoveHead.right});\n\n// case: direction or synonym\nfunction parseInstructionString(synonyms, val) {\n  if (val === 'L') {\n    return moveLeft;\n  } else if (val === 'R') {\n    return moveRight;\n  }\n  // note: this order prevents overriding L/R in synonyms, as that would\n  // allow inconsistent notation, e.g. 'R' and {R: ..} being different.\n  if (synonyms && synonyms[val]) { return synonyms[val]; }\n  throw new TMSpecError('Unrecognized string',\n    {problemValue: val,\n    info: 'An instruction can be a string if it\\'s a synonym or a direction'});\n}\n\n// type ActionObj = {write?: any, L: ?string} | {write?: any, R: ?string}\n// case: ActionObj\nfunction parseInstructionObject(val) {\n  var symbol, move, state;\n  if (val == null) { throw new TMSpecError('Missing instruction'); }\n  // prevent typos: check for unrecognized keys\n  (function () {\n    var badKey;\n    if (!Object.keys(val).every(function (key) {\n      badKey = key;\n      return key === 'L' || key === 'R' || key === 'write';\n    })) {\n      throw new TMSpecError('Unrecognized key',\n      {problemValue: badKey,\n      info: 'An instruction always has a tape movement <code>L</code> or <code>R</code>, '\n        + 'and optionally can <code>write</code> a symbol'});\n    }\n  })();\n  // one L/R key is required, with optional state value\n  if ('L' in val && 'R' in val) {\n    throw new TMSpecError('Conflicting tape movements',\n    {info: 'Each instruction needs exactly one movement direction, but two were found'});\n  }\n  if ('L' in val) {\n    move = TM.MoveHead.left;\n    state = val.L;\n  } else if ('R' in val) {\n    move = TM.MoveHead.right;\n    state = val.R;\n  } else {\n    throw new TMSpecError('Missing movement direction');\n  }\n  // write key is optional, but must contain a char value if present\n  if ('write' in val) {\n    var writeStr = String(val.write);\n    if (writeStr.length === 1) {\n      symbol = writeStr;\n    } else {\n      throw new TMSpecError('Write requires a string of length 1');\n    }\n  }\n  return makeInstruction(symbol, move, state);\n}\n\nexports.TMSpecError = TMSpecError;\nexports.parseSpec = parseSpec;\n// re-exports\nexports.YAMLException = jsyaml.YAMLException;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/parser.js\n ** module id = 13\n ** module chunks = 1\n **/","'use strict';\n\nvar $ = require('jquery');\nvar Promise = require('bluebird'); // eslint-disable-line no-shadow\n\nPromise.config({\n  cancellation: true\n});\n\n// On success, 'resolve' is called with the response data.\n// On failure, 'reject' is called with {xhr: jqXHR, status: string, error: string}.\n// To abort the request, use .cancel (from bluebird). Neither is called in that case.\n// jqXHR -> Promise\nfunction promisifyAjax(xhr) {\n  return new Promise(function (resolve, reject, onCancel) {\n    xhr.then(resolve, function (jqXHR, textStatus, errorThrown) {\n      reject({xhr: jqXHR, status: textStatus, error: errorThrown});\n    });\n    onCancel && onCancel(function () {\n      try { xhr.abort(); } catch (e) {/* */}\n    });\n  });\n}\n\n// GistID -> Promise\n// @see promisifyAjax\nfunction getGist(gistID) {\n  return promisifyAjax($.ajax({\n    url: 'https://api.github.com/gists/' + gistID,\n    type: 'GET',\n    dataType: 'json',\n    accepts: 'application/vnd.github.v3+json' // specify API version for stability\n  }));\n}\n\n// https://developer.github.com/v3/gists/#create-a-gist\n// @see promisifyAjax\n// {files: {[filename: string]: {content: string}},\n//  description?: string, public?: boolean} -> Promise\nfunction createGist(payload) {\n  // return Promise.delay(1000, {id: 'offlinetesting'});\n  return promisifyAjax($.ajax({\n    url: 'https://api.github.com/gists',\n    type: 'POST',\n    data: JSON.stringify(payload),\n    // headers: {Authorization: 'token DEVTOKEN'},\n    dataType: 'json', // response datatype\n    accepts: 'application/vnd.github.v3+json' // specify API version for stability\n  }));\n}\n\nexports.getGist = getGist;\nexports.createGist = createGist;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sharing/gist.js\n ** module id = 14\n ** module chunks = 1\n **/","'use strict';\n\n/* eslint-env browser */\nvar CheckboxTable = require('./CheckboxTable');\nvar FileReaderPromise = require('./FileReaderPromise');\nvar format = require('./format');\nvar getGist = require('./gist').getGist;\n\nvar $ = require('jquery');\nvar _ = require('lodash/fp');\nvar d3 = require('d3');\nvar Promise = require('bluebird');  // eslint-disable-line no-shadow\n\n\nfunction decodeFormURLComponent(str) {\n  return decodeURIComponent(str.replace('+', ' '));\n}\n\n/**\n * https://url.spec.whatwg.org/#urlencoded-parsing\n */\nfunction queryParams(queryString) {\n  function decode(str) {\n    return str ? decodeFormURLComponent(str) : '';\n  }\n  var result = {};\n  queryString.split('&').forEach(function (str) {\n    var pair = str.split('=');\n    result[decode(pair[0])] = decode(pair[1]);\n  });\n  return result;\n}\n\n///////////////////\n// Import Dialog //\n///////////////////\n\n// requires an existing dialog in the DOM\nfunction ImportDialog(dialogNode) {\n  this.node = dialogNode;\n  this.titleNode = dialogNode.querySelector('.modal-header .modal-title');\n  this.bodyNode = dialogNode.querySelector('.modal-body');\n  this.footerNode = dialogNode.querySelector('.modal-footer');\n  this.cancelButtonNode = d3.select(this.footerNode).text('')\n    .append('button')\n      .attr({type: 'button', class: 'btn btn-default', 'data-dismiss': 'modal'})\n      .text('Cancel')\n    .node();\n  this.$dialog = $(dialogNode)\n    .one('hide.bs.modal', this.__onClose.bind(this));\n}\n\n// internal event handler.\nImportDialog.prototype.__onClose = function () {\n  this.onClose();\n  // use .empty to clean up $.on used in CheckboxTable\n  $(this.bodyNode).empty();\n  $(this.footerNode).empty();\n};\n\n// configurable\nImportDialog.prototype.onClose = function () {\n};\n\nImportDialog.prototype.show = function () {\n  this.$dialog.modal({backdrop: 'static', keyboard: false});\n};\n\nImportDialog.prototype.close = function () {\n  this.$dialog.modal('hide');\n};\n\nImportDialog.prototype.setBodyChildNodes = function (nodes) {\n  this.bodyNode.textContent = '';\n  this.bodyNode.appendChild(joinNodes(nodes));\n};\n\nfunction appendPanel(div, titleHTML) {\n  var panel = div.append('div')\n      .attr('class', 'panel panel-default');\n  panel.append('div')\n      .attr('class', 'panel-heading')\n    .append('h5')\n      .attr('class', 'panel-title')\n      .html(titleHTML);\n  return panel;\n}\n\nvar emptySelection = Object.freeze(d3.selectAll([]));\n\n// (D3Selection, {title: string, data: [string]}) -> void\nfunction appendListPanel(container, data) {\n  var panel = emptySelection;\n  if (data.data && data.data.length) {\n    panel = appendPanel(container, data.title);\n    panel.append('div')\n        .attr('class', 'panel-body')\n      .append('ul')\n        .attr('class', 'list-inline')\n      .selectAll('li')\n        .data(data.data)\n      .enter().append('li')\n        .text(_.identity);\n  }\n  return panel;\n}\n\n// ( D3Selection, {title: string, headers: [string],\n//  data: [[string | (D3Selection -> void)]]} ) -> void\nfunction appendTablePanel(container, data) {\n  var panel = emptySelection;\n  if (data.data && data.data.length) {\n    panel = appendPanel(container, data.title);\n    panel.append('table')\n        .attr('class', 'table')\n        .call(function (table) {\n          // headers\n          table.append('thead')\n            .append('tr').selectAll('th').data(data.headers)\n            .enter().append('th').text(_.identity);\n          // contents\n          table.append('tbody').selectAll('tr')\n              .data(data.data)\n            .enter().append('tr').selectAll('td')\n              .data(_.identity)\n            .enter().append('td').each(/* @this td */ function (d) {\n              var td = d3.select(this);\n              if (typeof d === 'function') {\n                d(td);\n              } else {\n                td.text(d);\n              }\n            });\n        });\n  }\n  return panel;\n}\n\n// NonDocumentFiles -> boolean\nvar isEmptyNonDocs = _.every(_.isEmpty);\n\n// (D3Selection, NonDocumentFiles, ?string) -> void\nfunction listNondocuments(dialogBody, nondocs, disclosureTitle) {\n  if (isEmptyNonDocs(nondocs)) {\n    return;\n  }\n  // Disclosure triangle\n  var collapseId = 'nondocument-files';\n  dialogBody.append('a')\n      .attr({\n        href: '#'+collapseId,\n        class: 'disclosure-triangle collapsed',\n        role: 'button',\n        'data-toggle': 'collapse'\n      })\n      .text(disclosureTitle ? disclosureTitle : 'Show other files');\n  var container = dialogBody.append('div')\n      .attr({\n        id: collapseId,\n        class: 'collapse'\n      });\n  // Errors by type, most important first\n  // TODO: auto-report unexpected errors\n  appendTablePanel(container, {\n    title: 'Unexpected error',\n    headers: ['Filename', 'Error'],\n    data: nondocs.otherError.map(function functionName(d) {\n      return [d.filename, errorString(d.error) ];\n    })\n  }).classed('panel-danger', true);\n  appendTablePanel(container, {\n    title: 'Not suitable for import',\n    headers: ['Filename', 'Reason'],\n    data: nondocs.badDoc.map(function (d) {\n      return [d.filename, d.error.message];\n    })\n  });\n  appendTablePanel(container, {\n    title: 'Not valid as YAML',\n    headers: ['Filename', 'Syntax error'],\n    data: nondocs.badYAML.map(function (d) {\n      return [d.filename,\n        function (td) { td.append('pre').text(d.error.message); } ];\n    })\n  });\n  // TODO: document largest allowed filesize\n  appendListPanel(container, {\n    title: 'File is too large',\n    data: nondocs.tooLarge\n  });\n  appendListPanel(container, {\n    title: 'Different file extension (not <code>.yaml</code>/<code>.yml</code>)',\n    data: nondocs.wrongType\n  });\n}\n\n// deal with objects like DOMError (whose .toString gives \"[object FileError]\")\nfunction errorString(reason) {\n  return reason instanceof Error\n    ? String(reason)\n    : reason.message || reason.name || String(reason);\n}\n\n//////////////////////\n// Document Parsing //\n//////////////////////\n\n/* Interface for Document Parsing\n  type GistFile = {\n    filename: string,\n    size: number,\n    truncated: boolean,\n    content: string\n  };\n  type TMData = {source code: string};\n  type DocFile = {filename: string, size: number, document: TMData};\n\n  type Filename = string;\n  type ErrorTuple = {filename: Filename, error: Error | YAMLException};\n  type NonDocumentFiles = {\n    wrongType:  [Filename],\n    tooLarge:   [Filename],\n    badYAML:    [ErrorTuple],\n    badDoc:     [ErrorTuple],\n    otherError: [ErrorTuple]\n  };\n  type ParseResult = {documentFiles: [DocFile], nonDocumentFiles: NonDocumentFiles};\n */\n\n// Parse each file into a document or a categorized error.\n// Local files are read only if they have the right extension and size.\n// NB. make sure to convert FileList to an actual Array.\n// The promise resolves with ParseResult.\n// (number, [GistFile | File]) -> Promise\nfunction parseFiles(sizelimit, files) {\n  var docfiles = [];\n  var nondocs = {wrongType: [], tooLarge: [], badYAML: [], badDoc: [], otherError: []};\n\n  return Promise.each(files, function (file) {\n    var name = file.filename || file.name; // eslint-disable-line no-shadow\n    if (name.search(/\\.ya?ml$/) === -1) {\n      nondocs.wrongType.push(name);\n    } else if (file.truncated || file.size > sizelimit) {\n      nondocs.tooLarge.push(name);\n    } else {\n      return Promise.resolve(file.content != null ? file.content\n        : FileReaderPromise.readAsText(file))\n      .then(function (content) {\n        docfiles.push({\n          filename: name,\n          size: file.size,\n          document: format.parseDocument(content)\n        });\n      }).catch(function (e) {\n        var tuple = {filename: name, error: e};\n        if (e instanceof format.YAMLException) {\n          nondocs.badYAML.push(tuple);\n        } else if (e instanceof format.InvalidDocumentError) {\n          nondocs.badDoc.push(tuple);\n        } else {\n          nondocs.otherError.push(tuple);\n        }\n      });\n    }\n  }).return({documentFiles: docfiles, nonDocumentFiles: nondocs});\n}\n\n/////////////////////\n// Document Import //\n/////////////////////\n\nfunction showSizeKB(n) {\n  // example: 12.0 KB\n  return (Math.ceil(10*n/1024)/10).toFixed(1) + ' KB';\n}\n\n// {docFiles: [DocFile], nonDocumentFiles: NonDocumentFiles,\n//  dialog: ImportDialog, citeNode?: Node, importDocuments: [TMData] -> void} -> void\nfunction pickMultiple(args) {\n  var docfiles = args.documentFiles,\n      nondocs = args.nonDocumentFiles,\n      citeNode = args.citeNode,\n      dialog = args.dialog,\n      importDocuments = args.importDocuments;\n  // Dialog body\n  var dialogBody = d3.select(dialog.bodyNode).text('');\n  dialogBody.append('p').call(function (p) {\n    p.append('strong').text('Select documents to import');\n    if (citeNode) {\n      p.node().appendChild(document.createTextNode(' from '));\n      p.node().appendChild(citeNode);\n    }\n  });\n  var ctable = new CheckboxTable({\n    table: dialogBody.append('table')\n      .attr({class: 'table table-hover checkbox-table'}),\n    headers: ['Filename', 'Size'],\n    data: docfiles.map(function (doc) {\n      return [doc.filename, showSizeKB(doc.size)];\n    })\n  });\n  listNondocuments(dialogBody, nondocs);\n  // Dialog footer\n  var importButton = d3.select(dialog.footerNode).append('button')\n      .attr({type: 'button', class: 'btn btn-primary', 'data-dismiss': 'modal'})\n      .property('disabled', true)\n      .text('Import')\n      .on('click', /* @this button */ function () {\n        d3.select(this).on('click', null); // prevent double import; like .one()\n        var names = d3.set(ctable.getCheckedValues());\n        importDocuments(docfiles\n          .filter(function (file) { return names.has(file.filename); })\n          .map(_.property('document'))\n        );\n      })\n    .node();\n  ctable.onChange = function () {\n    importButton.disabled = ctable.isCheckedEmpty();\n  };\n}\n\n// {nonDocumentFiles: NonDocumentFiles, dialog: ImportDialog, citeLink?: Node} -> void\nfunction pickNone(args) {\n  var nondocs = args.nonDocumentFiles,\n      dialog = args.dialog,\n      citeLink = args.citeLink;\n\n  d3.select(dialog.bodyNode).text('').call(function (body) {\n    body.append('p').append('strong').text(!isEmptyNonDocs(nondocs)\n        ? 'None of the files are suitable for import.'\n        : 'No files were selected.');\n    if (citeLink) {\n      body.append('p').text('Requested URL: ').node().appendChild(citeLink);\n    }\n    listNondocuments(body, nondocs, 'Show details');\n  });\n  dialog.cancelButtonNode.textContent = 'Close';\n}\n\n// Intermingle text and nodes.\n// [Node | string] -> DocumentFragment\nfunction joinNodes(nodes) {\n  var result = document.createDocumentFragment();\n  nodes.forEach(function (node) {\n    if (typeof node === 'string') {\n      result.appendChild(document.createTextNode(node));\n    } else {\n      result.appendChild(node);\n    }\n  });\n  return result;\n}\n\nfunction wrapTag(tagName, node) {\n  var tag = document.createElement(tagName);\n  tag.appendChild(node);\n  return tag;\n}\n\n// Create a link with text <q>`gist description`</q> if given, otherwise gist `gistID`.\n// {gistID: string, description?: string} -> HTMLAnchorElement | HTMLQuoteElement\nfunction gistDescriptionLink(args) {\n  var link = externalLink({\n    href: 'https://gist.github.com/' + args.gistID,\n    textContent: args.description || ('gist ' + args.gistID)\n  });\n  return args.description ? wrapTag('q', link) : link;\n}\n\n// {href: string, textContent?: string} -> HTMLAnchorElement\nfunction externalLink(args) {\n  var link = document.createElement('a');\n  link.href = args.href;\n  link.target = '_blank';\n  link.textContent = args.textContent || args.href;\n  return link;\n}\n\n// The returned promise resolves/cancels when the dialog is closed:\n// • resolves if loading (before import) finished and the user cancelled anyway\n// • cancels if files were still loading and not yet displayed (eg. fetch, parse)\n// ({gistID: string, dialogNode: Node, importDocument: TMData -> void} |\n// {files: FileList, dialogNode: Node, importDocument: TMData -> void}) -> Promise\nfunction importCommon(args) {\n  var gistID = args.gistID,\n      dialogNode = args.dialogNode,\n      importDocument = args.importDocument;\n\n  var dialog = new ImportDialog(dialogNode);\n  var citeLink;\n  var citeNode;\n  // prevent accidentally exceeding quota\n  var MAX_FILESIZE = 400 * 1024;\n  // Start fetch, show dialog\n  var filesPromise = (function () {\n    if (gistID != null) {\n      dialog.titleNode.textContent = 'Import from GitHub gist';\n      citeLink = externalLink({href: 'https://gist.github.com/' + gistID});\n      dialog.setBodyChildNodes(['Retrieving ', citeLink, '…']);\n      return getGist(gistID).then(function (data) {\n        citeNode = gistDescriptionLink({\n          gistID: gistID,\n          description: data.description\n        });\n        dialog.setBodyChildNodes(['Processing ', citeLink, '…']);\n        return _.values(data.files);\n      });\n    } else {\n      dialog.titleNode.textContent = 'Import from files';\n      dialog.setBodyChildNodes(['Processing files…']);\n      return Promise.resolve(_.toArray(args.files));\n    }\n  }());\n  dialog.show();\n  // Parse, pick, import\n  var promise = filesPromise\n  .then(parseFiles.bind(undefined, MAX_FILESIZE))\n  .then(function (parsed) {\n    var docfiles = parsed.documentFiles;\n    switch (docfiles.length) {\n      case 0:\n        pickNone({\n          nonDocumentFiles: parsed.nonDocumentFiles,\n          dialog: dialog,\n          citeLink: citeLink\n        });\n        return;\n      case 1:\n        importDocument(docfiles[0].document);\n        dialog.close();\n        return;\n      default:\n        pickMultiple({\n          documentFiles: docfiles,\n          nonDocumentFiles: parsed.nonDocumentFiles,\n          dialog: dialog,\n          citeNode: citeNode,\n          importDocuments: function importDocuments(docs) {\n            docs.concat().reverse().map(importDocument);\n          }\n        });\n    }\n  })\n  .catch(function (reason) {\n    dialog.setBodyChildNodes([messageForError(reason)]\n      .concat(citeLink ? ['Requested URL: ', citeLink] : [])\n    );\n    dialog.cancelButtonNode.textContent = 'Close';\n  });\n  var waitForDialog = new Promise(function (resolve) {\n    dialog.onClose = function () {\n      promise.cancel();\n      resolve();\n    };\n  });\n  return promise.return(waitForDialog);\n}\n\n// {gistID: string, dialogNode: Node, importDocument: TMData -> void} -> Promise\nvar importGist = importCommon;\n\n// {files: FileList, dialogNode: Node, importDocument: TMData -> void} -> Promise\nvar importLocalFiles = importCommon;\n\nfunction createElementHTML(tagName, innerHTML) {\n  var element = document.createElement(tagName);\n  element.innerHTML = innerHTML;\n  return element;\n}\n\n// ({xhr: jqXHR} | Error) -> Node\nfunction messageForError(reason) {\n  var xhr = reason.xhr;\n  if (xhr) {\n    // case: couldn't fetch\n    return createElementHTML('p', (function () {\n      switch (reason.status) {\n        case 'abort':\n          return [''];\n        case 'timeout':\n          return [\n            '<strong>The request timed out.</strong>',\n            'You can check your connection and try again.'\n          ];\n        default:\n        // case: HTTP error\n          if (xhr.status === 404) {\n            return [\n              '<strong>No GitHub gist exists with that ID.</strong>',\n              'It’s possible the ID is incorrect, or the gist was deleted.'\n            ];\n          } else if (xhr.status === 0) {\n            return ['GitHub could not be reached. Your Internet connection may be offline.'];\n          } else {\n            return [\n              'The import failed because of a <strong>connection error</strong>.',\n              'HTTP status code: ' + xhr.status + ' ' + xhr.statusText\n            ];\n          }\n      }\n    }()).join('<br>'));\n  } else {\n    // case: other error\n    var pre = document.createElement('pre');\n    pre.textContent = errorString(reason);\n    return joinNodes([\n      createElementHTML('p', 'An unexpected error occurred:'), pre]);\n  }\n}\n\n// Import a gist given by ?import-gist=gistID and reset the URL.\n// Call this once the DOM is ready (document.readyState === 'interactive').\n// {dialogNode: Node, importDocument: TMData -> void} -> void\nfunction runImport(args) {\n  // TODO: test with dev server\n  function resetURL() {\n    try {\n      console.info('resetURL called'); // eslint-disable-line no-console\n      history.replaceState(null, null, '/');\n    } catch (e) {\n      // ignore\n    }\n  }\n\n  var params = queryParams(location.search.substring(1));\n  var gistID = params['import-gist'];\n  if (gistID) {\n    importGist(_.assign({gistID: gistID}, args))\n    .finally(resetURL);\n  }\n}\n\nexports.importGist = importGist;\nexports.importLocalFiles = importLocalFiles;\nexports.runImport = runImport;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sharing/import.js\n ** module id = 15\n ** module chunks = 1\n **/","module.exports = ace;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"ace\"\n ** module id = 17\n ** module chunks = 1\n **/","module.exports = jsyaml;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jsyaml\"\n ** module id = 18\n ** module chunks = 1\n **/","module.exports = \"input: '${2}'\\nblank: '${3: }'\\nstart state: ${4:start}\\ntable:\\n  ${4}:\\n    ${5}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/_template.yaml\n ** module id = 21\n ** module chunks = 1\n **/","module.exports = \"name: binary addition\\nsource code: |\\n  # Adds two binary numbers together.\\n\\n  # Format: Given input a+b where a and b are binary numbers,\\n  # leaves c b on the tape, where c = a+b.\\n  # Example: '11+1' => '100 1'.\\n  input: '1011+11001'\\n  blank: ' '\\n  start state: right\\n  table:\\n    # Start at the second number's rightmost digit.\\n    right:\\n      [0,1,+]: R\\n      ' ': {L: read}\\n\\n    # Add each digit from right to left:\\n    # read the current digit of the second number,\\n    read:\\n      0: {write: c, L: have0}\\n      1: {write: c, L: have1}\\n      +: {write: ' ', L: rewrite}\\n    # and add it to the next place of the first number,\\n    # marking the place (using O or I) as already added.\\n    have0: {[0,1]: L, +: {L: add0}}\\n    have1: {[0,1]: L, +: {L: add1}}\\n    add0:\\n      [0,' ']: {write: O, R: back0}\\n      1      : {write: I, R: back0}\\n      [O,I]  : L\\n    add1:\\n      [0,' ']: {write: I, R: back1}\\n      1      : {write: O, L: carry}\\n      [O,I]  : L\\n    carry:\\n      [0,' ']: {write: 1, R: back1}\\n      1      : {write: 0, L}\\n    # Then, restore the current digit, and repeat with the next digit.\\n    back0:\\n      [0,1,O,I,+]: R\\n      c: {write: 0, L: read}\\n    back1:\\n      [0,1,O,I,+]: R\\n      c: {write: 1, L: read}\\n\\n    # Finish: rewrite place markers back to 0s and 1s.\\n    rewrite:\\n      O: {write: 0, L}\\n      I: {write: 1, L}\\n      [0,1]: L\\n      ' ': {R: done}\\n    done:\\n\\n\\n  # Exercise:\\n\\n  # • Generate the Fibonacci sequence in binary, listed from right to left:\\n  #   ...1101 1000 101 11 10 1 1 0\\n  #   Hint: prefix the current number with a +, copy the previous number\\n  #   and place it left of the +, run the adder, and repeat.\\n  #   Example: '1 0' => '+1 0' => '0+1 0' => '1 1 0' => '+1 1 0' => ...\\npositions:\\n  right:   {x: 300, y: 130}\\n  rewrite: {x: 500, y: 130}\\n  done:    {x: 620, y: 130}\\n\\n  back0:  {x: 250, y: 250}\\n  read:   {x: 400, y: 250}\\n  back1:  {x: 550, y: 250}\\n  carry:  {x: 650, y: 250}\\n\\n  add0:   {x: 150, y: 400}\\n  have0:  {x: 300, y: 400}\\n  have1:  {x: 500, y: 400}\\n  add1:   {x: 650, y: 400}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/binaryAdd.yaml\n ** module id = 22\n ** module chunks = 1\n **/","module.exports = \"name: binary increment\\nsource code: |\\n  # Adds 1 to a binary number.\\n  input: '1011'\\n  blank: ' '\\n  start state: right\\n  table:\\n    # scan to the rightmost digit\\n    right:\\n      [1,0]: R\\n      ' '  : {L: carry}\\n    # then carry the 1\\n    carry:\\n      1      : {write: 0, L}\\n      [0,' ']: {write: 1, L: done}\\n    done:\\n\\n\\n  # Exercises:\\n\\n  # • Modify the machine to always halt on the leftmost digit\\n  #   (regardless of the number's length).\\n  #   Hint: add a state between carry and done.\\n\\n  # • Make a machine that adds 2 instead of 1.\\n  #   Hint: 2 is '10' in binary, so the last digit is unaffected.\\n  #   Alternative hint: chain together two copies of the machine from\\n  #   the first exercise (renaming the states of the second copy).\\n\\n  # • Make a machine to subtract 1.\\n  #   To simplify things, assume the input is always greater than 0.\\npositions:\\n  right: {x: 230, y: 250}\\n  carry: {x: 400, y: 250}\\n  done: {x: 570, y: 250}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/binaryIncrement.yaml\n ** module id = 23\n ** module chunks = 1\n **/","module.exports = \"name: binary multiplication\\nsource code: |\\n  # Multiplies two binary numbers together.\\n\\n  # Examples: '11*11' => '1001', '111*110' => '101010'.\\n  input: '11*101' # 3*5 = 15 (1111 in binary)\\n  blank: ' '\\n  start state: start\\n  table:\\n    # Prefix the input with a '+', and go to the rightmost digit.\\n    start:\\n      [0,1]: {L: init}\\n    init:\\n      ' ': {write: '+', R: right}\\n    right:\\n      [0,1,'*']: R\\n      ' ': {L: readB}\\n\\n    # Read and erase the last digit of the multiplier.\\n    # If it's 1, add the current multiplicand.\\n    # In any case, double the multiplicand afterwards.\\n    readB:\\n      0: {write: ' ', L: doubleL}\\n      1: {write: ' ', L: addA}\\n    addA:\\n      [0,1]: L\\n      '*': {L: read} # enter adder\\n    # Double the multiplicand by appending a 0.\\n    doubleL:\\n      [0,1]: L\\n      '*': {write: 0, R: shift}\\n    double: # return from adder\\n      [0,1,+]: R\\n      '*': {write: 0, R: shift}\\n    # Make room by shifting the multiplier right 1 cell.\\n    shift:\\n      0: {write: '*', R: shift0}\\n      1: {write: '*', R: shift1}\\n      ' ': {L: tidy} # base case: multiplier = 0\\n    shift0:\\n      0:   {R: shift0}\\n      1:   {write: 0, R: shift1}\\n      ' ': {write: 0, R: right}\\n    shift1:\\n      0:   {write: 1, R: shift0}\\n      1:   {R: shift1}\\n      ' ': {write: 1, R: right}\\n\\n    tidy:\\n      [0,1]: {write: ' ', L}\\n      +: {write: ' ', L: done}\\n    done:\\n\\n  # This is the 'binary addition' machine almost verbatim.\\n  # It's adjusted to keep the '+'\\n  # and to lead to another state instead of halting.\\n    read:\\n      0: {write: c, L: have0}\\n      1: {write: c, L: have1}\\n      +: {L: rewrite} # keep the +\\n    have0: {[0,1]: L, +: {L: add0}}\\n    have1: {[0,1]: L, +: {L: add1}}\\n    add0:\\n      [0,' ']: {write: O, R: back0}\\n      1      : {write: I, R: back0}\\n      [O,I]  : L\\n    add1:\\n      [0,' ']: {write: I, R: back1}\\n      1      : {write: O, L: carry}\\n      [O,I]  : L\\n    carry:\\n      [0,' ']: {write: 1, R: back1}\\n      1      : {write: 0, L}\\n    back0:\\n      [0,1,O,I,+]: R\\n      c: {write: 0, L: read}\\n    back1:\\n      [0,1,O,I,+]: R\\n      c: {write: 1, L: read}\\n    rewrite:\\n      O: {write: 0, L}\\n      I: {write: 1, L}\\n      [0,1]: L\\n      ' ': {R: double} # when done, go to the 'double' state\\n\\n\\n  # Remark:\\n  # We can view the machine as expressing a recursive function:\\n\\n  #   multiply(a, b) = mult(0, a, b)\\n\\n  #   mult(acc, a, 0     ) = acc\\n  #   mult(acc, a, 2k + 0) = mult(acc    , 2a, k)   where k ≠ 0\\n  #   mult(acc, a, 2k + 1) = mult(acc + a, 2a, k)\\n\\n  # where a, b, and k are natural numbers.\\n\\n  # Each reduction maintains the invariant\\n  #   mult(acc, a, b) = acc + a * b\\n  # Note that mult's third argument (b) is always decreasing,\\n  # so mult is guaranteed to halt.\\n  # Eventually b reaches 0 and the result is simply the accumulator.\\npositions:\\n  start:  {x: 80 , y: 70}\\n  init:   {x: 190, y: 70}\\n  tidy:   {x: 730, y: 70}\\n  done:   {x: 730, y: 180}\\n\\n  right:  {x: 300, y: 115}\\n  shift:  {x: 600, y: 115}\\n  shift1: {x: 450, y: 70}\\n  shift0: {x: 450, y: 160}\\n\\n  readB:  {x: 300, y: 215}\\n  addA:   {x: 160, y: 215}\\n  doubleL: {x: 550, y: 215}\\n\\n  rewrite: {x: 363, y: 300}\\n  double: {x: 650, y: 300}\\n\\n  back0:  {x: 160, y: 370}\\n  read:   {x: 300, y: 370}\\n  back1:  {x: 440, y: 370}\\n  carry:  {x: 540, y: 370}\\n\\n  add0:   {x:  60, y: 470}\\n  have0:  {x: 200, y: 470}\\n  have1:  {x: 400, y: 470}\\n  add1:   {x: 540, y: 470}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/binaryMult.yaml\n ** module id = 24\n ** module chunks = 1\n **/","module.exports = \"name: 3-state busy beaver\\nsource code: |\\n  # A 3-state 2-symbol busy beaver for most non-blank symbols.\\n  # It takes 13 steps and leaves 6 non-blank symbols on the tape.\\n\\n  # What's a \\\"busy beaver\\\"?\\n  #   Suppose every possible Turing machine with n states and k symbols\\n  #   (for instance, 3 states and 2 symbols) were started on\\n  #   a blank tape with no input.\\n  #   Some of the machines would never halt. Out of the ones that do halt,\\n  #   a machine that leaves the most non-blank symbols on the tape\\n  #   is called a busy beaver.\\n  blank: '0'\\n  start state: A\\n  table:\\n    A:\\n      0: {write: 1, R: B}\\n      1: {L: C}\\n    B:\\n      0: {write: 1, L: A}\\n      1: R\\n    C:\\n      0: {write: 1, L: B}\\n      1: {R: H}\\n    H:\\n\\n  # An alternative criterion is halting after the most steps.\\n  # This busy beaver takes the most steps (21) but only prints 5 1's:\\n    # A:\\n    #   0: {write: 1, R: B}\\n    #   1: {R: H}\\n    # B:\\n    #   0: {write: 1, L: B}\\n    #   1: {write: 0, R: C}\\n    # C:\\n    #   0: {write: 1, L}\\n    #   1: {L: A}\\n    # H:\\n\\n\\n  # Exercise:\\n\\n  # • Consider Turing machines that have n states and k symbols.\\n  #   Instead of a missing instruction, halting is denoted by\\n  #   a transition to a special \\\"halt\\\" state (for a total of n+1 states).\\n  #   How many different transition functions are possible?\\n\\n  #   Hint: Each instruction writes a symbol, moves left or right,\\n  #   and goes to a state.\\n  #   There is one instruction per combination of non-halt state & symbol.\\n\\n\\n\\n  #   Answer: (2k(n+1))^(nk)\\npositions:\\n  A: {x: 320, y: 296.188}\\n  B: {x: 400, y: 157.624}\\n  C: {x: 480, y: 296.188}\\n  H: {x: 400, y: 376.188}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/busyBeaver3.yaml\n ** module id = 25\n ** module chunks = 1\n **/","module.exports = \"name: 4-state busy beaver\\nsource code: |\\n  # A 4-state 2-symbol busy beaver\\n  # that halts after 107 steps, leaving 13 1's on the tape.\\n  # It takes the most steps *and* prints the most 1's.\\n  blank: 0\\n  start state: A\\n  table:\\n    A: {0: {write: 1, R: B}, 1:           {L: B}}\\n    B: {0: {write: 1, L: A}, 1: {write: 0, L: C}}\\n    C: {0: {write: 1, R: H}, 1:           {L: D}}\\n    D: {0: {write: 1, R   }, 1: {write: 0, R: A}}\\n    H:\\n\\n\\n  # Finding a busy beaver requires considering every n-state k-symbol\\n  # machine and proving either that it halts with no more non-blank symbols\\n  # or that it never halts at all.\\n\\n  # Even with strategies to reduce the search space—\\n  # including normalization, accelerated simulation, and automated proofs—\\n  # there are still machines that show surprising complexity\\n  # and require individual analysis.\\n\\n  # This 4-state busy beaver was proven by Allen Brady in 1983.\\n  # Busy beavers for 5 states and above are as yet unknown.\\n  # At the time of writing, the current 5-state 2-symbol contender\\n  # takes 47,176,870 steps to halt, and the 6-state contender\\n  # takes over 7.4 * 10^36534 steps\\n  # (http://www.logique.jussieu.fr/~michel/bbc.html).\\n  # \\\"Given that 5-state 2-symbol halting Turing machines can compute\\n  # Collatz-like congruential functions, it may be very hard to find\\n  # [the next busy beaver]\\\" (https://oeis.org/A060843).\\n\\n\\n  # An entertaining read on busy beavers and their profoundness:\\n\\n  # • \\\"Who Can Name the Bigger Number?\\\"\\n  #   http://www.scottaaronson.com/writings/bignumbers.html\\npositions:\\n  # square with side length 160\\n  A: {x: 320, y: 170}\\n  B: {x: 480, y: 170}\\n\\n  C: {x: 480, y: 330}\\n  D: {x: 320, y: 330}\\n  H: {x: 620, y: 330}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/busyBeaver4.yaml\n ** module id = 26\n ** module chunks = 1\n **/","module.exports = \"name: copy 1s\\nsource code: |\\n  # Copies a string of consecutive 1s.\\n  input: '111'\\n  blank: 0\\n  start state: each\\n  table:\\n    # mark the current 1 by erasing it\\n    each:\\n      0: {R: H}\\n      1: {write: 0, R: sep}\\n    # skip to the separator\\n    sep:\\n      0: {R: add}\\n      1: R\\n    # skip to the end of the copy and write a 1\\n    add:\\n      0: {write: 1, L: sepL}\\n      1: R\\n    # return to the separator\\n    sepL:\\n      0: {L: next}\\n      1: L\\n    # return to the erased 1, restore it, and then advance to the next 1\\n    next:\\n      0: {write: 1, R: each}\\n      1: L\\n    H:\\n\\n\\n  # Exercises:\\n\\n  # • Edit the machine to copy the string indefinitely,\\n  #   i.e. given the input '11', produce 11011011011...\\n  #   Hint: this can be done by modifying only one transition.\\n\\n  # • Make a machine to output the endless sequence 1011011101111011111...\\npositions:\\n  each: {x: 400   , y: 100}\\n  sep:  {x: 400.01, y: 250}\\n  add:  {x: 400.02, y: 400}\\n  sepL: {x: 250   , y: 250}\\n  next: {x: 250.01, y: 100}\\n  H:    {x: 550   , y: 100}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/copy1s.yaml\n ** module id = 27\n ** module chunks = 1\n **/","module.exports = \"name: divisible by 3\\nsource code: |\\n  # Checks if a binary number is divisible by 3.\\n  input: '1001' # try '1111' (15), '10100' (20), '111001' (57)\\n  blank: ' '\\n  # How it works:\\n\\n  # Consider reading a binary number, say 10011 (19),\\n  # from left to right one digit at a time.\\n  # Each time a digit is read, the new value equals the new digit\\n  # plus the old value shifted left one place (multiplied by 2).\\n\\n  # Digits  Value\\n  # -------------\\n  #         0\\n  # 1       1\\n  # 10      2\\n  # 100     4\\n  # 1001    9\\n  # 10011   19\\n\\n  # Now instead of tracking the entire number, just track the remainder.\\n  # It works the same way.\\n  start state: q0\\n  table:\\n    q0:\\n      0: R       # 2*0 + 0 = 0\\n      1: {R: q1} # 2*0 + 1 = 1\\n      ' ': {R: accept}\\n    q1:\\n      0: {R: q2} # 2*1 + 0 = 2\\n      1: {R: q0} # 2*1 + 1 = 3\\n    q2:\\n      0: {R: q1} # 2*2 + 0 = 4\\n      1: {R: q2} # 2*2 + 1 = 5\\n    accept:\\n\\n\\n  # Exercises:\\n\\n  # • Modify the machine to check if n-1 is divisible by 3,\\n  #   where n is the input. That is, accept the binary of 1, 4, 7, 10, ...\\n  #   Hint: this can be done without modifying the tape (no 'write').\\n\\n  # • Round the number up to the nearest multiple of 3.\\n  #   Hint: do one pass right to find the remainder, then another pass left\\n  #   to add. See the 'binary increment' example for how to add.\\n\\n  # • Round the number down to the nearest multiple of 3.\\npositions:\\n  q0: {x: 230, y: 250}\\n  q1: {x: 400, y: 250}\\n  q2: {x: 570, y: 250}\\n  accept: {x: 230.01, y: 380}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/divisibleBy3.yaml\n ** module id = 28\n ** module chunks = 1\n **/","module.exports = \"name: divisible by 3 (base 10)\\nsource code: |\\n  # Checks if a base 10 number is divisible by 3.\\n  input: 4728 # try 42, 57, 1337, 5328, 7521, 314159265\\n  blank: ' '\\n  # This uses the same idea as the base 2 version.\\n  #\\n  # To make things more interesting, we derive the step relation:\\n  # Let x be the number left of the tape head,\\n  #     d the digit under the head, and\\n  #     x' the number up to and including the head.\\n  # Then\\n  #   x' = 10x + d .\\n  # Notice 10 ≡ 1 (mod 3). Therefore\\n  #   x' ≡ x + d (mod 3) .\\n  # Each step simply adds the new digit's remainder mod 3.\\n  start state: q0\\n  table:\\n    q0:\\n      [0,3,6,9]: R     # 0 + 0 ≡ 0 (mod 3)\\n      [1,4,7]: {R: q1} # 0 + 1 ≡ 1\\n      [2,5,8]: {R: q2} # 0 + 2 ≡ 2\\n      ' ': {R: accept}\\n    q1:\\n      [0,3,6,9]: R     # 1 + 0 ≡ 1\\n      [1,4,7]: {R: q2} # 1 + 1 ≡ 2\\n      [2,5,8]: {R: q0} # 1 + 2 ≡ 0\\n    q2:\\n      [0,3,6,9]: R     # 2 + 0 ≡ 2\\n      [1,4,7]: {R: q0} # 2 + 1 ≡ 0\\n      [2,5,8]: {R: q1} # 2 + 2 ≡ 1\\n    accept:\\n\\n\\n  # Exercises:\\n\\n  # • Check for divisibility by 5.\\n  #   Hint: only 2 states (besides accept) are required.\\n\\n  # • Check for divisibility by 4.\\n  #   Hint: use 4 states (besides accept).\\npositions:\\n  # centered equilateral triangle with side length 250\\n  q0: {x: 275, y: 322.1688}\\n  q1: {x: 400, y: 105.6624}\\n  q2: {x: 525, y: 322.1688}\\n  accept: {x: 275.01, y: 430}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/divisibleBy3Base10.yaml\n ** module id = 29\n ** module chunks = 1\n **/","module.exports = \"name: multiplied lengths\\nsource code: |\\n  # Decides the language { a^(i)b^(j)c^(k) | i*j = k and i,j,k ≥ 1 }.\\n  # (a's followed by b's then c's,\\n  # where the number of a's multiplied by the number of b's\\n  # equals the number of c's.)\\n  input: aabbbcccccc # try abc, b, aabcbc, aabcc, aabbbbcccccccc\\n  blank: ' '\\n  start state: start\\n\\n  table:\\n    # Check for the form a^(i)b^(j)c^(k) where i,j,k ≥ 1.\\n    start:  {        a: {R: a+}}\\n    a+:     {a: R,   b: {R: b+}}\\n    b+:     {b: R,   c: {R: c+}}\\n    c+:     {c: R, ' ': {L: left}}\\n    left:\\n      [a,b,c]: L\\n      ' ': {R: eachA}\\n    # Then check that i*j = k.\\n    #   The approach is two nested loops:\\n    #   For each 'a':\\n    #     For each 'b':\\n    #       Mark one 'c'\\n    #   At the end, check that all c's are marked.\\n    eachA:\\n      a: {write: ' ', R: eachB}\\n      b: {R: scan}\\n    eachB:\\n      a: R\\n      b: {write: B, R: markC}\\n      C: {L: nextA}\\n    markC:\\n      [b,C]: R\\n      c: {write: C, L: nextB}\\n    nextB:\\n      [b,C]: L\\n      B: {R: eachB}\\n    nextA:\\n      a: L\\n      B: {write: b, L}\\n      ' ': {R: eachA}\\n\\n    scan:\\n      [b,C]: R\\n      ' ': {R: accept}\\n    accept:\\npositions:\\n  start:  {x: 180, y: 40}\\n  a+:     {x: 180, y: 180}\\n  b+:     {x: 180, y: 320}\\n  c+:     {x: 180, y: 460}\\n  left:   {x: 290, y: 320}\\n\\n  accept: {x: 400, y: 40}\\n  eachA:  {x: 400, y: 180}\\n  eachB:  {x: 400, y: 320}\\n  markC:  {x: 400, y: 460}\\n\\n  scan:   {x: 560, y: 180}\\n  nextA:  {x: 560, y: 320}\\n  nextB:  {x: 560, y: 460}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/lengthMult.yaml\n ** module id = 30\n ** module chunks = 1\n **/","module.exports = \"name: equal strings\\nsource code: |\\n  # Decides the language { w#w | w ∈ {0,1}* }\\n  # (two equal binary strings separated by '#')\\n  input: '01001#01001' # try '#', '1#10', '10#1', '10#10'\\n  blank: ' '\\n  # Two strings are equal if they are both the empty string,\\n  # or they start with the same symbol and are equal thereafter.\\n  start state: start\\n  table:\\n    start:\\n      # Inductive case: start with the same symbol.\\n      0: {write: ' ', R: have0}\\n      1: {write: ' ', R: have1}\\n      # Base case: empty string.\\n      '#': {R: check}\\n    have0:\\n      [0,1]: R\\n      '#': {R: match0}\\n    have1:\\n      [0,1]: R\\n      '#': {R: match1}\\n    match0:\\n      x: R\\n      0: {write: x, L: back}\\n    match1:\\n      x: R\\n      1: {write: x, L: back}\\n    back:\\n      [0,1,'#',x]: L\\n      ' ': {R: start}\\n    check:\\n      x: R\\n      ' ': {R: accept}\\n    accept:\\n\\n\\n  # Exercises:\\n\\n  # • Accept if the second string is the bitwise complement\\n  #   (1s and 0s swapped) of the first, e.g. accept '1101#0010'.\\n\\n  # • Check that a binary string has the same number of 0s and 1s;\\n  #   eg., accept '001110' but reject '10010'.\\n\\n  # • Check if two strings are different.\\n  #   Example: accept '00#001' and '0101#0111', but reject '1001#1001'.\\npositions:\\n  accept: {x: 80 , y: 250}\\n  check:  {x: 190, y: 250}\\n  # regular hexagon with side length 150\\n  start:  {x: 300, y: 250}\\n  back:   {x: 600, y: 250}\\n  have1:  {x: 375, y: 120.10}\\n  match1: {x: 525, y: 120.10}\\n  have0:  {x: 375, y: 379.90}\\n  match0: {x: 525, y: 379.90}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/matchBinaryStrings.yaml\n ** module id = 31\n ** module chunks = 1\n **/","module.exports = \"name: three equal lengths\\nsource code: |\\n  # Decides the language { aⁿbⁿcⁿ | n ≥ 1 }, that is,\\n  # accepts a's followed by b's then c's of the same length.\\n  input: aabbcc # try bac, aabc, aabcc, aabcbc\\n  blank: ' '\\n  # Mark the first a, b, and c on each pass (by capitalizing them).\\n  # All a's must precede all b's, which must precede all c's.\\n  # When there are no more a's,\\n  # all input symbols should have been marked.\\n  start state: qA\\n  table:\\n    qA:\\n      a: {write: A, R: qB}\\n      B: {R: scan}\\n    qB:\\n      [a,B]: R\\n      b: {write: B, R: qC}\\n    qC:\\n      [b,C]: R\\n      c: {write: C, L: back}\\n    back:\\n      [a,B,b,C]: L\\n      A: {R: qA}\\n    scan:\\n      [B,C]: R\\n      ' ': {R: accept}\\n    accept:\\n\\n\\n  # Exercises:\\n\\n  # • Suppose a ledger starts from 0 and gains one dollar for each +\\n  #   and loses one for each -. Reading left to right,\\n  #   check that the account never goes into the negative.\\n  #   Examples: accept '+-++' and '++-+--', reject '-++' and '++---+'.\\n\\n  # • Check parentheses for proper nesting,\\n  #   e.g. accept '()(()()())' but reject '(()))(' and '(()('.\\npositions:\\n  qA: {x: 240, y: 250}\\n  qB: {x: 400, y: 250}\\n  qC: {x: 560, y: 250}\\n  back:   {x: 400, y: 370}\\n  scan:   {x: 320, y: 150}\\n  accept: {x: 480, y: 150}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/matchThreeLengths.yaml\n ** module id = 32\n ** module chunks = 1\n **/","module.exports = \"name: palindrome\\nsource code: |\\n  # Accepts palindromes made of the symbols 'a' and 'b'\\n  input: 'abba' # try a, ab, bb, babab\\n  blank: ' '\\n  start state: start\\n  synonyms:\\n    accept: {R: accept}\\n    reject: {R: reject}\\n  # A palindrome is either the empty string, a single symbol,\\n  # or a (shorter) palindrome with the same symbol added to both ends.\\n  table:\\n    start:\\n      a: {write: ' ', R: haveA}\\n      b: {write: ' ', R: haveB}\\n      ' ': accept # empty string\\n    haveA:\\n      [a,b]: R\\n      ' ': {L: matchA}\\n    haveB:\\n      [a,b]: R\\n      ' ': {L: matchB}\\n    matchA:\\n      a: {write: ' ', L: back} # same symbol at both ends\\n      b: reject\\n      ' ': accept # single symbol\\n    matchB:\\n      a: reject\\n      b: {write: ' ', L: back} # same symbol at both ends\\n      ' ': accept # single symbol\\n    back:\\n      [a,b]: L\\n      ' ': {R: start}\\n    accept:\\n    reject:\\n\\n\\n  # Exercise:\\n\\n  # • Modify the machine to include 'c' in the symbol alphabet,\\n  #   so it also works for strings like 'cabbac'.\\npositions:\\n  haveA:  {x: 240, y: 185}\\n  start:  {x: 400, y: 185}\\n  haveB:  {x: 560, y: 185}\\n\\n  matchA: {x: 240, y: 315}\\n  back:   {x: 400, y: 315}\\n  matchB: {x: 560, y: 315}\\n\\n  accept: {x: 400, y: 55}\\n  reject: {x: 400, y: 445}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/palindrome.yaml\n ** module id = 33\n ** module chunks = 1\n **/","module.exports = \"name: powers of two\\nsource code: |\\n  # Matches strings of 0s whose length is a power of two.\\n\\n  # This example comes from the textbook\\n  #   \\\"Introduction to the Theory of Computation\\\" (3rd edition, 2012)\\n  #   by Michael Sipser\\n  # The states have been renamed (from q1, q2, etc.)\\n  # to make it easier to understand.\\n  input: '0000' # try '0', '000', '00000000'\\n  blank: ' '\\n  start state: zero\\n  synonyms:\\n    accept: {R: accept}\\n    reject: {R: reject}\\n  # The idea: divide the length by 2 repeatedly until it reaches 1.\\n\\n  # To do this, cross off every other 0, one pass at a time.\\n  # If any pass reads an odd number of 0s (a remainder), reject right away.\\n  # Otherwise if every pass halves the length cleanly,\\n  # the length must be a power of two (1*2^n for n ≥ 0).\\n\\n  # Note that since the first 0 is never crossed off, we can simply\\n  # erase it on the first pass and start the count from 1 from then on.\\n  table:\\n    zero:\\n      0  : {write: ' ', R: one}\\n      ' ': reject\\n    # Base case: accept length of 1 = 2^0.\\n    one:\\n      0  : {write: x, R: even}\\n      ' ': accept\\n      x  : R\\n    # Inductive case: divide by 2 and check for no remainder.\\n    even:\\n      0  : {R: odd}\\n      ' ': {L: back} # return for another pass\\n      x  : R\\n    odd: # odd and > 1\\n      0  : {write: x, R: even}\\n      ' ': reject # odd number of 0s on this pass\\n      x  : R\\n    back:\\n      ' ': {R: one}\\n      [0,x]: L\\n    accept:\\n    reject:\\npositions:\\n  zero:   {x: 200, y: 200}\\n  one:    {x: 400, y: 200}\\n  even:   {x: 600, y: 200}\\n\\n  odd:    {x: 600, y: 385}\\n  back:   {x: 500, y: 125}\\n  accept: {x: 400, y: 300}\\n  reject: {x: 200, y: 385}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/powersOfTwo.yaml\n ** module id = 34\n ** module chunks = 1\n **/","module.exports = \"name: repeat 0 1\\nsource code: |\\n  # This is the first example machine given by Alan Turing in his 1936 paper\\n  #   \\\"On Computable Numbers, with an Application to\\n  #    the Entscheidungsproblem\\\".\\n  # It simply writes the endless sequence 0 1 0 1 0 1...\\n  blank: ' '\\n  start state: b\\n  table:\\n    b:\\n      ' ': {write: 0, R: c}\\n    c:\\n      ' ':           {R: e}\\n    e:\\n      ' ': {write: 1, R: f}\\n    f:\\n      ' ':           {R: b}\\n\\n\\n  # (Turing uses the convention of leaving a gap after each output cell,\\n  # reserving it for marking the cell. For instance, on a tape that\\n  # contains '0 1x0 0 1 1y1y0y', x marks the leftmost 1 and y marks 110.)\\npositions:\\n  b: {x: 300, y: 200, fixed: false}\\n  c: {x: 450, y: 150, fixed: false}\\n  e: {x: 500, y: 300, fixed: false}\\n  f: {x: 350, y: 350, fixed: false}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/repeat01.yaml\n ** module id = 35\n ** module chunks = 1\n **/","module.exports = \"name: unary multiplication\\nsource code: |\\n  # Multiplies together two unary numbers separated by a '*'.\\n  # (Unary is like tallying. Here '||*|||' means 2 times 3.)\\n  input: '||*|||' # try '*', '|*|||', '||||*||'\\n  blank: ' '\\n\\n  # The idea:\\n  #   multiply(0, b) = 0\\n  #   multiply(a, b) = b + multiply(a-1, b)   when a > 0\\n  start state: eachA\\n  table:\\n    # For each 1 in a, add a copy of b.\\n    eachA:\\n      '|': {write: ' ', R: toB}  # Inductive case: a > 0.\\n      '*': {R: skip}             # Base case:      a = 0.\\n    toB:\\n      '|': R\\n      '*': {R: eachB} # enter copier\\n    nextA: # return from copier\\n      ' ': {write: '|', R: eachA}\\n      ['|','*']: L\\n\\n    skip:\\n      '|': R\\n      ' ': {R: done}\\n    done:\\n\\n    # This is the 'copy 1s' machine, with ' ' as 0 and '|' as 1.\\n    eachB:\\n      ' ': {L: nextA}\\n      '|': {write: ' ', R: sep}\\n    sep:\\n      ' ': {R: add}\\n      '|': R\\n    add:\\n      ' ': {write: '|', L: sepL}\\n      '|': R\\n    sepL:\\n      ' ': {L: nextB}\\n      '|': L\\n    nextB:\\n      ' ': {write: '|', R: eachB}\\n      '|': L\\n\\npositions:\\n  eachA:  {x: 400, y:  50}\\n  toB:    {x: 400, y: 150}\\n  eachB:  {x: 400, y: 250}\\n  sep:   {x: 400, y: 350}\\n  add:   {x: 400, y: 450}\\n\\n  sepL:  {x: 280, y: 350}\\n  nextB:  {x: 280, y: 250}\\n\\n  nextA:  {x: 280, y: 90}\\n  skip:   {x: 520, y: 90}\\n  done:   {x: 520, y: 190}\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/raw-loader!./src/examples/unaryMult.yaml\n ** module id = 36\n ** module chunks = 1\n **/","'use strict';\n\n/* global document */\nvar KeyValueStorage = require('./storage').KeyValueStorage;\nvar TMDocument = require('./TMDocument');\nvar d3 = require('d3');\nvar defaults = require('lodash/fp').defaults; // NB. 2nd arg takes precedence\n\n/**\n * Document menu controller.\n *\n * The view is fully determined by a 3-tuple: ([ID], ID -> Name, currentID).\n * @constructor\n * @param {Object}  args                  argument object\n * @param {HTMLSelectElement}\n *                  args.menu\n * @param {?Node}  [args.group=args.menu] Node to add documents to.\n * @param {string}  args.storagePrefix\n * @param {?(TMDocument -> HTMLOptionElement)}\n *                  args.makeOption       Customize rendering for each document entry.\n * @param {?string} args.firsttimeDocID   Document to open on the first visit.\n */\nfunction DocumentMenu(args) {\n  var menu = args.menu,\n      group = args.group || menu,\n      storagePrefix = args.storagePrefix,\n      firsttimeDocID = args.firsttimeDocID;\n\n  if (!menu) {\n    throw new TypeError('DocumentMenu: missing parameter: menu element');\n  } else if (!storagePrefix) {\n    throw new TypeError('DocumentMenu: missing parameter: storage prefix');\n  }\n  if (args.makeOption) {\n    this.optionFromDocument = args.makeOption;\n  }\n  this.menu = menu;\n  this.group = group;\n  this.group.innerHTML = '';\n  this.__storagePrefix = storagePrefix;\n\n  // Load document entries (non-examples)\n  this.doclist = new DocumentList(storagePrefix + '.list');\n  this.render();\n  // Re-open last-opened document\n  this.selectDocID(this.getSavedCurrentDocID() || firsttimeDocID);\n\n  // Listen for selection changes\n  var self = this;\n  this.menu.addEventListener('change', function () {\n    self.onChange(self.currentDocument, {type: 'open'});\n  });\n\n  // Listen for storage changes in other tabs/windows\n  KeyValueStorage.addStorageListener(function (e) {\n    var docID;\n    var option, newOption;\n\n    if (e.key === self.doclist.storageKey) {\n      // case: [ID] list changed\n      self.doclist.readList();\n      self.render();\n    } else if ( (docID = TMDocument.IDFromNameStorageKey(e.key)) ) {\n      // case: single document renamed: (ID -> Name) changed\n      option = self.findOptionByDocID(docID);\n      if (option) {\n        // replace the whole <option>, to be consistent with .optionFromDocument\n        option.parentNode.replaceChild(\n          newOption = self.optionFromDocument(new TMDocument(docID)),\n          option\n        );\n        newOption.selected = option.selected;\n        d3.select(newOption).datum( d3.select(option).datum() );\n      }\n    }\n  });\n}\n\nObject.defineProperties(DocumentMenu.prototype, {\n  currentOption: {\n    get: function () { return this.menu.selectedOptions[0]; },\n    enumerable: true\n  },\n  currentDocument: {\n    get: function () {\n      var opt = this.currentOption;\n      return opt ? new TMDocument(opt.value) : null;\n    },\n    enumerable: true\n  }\n});\n\nDocumentMenu.prototype.render = function () {\n  var currentDocID = this.currentOption ? this.currentOption.value : null;\n\n  var option = d3.select(this.group).selectAll('option')\n    .data(this.doclist.list, function (entry) { return entry.id; });\n\n  option.exit().remove();\n\n  var self = this;\n  option.enter().insert(function (entry) {\n    return self.optionFromDocument(new TMDocument(entry.id));\n  });\n\n  // If current document was deleted, switch to another document\n  if (this.currentOption.value !== currentDocID) {\n    // fallback 1: saved current docID\n    if (!this.selectDocID(this.getSavedCurrentDocID(), {type: 'delete'})) {\n      // fallback 2: whatever is now selected\n      this.onChange(this.currentDocument, {type: 'delete'});\n    }\n  }\n};\n\n// Returns the <option> whose 'value' attribute is docID.\nDocumentMenu.prototype.findOptionByDocID = function (docID) {\n  return this.menu.querySelector('option[value=\"' + docID.replace(/\"/g, '\\\\\"') + '\"]');\n};\n\n// Selects (switches the active item to) the given docID. Returns true on success.\nDocumentMenu.prototype.selectDocID = function (docID, opts) {\n  try {\n    this.findOptionByDocID(docID).selected = true;\n  } catch (e) {\n    return false;\n  }\n  this.onChange(this.currentDocument, opts);\n  return true;\n};\n\n// Saves the current (selected) docID to storage.\nDocumentMenu.prototype.saveCurrentDocID = function () {\n  var docID = this.currentOption && this.currentOption.value;\n  if (docID) {\n    KeyValueStorage.write(this.__storagePrefix + '.currentDocID', docID);\n  }\n};\n\n// Returns the saved current docID, otherwise null.\nDocumentMenu.prototype.getSavedCurrentDocID = function () {\n  return KeyValueStorage.read(this.__storagePrefix + '.currentDocID');\n};\n\n// Configurable methods\n\nDocumentMenu.prototype.optionFromDocument = function (doc) {\n  var option = document.createElement('option');\n  option.value = doc.id;\n  option.text = doc.name || 'untitled';\n  return option;\n};\n\n// Called when the current document ID changes\n// through user action (<select>) or this class's API.\n// The callback receives the new value of .currentDocument,\n// along with the options object (whose .type\n// is 'duplicate', 'delete', or 'open').\nDocumentMenu.prototype.onChange = function () {\n};\n\n// Internal Helpers\n\n// prepend then select\nDocumentMenu.prototype.__prepend = function (doc, opts) {\n  var option = this.optionFromDocument(doc);\n  this.group.insertBefore(option, this.group.firstChild);\n  if (opts && opts.select) {\n    option.selected = true;\n    this.onChange(doc, opts);\n  }\n  return doc;\n};\n\n// Methods not about Current Document\n\nDocumentMenu.prototype.newDocument = function (opts) {\n  return this.__prepend(this.doclist.newDocument(), defaults({type: 'open'}, opts));\n};\n\n// Methods about Current Document\n\nDocumentMenu.prototype.duplicate = function (doc, opts) {\n  return this.__prepend(this.doclist.duplicate(doc), defaults({type: 'duplicate'}, opts));\n};\n\nDocumentMenu.prototype.rename = function (name) {\n  this.currentDocument.name = name;\n  this.currentOption.text = name;\n};\n\n// required invariant: one option is always selected.\n// returns true if the current entry was removed from the list.\nDocumentMenu.prototype.delete = function (opts) {\n  this.currentDocument.delete();\n  var index = this.menu.selectedIndex;\n  var didDeleteEntry = this.doclist.deleteIndex(index);\n  if (didDeleteEntry) {\n    this.currentOption.remove();\n    this.menu.selectedIndex = index;\n    this.onChange(this.currentDocument, defaults({type: 'delete'}, opts));\n  }\n  return didDeleteEntry;\n};\n\n/////////////////////\n// Document List   //\n// (model/storage) //\n/////////////////////\n\n// TODO: impl. transactions\n\n// for custom documents.\nfunction DocumentList(storageKey) {\n  this.storageKey = storageKey;\n  this.readList();\n}\n\n// () -> string\nDocumentList.newID = function () {\n  return String(Date.now());\n};\n\n// internal methods.\nDocumentList.prototype.add = function (docID) {\n  this.__list.unshift({id: docID});\n  this.writeList();\n};\nDocumentList.prototype.readList = function () {\n  this.__list = JSON.parse(KeyValueStorage.read(this.storageKey)) || [];\n};\nDocumentList.prototype.writeList = function () {\n  KeyValueStorage.write(this.storageKey, JSON.stringify(this.__list));\n};\n\nDocumentList.prototype.newDocument = function () {\n  var newID = DocumentList.newID();\n  this.add(newID);\n  return new TMDocument(newID);\n};\n\nDocumentList.prototype.duplicate = function (doc) {\n  return this.newDocument().copyFrom(doc);\n};\n\n/**\n * Behaves like list.splice(index, 1).\n * @param  {number} index index of the element to delete\n * @return {boolean} true if an element was removed, false otherwise (index out of bounds)\n */\nDocumentList.prototype.deleteIndex = function (index) {\n  var deleted = this.__list.splice(index, 1);\n  this.writeList();\n  return (deleted.length > 0);\n};\n\nObject.defineProperties(DocumentList.prototype, {\n  list: {\n    get: function () { return this.__list; },\n    enumerable: true\n  }\n});\n\nmodule.exports = DocumentMenu;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/DocumentMenu.js\n ** module id = 37\n ** module chunks = 1\n **/","'use strict';\nvar TMSimulator = require('./TMSimulator'),\n    parser = require('./parser'),\n    util = require('./util'),\n    ace = require('ace-builds/src-min-noconflict'),\n    d3 = require('d3');\nvar TMSpecError = parser.TMSpecError;\nvar YAMLException = parser.YAMLException;\nvar UndoManager = ace.require('ace/undomanager').UndoManager;\n\n/**\n * For editing and displaying a TMDocument.\n * The controller coordinates the interactions between\n *   1. simulator\n *   2. code editor\n *   3. storage\n *\n * All container and button params are required.\n * @param {Object} containers\n *   Empty containers to use (contents will likely be replaced).\n * @param {HTMLDivElement} containers.simulator\n * @param {HTMLDivElement} containers.editorAlerts\n * @param {HTMLDivElement} containers.editor\n * @param {Object} buttons Buttons to use.\n * @param {HTMLButtonElement} buttons.simulator.run\n * @param {HTMLButtonElement} buttons.simulator.step\n * @param {HTMLButtonElement} buttons.simulator.reset\n * @param {HTMLButtonElement} buttons.editor.load For loading the editor source\n * @param {HTMLButtonElement} buttons.editor.revert For reverting the editor source\n * @param {TMDocument} document The document to load from and save to.\n */\nfunction TMDocumentController(containers, buttons, document) {\n  // FIXME: check for every container and button and throw if any are missing\n  // TODO: check that document param is present\n  this.simulator = new TMSimulator(containers.simulator, buttons.simulator);\n\n  // Set up ace editor //\n  var editor = ace.edit(containers.editor);\n  editor.session.setOptions({\n    mode: 'ace/mode/yaml',\n    tabSize: 2,\n    useSoftTabs: true\n  });\n  editor.setOptions({\n    minLines: 15,\n    maxLines: 50\n  });\n  // suppress warning about\n  // \"Automatically scrolling cursor into view after selection change\"\n  editor.$blockScrolling = Infinity;\n\n  var editorButtons = buttons.editor;\n  var self = this;\n  editorButtons.load\n      .addEventListener('click', function () {\n        self.loadEditorSource();\n        // save whenever \"Load\" is pressed\n        self.save();\n        self.editor.focus();\n      });\n  editorButtons.revert\n      .addEventListener('click', function () {\n        self.revertEditorSource();\n        self.editor.focus();\n      });\n\n  Object.defineProperties(this, {\n    __document: {\n      value: {editor: {}}, // dummy document that gets replaced\n      writable: true\n    },\n    buttons   : { value: buttons },\n    containers: { value: containers },\n    editor    : { value: editor, enumerable: true }\n  });\n  this.openDocument(document);\n}\n\nTMDocumentController.prototype.getDocument = function () {\n  return this.__document;\n};\n\n// set the backing document, without saving/loading or affecting the views.\nTMDocumentController.prototype.setBackingDocument = function (doc) {\n  this.__document = doc;\n};\n\n// save the current document, then open another one.\n// does nothing if the document ID is the same.\nTMDocumentController.prototype.openDocument = function (doc) {\n  if (this.getDocument().id === doc.id) { return; } // same document\n  this.save();\n  return this.forceLoadDocument(doc);\n};\n\n// (low-level) load the document. current data is discarded without saving.\n// this can be used to switch from a deleted document or reload a document.\nTMDocumentController.prototype.forceLoadDocument = function (doc, keepUndoHistory) {\n  this.setBackingDocument(doc);\n  var diagramSource = doc.sourceCode;\n  var editorSource = doc.editorSourceCode;\n  // init //\n  this.simulator.clear();\n  this.setEditorValue(editorSource == null ? diagramSource : editorSource);\n  // prevent undo-ing to the previous document. note: .reset() doesn't work\n  if (!keepUndoHistory) {\n    this.editor.session.setUndoManager(new UndoManager());\n  }\n\n  if (editorSource == null) {\n    // case: synced: load straight from editor.\n    this.loadEditorSource();\n  } else {\n    // case: not synced: editor has separate contents.\n    this.isSynced = false;\n    try {\n      this.simulator.sourceCode = diagramSource;\n      this.simulator.positionTable = doc.positionTable;\n    } catch (e) {\n      this.showCorruptDiagramAlert(true);\n    }\n  }\n};\n\nTMDocumentController.prototype.save = function () {\n  var doc = this.getDocument();\n  if (this.hasValidDiagram) {\n    // sidenote: deleting first can allow saving when space would otherwise be full\n    doc.editorSourceCode = this.isSynced ? undefined : this.editor.getValue();\n    doc.sourceCode = this.simulator.sourceCode;\n    doc.positionTable = this.simulator.positionTable;\n  } else {\n    if (doc.editorSourceCode == null) {\n      // case 1: editor was synced with the diagram.\n      //  only edit doc.sourceCode until it's fixed;\n      //  don't worsen the problem to case 2.\n      doc.sourceCode = this.editor.getValue();\n    } else {\n      // case 2: editor has separate contents.\n      //  this is more confusing, as there are two \"source code\" values to contend with.\n      doc.editorSourceCode = this.editor.getValue();\n    }\n  }\n};\n\n/**\n * Set the editor contents.\n * • Converts null to '', since editor.setValue(null) crashes.\n * • Clears the editor alerts.\n * @param {?string} str\n */\nTMDocumentController.prototype.setEditorValue = function (str) {\n  this.editor.setValue(util.coalesce(str, ''), -1 /* put cursor at start */);\n  this.setAlertErrors([]);\n};\n\n/////////////////////////\n// Error/Alert Display //\n/////////////////////////\n\nfunction aceAnnotationFromYAMLException(e) {\n  return {\n    row: e.mark.line,\n    column: e.mark.column,\n    text: 'Not valid YAML (possibly caused by a typo):\\n' + e.message,\n    type: 'error'\n  };\n}\n\nTMDocumentController.prototype.setAlertErrors = function (errors) {\n  var self = this;\n  var alerts = d3.select(self.containers.editorAlerts).selectAll('.alert')\n    .data(errors, function (e) { return String(e); }); // key by error description\n\n  alerts.exit().remove();\n\n  alerts.enter()\n    .append('div')\n      .attr('class', 'alert alert-danger')\n      .attr('role', 'alert')\n      .each(/** @this div */ function (e) {\n        var div = d3.select(this);\n        if (e instanceof YAMLException) {\n          var annot = aceAnnotationFromYAMLException(e);\n          var lineNum = annot.row + 1; // annotation lines start at 0; editor starts at 1\n          var column = annot.column;\n          div.append('strong')\n              .text('Syntax error on ')\n            .append('a')\n              .text('line ' + lineNum)\n              .on('click', function () {\n                self.editor.gotoLine(lineNum, column, true);\n                self.editor.focus();\n                // prevent scrolling, especially href=\"#\" scrolling to the top\n                d3.event.preventDefault();\n              })\n              .attr('href', '#' + self.containers.editor.id);\n          div.append('br');\n          // aside: text nodes aren't elements so they need to be wrapped (e.g. in span)\n          // https://github.com/mbostock/d3/issues/94\n          div.append('span').text('Possible reason: ' + e.reason);\n        } else if (e instanceof TMSpecError) {\n          div.html(e.message);\n        } else {\n          div.html('<strong>Unexpected error</strong>: ' + e);\n        }\n      });\n  self.editor.session.setAnnotations(\n    errors\n    .map(function (e) {\n      return (e instanceof YAMLException) ? aceAnnotationFromYAMLException(e) : null;\n    })\n    .filter(function (x) { return x; })\n  );\n};\n\n\n//////////////////////////////\n// Syncing diagram & editor //\n//////////////////////////////\n\n// Sync Status\n\n// This method can be overridden as necessary.\n// The default implementation toggles Bootstrap 3 classes.\nTMDocumentController.prototype.setLoadButtonSuccess = function (didSucceed) {\n  d3.select(this.buttons.editor.load)\n      .classed({\n        'btn-success': didSucceed,\n        'btn-primary': !didSucceed\n      });\n};\n\n// internal. whether the editor and diagram source code are in sync, and the diagram is valid.\n// Updates \"Load machine\" button display.\n// for future reference: .isSynced cannot be moved to TMDocument because it requires knowledge from the simulator.\nObject.defineProperty(TMDocumentController.prototype, 'isSynced', {\n  set: function (isSynced) {\n    isSynced = Boolean(isSynced);\n    if (this.__isSynced !== isSynced) {\n      this.__isSynced = isSynced;\n      this.setLoadButtonSuccess(isSynced);\n      if (isSynced) {\n        // changes cause desync\n        var onChange = function () {\n          this.isSynced = false;\n          this.editor.removeListener('change', onChange);\n        }.bind(this);\n        this.editor.on('change', onChange);\n      }\n    }\n  },\n  get: function () { return this.__isSynced; }\n});\n\n// public API for isSynced\nTMDocumentController.prototype.getIsSynced = function () {\n  return Boolean(this.isSynced);\n};\n\n// Load & Revert\n\n// internal. used to detect when an imported document is corrupted.\nObject.defineProperty(TMDocumentController.prototype, 'hasValidDiagram', {\n  get: function () {\n    return Boolean(this.simulator.sourceCode);\n  }\n});\n\n/**\n * Show/hide the notice that the diagram's source code is invalid;\n * use this when the editor has contents of its own (so it can't display the diagram's source).\n *\n * This happens for imported documents that were corrupted.\n * It can also happen if the value in storage is tampered with.\n * @param  {boolean} show true to display immediately, false to hide.\n */\nTMDocumentController.prototype.showCorruptDiagramAlert = function (show) {\n  function enquote(s) { return '<q>' + s + '</q>'; }\n  var div = d3.select(this.simulator.container);\n  if (show) {\n    var revertName = this.buttons.editor.revert.textContent.trim();\n    div.html('')\n      .append('div')\n        .attr('class', 'alert alert-danger')\n        .html('<h4>This imported document has an error</h4>' +\n          [ 'The diagram was not valid and could not be displayed.'\n          , 'You can either load a new diagram from the editor, or attempt to recover this one'\n          , 'using ' + enquote(revertName) + ' (which will replace the current editor contents).'\n          ].join('<br>')\n        );\n  } else {\n    div.selectAll('.alert').remove();\n  }\n};\n\n// Sync from editor to diagram\nTMDocumentController.prototype.loadEditorSource = function () {\n  // load to diagram, and report any errors\n  var errors = (function () {\n    try {\n      var isNewDiagram = !this.hasValidDiagram;\n      this.simulator.sourceCode = this.editor.getValue();\n      if (isNewDiagram) {\n        // loaded new, or recovery succeeded => close error notice, restore positions\n        this.showCorruptDiagramAlert(false);\n        this.simulator.positionTable = this.getDocument().positionTable;\n      }\n      // .toJSON() is the only known way to preserve the cursor/selection(s)\n      // this.__loadedEditorSelection = this.editor.session.selection.toJSON();\n      return [];\n    } catch (e) {\n      return [e];\n    }\n  }.call(this));\n  this.isSynced = (errors.length === 0);\n  this.setAlertErrors(errors);\n};\n\n// Sync from diagram to editor\nTMDocumentController.prototype.revertEditorSource = function () {\n  this.setEditorValue(this.hasValidDiagram\n    ? this.simulator.sourceCode\n    : this.getDocument().sourceCode);\n\n  if (this.hasValidDiagram) {\n    this.isSynced = true;\n  } else {\n    // show errors when reverting to a corrupted diagram\n    this.loadEditorSource();\n  }\n  // if (this.__loadedEditorSelection) {\n  //   this.editor.session.selection.fromJSON(this.__loadedEditorSelection);\n  // }\n};\n\nmodule.exports = TMDocumentController;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/TMDocumentController.js\n ** module id = 38\n ** module chunks = 1\n **/","'use strict';\n\nvar parseSpec = require('./parser').parseSpec,\n    TMViz = require('./TMViz'),\n    watchInit = require('./watch').watchInit,\n    values = require('lodash').values;\n\n/**\n * Turing machine simulator component.\n *\n * Contains a state diagram, tape diagram, and button controls.\n * @param {[type]} container [description]\n * @param {[type]} buttons   [description]\n */\nfunction TMSimulator(container, buttons) {\n  this.container = container;\n  this.buttons = buttons;\n\n  var self = this;\n  buttons.step\n      .addEventListener('click', function () {\n        self.machine.isRunning = false;\n        self.machine.step(); // each step click corresponds to 1 machine step\n      });\n  buttons.run\n      .addEventListener('click', function () {\n        self.machine.isRunning = !self.machine.isRunning;\n      });\n  buttons.reset\n      .addEventListener('click', function () {\n        self.machine.reset();\n      });\n  buttons.all = values(buttons);\n\n  this.clear();\n}\n\nTMSimulator.prototype.clear = function () {\n  this.sourceCode = null;\n};\n\nObject.defineProperties(TMSimulator.prototype, {\n  /**\n   * The machine's source code.\n   * • Setting a new source code will attempt to persist the state node positions.\n   * • To set a new machine, first call .clear(), then set the source code.\n   */\n  sourceCode: {\n    get: function () {\n      return this.__sourceCode;\n    },\n    // throws if sourceCode has errors\n    set: function (sourceCode) {\n      if (this.machine) {\n        this.machine.isRunning = false; // important\n      }\n      if (sourceCode == null) {\n        // clear display\n        this.machine = null;\n        this.container.innerHTML = '';\n      } else {\n        // parse & check, then set\n        var spec = parseSpec(sourceCode);\n        if (this.machine) {\n          // case: update\n          // copy & restore positions, clear & load contents\n          var posTable = this.machine.positionTable;\n          this.clear();\n          this.machine = new TMViz(this.container, spec, posTable);\n        } else {\n          // case: load new\n          this.machine = new TMViz(this.container, spec);\n        }\n      }\n      this.__sourceCode = sourceCode;\n    },\n    enumerable: true\n  },\n  positionTable: {\n    get: function () {\n      return this.machine && this.machine.positionTable;\n    },\n    set: function (posTable) {\n      if (this.machine && posTable) {\n        this.machine.positionTable = posTable;\n      }\n    },\n    enumerable: true\n  },\n  machine: {\n    get: function () {\n      return this.__machine;\n    },\n    set: function (machine) {\n      this.__machine = machine;\n      this.rebindButtons();\n    }\n  }\n});\n\n/////////////\n// Buttons //\n/////////////\n\n/**\n * The innerHTML for the \"Run\" button.\n * The default value can be overridden.\n * @type {string}\n */\nTMSimulator.prototype.htmlForRunButton =\n  '<span class=\"glyphicon glyphicon-play\" aria-hidden=\"true\"></span><br>Run';\nTMSimulator.prototype.htmlForPauseButton =\n  '<span class=\"glyphicon glyphicon-pause\" aria-hidden=\"true\"></span><br>Pause';\n\n// bind: .disabled for Step and Run, and .innerHTML (Run/Pause) for Run\nfunction rebindStepRun(stepButton, runButton, runHTML, pauseHTML, machine) {\n  function onHaltedChange(isHalted) {\n    stepButton.disabled = isHalted;\n    runButton.disabled = isHalted;\n  }\n  function onRunningChange(isRunning) {\n    runButton.innerHTML = isRunning ? pauseHTML : runHTML;\n  }\n  watchInit(machine, 'isHalted', function (prop, oldval, isHalted) {\n    onHaltedChange(isHalted);\n    return isHalted;\n  });\n  watchInit(machine, 'isRunning', function (prop, oldval, isRunning) {\n    onRunningChange(isRunning);\n    return isRunning;\n  });\n}\n\n// internal method.\nTMSimulator.prototype.rebindButtons = function () {\n  var buttons = this.buttons;\n  var enable = (this.machine != null);\n  if (enable) {\n    rebindStepRun(buttons.step, buttons.run,\n      this.htmlForRunButton, this.htmlForPauseButton, this.machine);\n  }\n  buttons.all.forEach(function (b) { b.disabled = !enable; });\n};\n\nmodule.exports = TMSimulator;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/TMSimulator.js\n ** module id = 39\n ** module chunks = 1\n **/","var map = {\n\t\"./_template.yaml\": 21,\n\t\"./binaryAdd.yaml\": 22,\n\t\"./binaryIncrement.yaml\": 23,\n\t\"./binaryMult.yaml\": 24,\n\t\"./busyBeaver3.yaml\": 25,\n\t\"./busyBeaver4.yaml\": 26,\n\t\"./copy1s.yaml\": 27,\n\t\"./divisibleBy3.yaml\": 28,\n\t\"./divisibleBy3Base10.yaml\": 29,\n\t\"./lengthMult.yaml\": 30,\n\t\"./matchBinaryStrings.yaml\": 31,\n\t\"./matchThreeLengths.yaml\": 32,\n\t\"./palindrome.yaml\": 33,\n\t\"./powersOfTwo.yaml\": 34,\n\t\"./repeat01.yaml\": 35,\n\t\"./unaryMult.yaml\": 36\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 40;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/examples ./~/raw-loader!^\\.\\/.*\\.yaml$\n ** module id = 40\n ** module chunks = 1\n **/","'use strict';\n/**\n * Displays a table of keyboard shortcuts.\n */\n\nvar d3 = require('d3');\n\nfunction identity(x) { return x; }\n\n/**\n * Renders a table, using three layers of list nesting: tbody, tr, td.\n * @param  {[ [[HTML]] ]}     data\n * @param  {HTMLTableElement} table\n * @return {D3Selection}            D3 selection of the <tbody> elements\n */\nfunction renderTable(data, table) {\n  var tbody = d3.select(table).selectAll('tbody')\n      .data(data)\n    .enter().append('tbody');\n\n  var tr = tbody.selectAll('tr')\n      .data(identity)\n    .enter().append('tr');\n\n  tr.selectAll('td')\n      .data(identity)\n    .enter().append('td')\n      .html(identity);\n\n  return tbody;\n}\n\n\n// type Key = string;\n// type KeyList = [Key];\n\n// Key -> Key\nfunction abbreviateKey(key) {\n  switch (key) {\n    case 'Command': return 'Cmd';\n    case 'Option':  return 'Opt';\n    case 'Up':      return '↑';\n    case 'Down':    return '↓';\n    case 'Left':    return '←';\n    case 'Right':   return '→';\n    default:        return key;\n  }\n}\n\n// KeyList -> HTML\nfunction keylistToHTML(keys) {\n  return keys.map(function (key) {\n    return '<kbd>' + key + '</kbd>';\n  }).join('-');\n}\n\n// Commands -> String -> KeyList\nfunction createGetKeylist(commands) {\n  var platform = commands.platform;\n  // workaround: some ace keybindings for Mac use Alt instead of Option\n  var altToOption = platform !== 'mac' ? identity : function (key) {\n    return (key === 'Alt') ? 'Option' : key;\n  };\n\n  return function getKeylist(name) {\n    return commands.commands[name].bindKey[platform].split('-').map(altToOption);\n  };\n}\n\n\n// Fills a <table> with some default keyboard shortcuts.\nfunction main(commands, table) {\n  var getKeylist = createGetKeylist(commands);\n\n  return renderTable(entries.map(function (group) {\n    return group.map(function (d) {\n      return [\n        keylistToHTML(getKeylist(d.name).map(abbreviateKey)),\n        d.desc\n      ];\n    });\n  }), table);\n}\n\nvar entries = [\n  [\n    { name: 'save', desc: 'Load machine<br> <small>Save changes and load the machine.</small>' }\n  ], [\n    { name: 'togglecomment', desc: 'Toggle comment' },\n    { name: 'indent', desc: 'Indent selection' },\n    { name: 'outdent', desc: 'Unindent selection' }\n  ], [\n    { name: 'movelinesup', desc: 'Move line up' },\n    { name: 'movelinesdown', desc: 'Move line down' },\n    { name: 'duplicateSelection', desc: 'Duplicate line/selection' }\n  ], [\n    { name: 'selectMoreAfter', desc: 'Add next occurrence to selection<br> <small>Like a quick “find”. Useful for renaming things.</small>' },\n    { name: 'find', desc: 'Find' },\n    { name: 'replace', desc: 'Find and Replace' }\n  ]\n];\n\n\nexports.main = main;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/kbdshortcuts.js\n ** module id = 41\n ** module chunks = 1\n **/","'use strict';\n\n// var d3 = require('d3');\nvar $ = require('jquery'); // for event delegation\n\nfunction identity(x) { return x; }\nfunction head(array) { return array[0]; }\n\n/**\n * A <table> that includes a checkbox in front of each row,\n * and a header checkbox to (de)select all rows.\n * @param {D3Selection<HTMLTableElement>} args.table empty table to use\n * @param {[string]}    [args.headers] column headers\n * @param {[[string]]}  [args.data]    table data\n */\nfunction CheckboxTable(args) {\n  this.table = args.table;\n  this.headerRow = this.table.append('thead').append('tr');\n  this.tbody = this.table.append('tbody');\n  // header checkbox (selects/deselects all checkboxes)\n  var self = this;\n  this.headerCheckbox = this.headerRow\n    .append('th')\n      .attr('class', 'checkbox-cell')\n    .append('input')\n      .attr('type', 'checkbox')\n      .on('click', /* @this checkbox */ function () {\n        self.getCheckboxes().property('checked', this.checked);\n        self.onChange();\n      });\n  $(this.tbody.node()).on('click', 'tr', /* @this tr */ function (e) {\n    // treat whole <tr> as click zone\n    if (e.target.tagName !== 'INPUT') {\n      var box = this.querySelector('input[type=\"checkbox\"]');\n      box.checked = !box.checked;\n    }\n    // update header checkbox\n    self.refresh();\n    self.onChange();\n  });\n  // content\n  args.headers && this.setHeaders(args.headers);\n  args.data && this.setData(args.data);\n}\n\n/**\n * Set the column headers.\n * @param {[string]} headers\n */\nCheckboxTable.prototype.setHeaders = function (headers) {\n  var th = this.headerRow\n    .selectAll('th:not(.checkbox-cell)')\n      .data(headers);\n  th.exit().remove();\n  th.enter().append('th');\n  th.text(identity);\n};\n\n/**\n * Set the table body data.\n *\n * Each row begins with a checkbox whose .value is the first cell.\n * Rows are keyed by the first cell when updating data.\n * @param {[[string]]} data\n * @return this\n */\nCheckboxTable.prototype.setData = function (data) {\n  var tr = this.tbody.selectAll('tr')\n      .data(data, head);\n  tr.exit().remove();\n  tr.enter()\n    .append('tr')\n  // checkbox at the start of each row\n    .append('td')\n      .attr('class', 'checkbox-cell')\n    .append('input')\n      .attr({\n        type: 'checkbox',\n        value: head\n      });\n  tr.order();\n  // row cells\n  var td = tr.selectAll('td:not(.checkbox-cell)')\n      .data(identity);\n  td.exit().remove();\n  td.enter().append('td');\n  td.text(identity);\n\n  return this;\n};\n\nCheckboxTable.prototype.getCheckboxes = function () {\n  return this.tbody.selectAll('input[type=\"checkbox\"]');\n};\n\nCheckboxTable.prototype.getCheckedValues = function () {\n  return this.tbody.selectAll('input[type=\"checkbox\"]:checked')[0]\n    .map(function (x) { return x.value; });\n};\n\nCheckboxTable.prototype.isCheckedEmpty = function () {\n  var headerBox = this.headerCheckbox.node();\n  return !(headerBox.checked || headerBox.indeterminate);\n};\n\n/**\n * Refresh the header checkbox (called after a row checkbox is toggled).\n */\nCheckboxTable.prototype.refresh = function () {\n  var headerBox = this.headerCheckbox.node();\n  var boxes = this.getCheckboxes();\n\n  var total = boxes.size();\n  var checked = boxes.filter(':checked').size();\n  if (checked === 0) {\n    headerBox.checked = false;\n  } else if (checked === total) {\n    headerBox.checked = true;\n  }\n  headerBox.indeterminate = (0 < checked && checked < total);\n};\n\n// configurable. called after a click toggles a row or header checkbox.\nCheckboxTable.prototype.onChange = function () {\n};\n\nmodule.exports = CheckboxTable;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sharing/CheckboxTable.js\n ** module id = 42\n ** module chunks = 1\n **/","'use strict';\n\n/* global FileReader:false */\nvar Promise = require('bluebird'); // eslint-disable-line no-shadow\n\n// arguments are forwarded to FileReader.readAsText\n// (Blob, ?encoding) -> Promise\nfunction readAsText() {\n  var args = arguments;\n  return new Promise(function (resolve, reject, onCancel) {\n    var reader = new FileReader();\n    reader.addEventListener('load', function () {\n      resolve(reader.result);\n    });\n    reader.addEventListener('error', function () {\n      reject(reader.error);\n    });\n    onCancel && onCancel(function () {\n      try { reader.abort(); } catch (e) {/* */}\n    });\n\n    reader.readAsText.apply(reader, args);\n  });\n}\n\nexports.readAsText = readAsText;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sharing/FileReaderPromise.js\n ** module id = 43\n ** module chunks = 1\n **/","'use strict';\n\n/* eslint-env browser */\nvar format = require('./format');\nvar createGist = require('./gist').createGist;\nvar Clipboard = require('clipboard');\nvar $ = require('jquery'); // for bootstrap tooltip\n\n// https://github.com/Modernizr/Modernizr/blob/master/feature-detects/a/download.js\nvar canUseDownloadAttribute =\n  !window.externalHost && 'download' in document.createElement('a');\n\n// can copy to clipboard programmatically?\nvar canUseCopyCommand = (function () {\n  try {\n    return document.queryCommandSupported('copy');\n  } catch (e) {\n    return false;\n  }\n}());\n\n// Add event handlers to select an HTMLInputElement's text on focus.\nfunction addSelectOnFocus(element) {\n  element.addEventListener('focus', function selectAll(e) {\n    e.target.select();\n  });\n  // Safari workaround\n  element.addEventListener('mouseup', function (e) {\n    e.preventDefault();\n  });\n}\n\n// Show a one-time tooltip.\n// NB. an existing title attribute overrides the tooltip options.\nfunction showTransientTooltip($element, options) {\n  $element.tooltip(options)\n    .tooltip('show')\n    .one('hidden.bs.tooltip', function () {\n      $element.tooltip('destroy');\n    });\n}\n\nfunction showCopiedTooltip(element) {\n  showTransientTooltip($(element), {title: 'Copied!', placement: 'bottom'});\n}\n\n\n///////////////////////\n// Share with GitHub //\n///////////////////////\n\n/**\n * Generate a new gist and display a shareable link.\n * @param  {HTMLElement} container  Container to use for displaying the link.\n * @param  {HTMLButtonElement} button\n * @param  {string} filename\n * @param  {string} contents  The file contents.\n * @return {Promise}          Cancellable promise to create the gist.\n */\nfunction generateGist(container, button, filename, contents) {\n  var oldButtonText = button.textContent;\n  button.textContent = 'Loading…';\n  button.disabled = true;\n\n  var payload = {\n    files: {},\n    // TODO: set description & public\n    // description: 'Turing machine for turingmachine.io',\n    description: 'Sample document'\n    // public: true\n  };\n  payload.files[filename] = {content: contents};\n\n  return createGist(payload).then(function (response) {\n    // Show link on success\n    var id = response.id;\n    showGeneratedGist(container, 'http://turingmachine.io/?import-gist=' + id);\n  }).catch(function (reason) {\n    // Alert error on failure\n    var message = (function () {\n      var xhr = reason.xhr;\n      try {\n        return 'Response from GitHub: “' + xhr.responseJSON.message + '”';\n      } catch (e) {\n        if (xhr.status > 0) {\n          return 'HTTP status code: ' + xhr.status + ' ' + xhr.statusText;\n        } else {\n          return 'GitHub could not be reached.\\nYour Internet connection may be offline.';\n        }\n      }\n    }());\n    alert('Could not create new gist.\\n\\n' + message);\n\n    button.disabled = false;\n    button.textContent = oldButtonText;\n  });\n}\n\nfunction showGeneratedGist(container, url) {\n  container.innerHTML =\n    '<input id=\"sharedPermalink\" type=\"url\" class=\"form-control\" readonly>' +\n    '<button type=\"button\" class=\"btn btn-default\" data-clipboard-target=\"#sharedPermalink\">' +\n    '<span class=\"glyphicon glyphicon-copy\" aria-hidden=\"true\"></span>' +\n    '</button>';\n  var urlInput = container.querySelector('input');\n  urlInput.value = url;\n  urlInput.size = url.length + 2;\n  addSelectOnFocus(urlInput);\n  urlInput.focus();\n}\n\nfunction createGenerateGistButton(container) {\n  container.innerHTML =\n  '<button type=\"button\" class=\"btn btn-default\">Create permalink</button>' +\n  '<p class=\"help-block\">This will create and link to a new' +\n    ' <a href=\"https://help.github.com/articles/creating-gists/#creating-an-anonymous-gist\"' +\n    ' target=\"_blank\">read-only</a> GitHub gist.' +\n  '</p>';\n  return container.querySelector('button');\n}\n\n\n///////////////////\n// Download file //\n///////////////////\n\n// Create a link button if canUseDownloadAttribute, otherwise a link with instructions.\nfunction createDownloadLink(filename, contents) {\n  var link = document.createElement('a');\n  link.href = 'data:text/x-yaml;charset=utf-8,' + encodeURIComponent(contents);\n  link.target = '_blank';\n  link.download = filename;\n\n  if (canUseDownloadAttribute) {\n    link.textContent = 'Download document';\n    link.className = 'btn btn-primary';\n    return link;\n  } else {\n    link.textContent = 'Right-click here and choose “Save target as…” or “Download Linked File As…”';\n    var p = document.createElement('p');\n    p.innerHTML = ', <br>then name the file to end with <code>.yaml</code>';\n    p.insertBefore(link, p.firstChild);\n    return p;\n  }\n}\n\n\n////////////\n// Common //\n////////////\n\nfunction init(args) {\n  var $dialog = args.$dialog,\n      getCurrentDocument = args.getCurrentDocument,\n      getIsSynced = args.getIsSynced,\n      gistContainer = args.gistContainer,\n      downloadContainer = args.downloadContainer,\n      textarea = args.textarea;\n\n  if (canUseDownloadAttribute) {\n    $dialog.addClass('download-attr');\n  }\n  if (!canUseCopyCommand) {\n    $dialog.addClass('no-copycommand');\n  }\n  gistContainer.className = 'form-group form-inline';\n  addSelectOnFocus(textarea);\n\n  function setupDialog() {\n    var doc = getCurrentDocument();\n    var filename = doc.name + '.yaml';\n    var contents = format.stringifyDocument(doc);\n    var gistPromise;\n\n    // warn about unsynced changes\n    var $alert;\n    if (!getIsSynced()) {\n      $alert = $(\n        '<div class=\"alert alert-warning\" role=\"alert\">' +\n        'The code editor has <strong>unsynced changes</strong> and might not correspond with the diagram.<br>' +\n        'Click <q>Load machine</q> to try to sync them. Otherwise, two sets of code will be exported.' +\n        '</div>'\n      ).prependTo($dialog.find('.modal-body'));\n    }\n\n    createGenerateGistButton(gistContainer).addEventListener('click', function (e) {\n      gistPromise = generateGist(gistContainer, e.target, filename, contents);\n    });\n\n    // \"Download document\" button link\n    downloadContainer.appendChild(createDownloadLink(filename, contents));\n    // <textarea> for document contents\n    textarea.value = contents;\n    // workaround \"Copy to clipboard\" .focus() scrolling down to <textarea>\n    // note: doesn't work when <textarea> is completely out of view\n    textarea.setSelectionRange(0,0);\n\n    var clipboard = new Clipboard('[data-clipboard-target]');\n    clipboard.on('success', function (e) {\n      showCopiedTooltip(e.trigger);\n      e.clearSelection();\n    });\n\n    // return cleanup function\n    return function () {\n      if (gistPromise) {\n        try { gistPromise.cancel(); } catch (e) {/* */}\n      }\n      if ($alert) { $alert.remove(); }\n      gistContainer.textContent = '';\n      downloadContainer.textContent = '';\n      textarea.value = '';\n      clipboard.destroy();\n    };\n  }\n\n  $dialog.on('show.bs.modal', function () {\n    var cleanup = setupDialog();\n    $dialog.one('hidden.bs.modal', cleanup);\n  });\n}\n\nexports.init = init;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sharing/export-panel.js\n ** module id = 44\n ** module chunks = 1\n **/","'use strict';\n\n/* global document: false */\nvar docimport = require('./import');\nvar format = require('./format');\nvar _ = require('lodash/fp');\nvar d3 = require('d3');\n\n// Init the import panel and attach event handlers\n// {$dialog: jQuery, gistIDForm: HTMLFormElement, importArgs: Object} -> void\nfunction init(args) {\n  var $dialog = args.$dialog,\n      gistIDForm = args.gistIDForm,\n      importArgs = args.importArgs;\n\n  function hideDialog() {\n    $dialog.modal('hide');\n    // Workaround needed for opening another modal before a modal is done hiding.\n    // Without this, the <body> scrolls instead of the modal:\n    // modal2.show locks body scroll => modal1.hidden unlocks body scroll\n    // while modal2 is still open.\n    var nextDialog = importArgs.dialogNode;\n    $dialog.one('hidden.bs.modal', function () {\n      if (nextDialog.classList.contains('in')) {\n        document.body.classList.add('modal-open');\n      }\n    });\n  }\n\n  // Panel: From GitHub gist\n  gistIDForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    hideDialog();\n\n    var gistID = gistIDForm.querySelector('input[type=\"text\"]').value;\n    docimport.importGist(_.assign({gistID: gistID}, importArgs));\n  });\n\n  // Panel: From files\n  (function () {\n    // TODO: factor out element IDs and containers into interface\n    var panelBody = document.querySelector('#importFilesPanel > .panel-body');\n    // <input type=\"file\">\n    var fileInput = panelBody.querySelector('input[type=\"file\"]');\n    var importFilesButton = document.getElementById('importFilesButton');\n    importFilesButton.addEventListener('click', function () {\n      hideDialog();\n      docimport.importLocalFiles(_.assign({files: fileInput.files}, importArgs));\n    });\n    // <textarea>\n    var textarea = panelBody.querySelector('textarea');\n    var importContentsButton = document.getElementById('importContentsButton');\n    importContentsButton.parentNode.style.position = 'relative';\n    importContentsButton.addEventListener('click', function (e) {\n      if (importDocumentContents(\n        { containers: {status: e.target.parentNode, details: panelBody },\n          importDocument: importArgs.importDocument },\n        textarea.value\n      )) {\n        textarea.select();\n      }\n    });\n  }());\n}\n\n///////////////////////////////\n// Import from pasted string //\n///////////////////////////////\n\n// () -> HTMLButtonElement\nfunction createCloseIcon() {\n  return d3.select(document.createElement('button'))\n      .attr({class: 'close', 'aria-label': 'Close'})\n      .html('<span aria-hidden=\"true\">&times;</span>')\n    .node();\n}\n\n// Show import outcome (success/failure) and error (if any)\n// ({status: HTMLElement, details: HTMLElement}, ?Error) -> void\nfunction showImportContentOutcome(containers, error) {\n  var statusContainer = d3.select(containers.status),\n      detailsContainer = d3.select(containers.details);\n  statusContainer.selectAll('[role=\"alert\"]').remove();\n  detailsContainer.selectAll('.alert').remove();\n  var status = statusContainer.append('span')\n      .attr({role: 'alert'})\n      .style({\n        position: 'absolute', left: 0, width: '40%', // center between left and button\n        top: '50%', transform: 'translateY(-60%)' // center vertically\n      });\n\n  // () -> string\n  function showErrorDetails() {\n    var details = detailsContainer.append('div')\n        .attr({role: 'alert', class: 'alert alert-danger'})\n        .style('margin-top', '1em');\n    details.append(createCloseIcon)\n        .attr('data-dismiss', 'alert')\n        .on('click', function () {\n          status.remove(); // dismiss details => also dismiss status\n        });\n    if (error instanceof format.YAMLException) {\n      details.append('h4').text('Not valid YAML'); // only \".alert h4\" has margin-top: 0\n      details.append('pre').text(error.message);\n    } else if (error instanceof format.InvalidDocumentError) {\n      details.append('span')\n          .text(error.message.replace(/\\.?$/, '.')); // add period if missing\n    } else {\n      details.append('h4').text('Unexpected error');\n      details.append('pre').text(String(error));\n      return 'Import failed';\n    }\n    return 'Not a valid document';\n  }\n\n  if (error) {\n    var statusSummary = showErrorDetails();\n    status.attr({class: 'text-danger'})\n        .html('<span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span> '\n                + statusSummary);\n  } else {\n    status.attr({class: 'text-success'})\n        .html('<span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span> '\n                + 'Import succeeded')\n      .transition()\n        .delay(2500)\n        .duration(2000)\n        .style('opacity', 0)\n        .remove();\n  }\n}\n\n// returns true if import succeeded\nfunction importDocumentContents(opts, content) {\n  var containers = opts.containers,\n      importDocument = opts.importDocument;\n\n  var error = (function () {\n    try {\n      importDocument(format.parseDocument(content));\n    } catch (e) {\n      return e;\n    }\n  }());\n  showImportContentOutcome(containers, error);\n  return (error == null);\n}\n\nexports.init = init;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/sharing/import-panel.js\n ** module id = 45\n ** module chunks = 1\n **/","module.exports = Clipboard;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Clipboard\"\n ** module id = 50\n ** module chunks = 1\n **/"],"sourceRoot":""}